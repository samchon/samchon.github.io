.TH "samchon" 3 "Mon Oct 26 2015" "Version 1.0.0" "Samchon Framework for CPP" \" -*- nroff -*-
.ad l
.nh
.SH NAME
samchon \- Top level namespace of products built from samchon\&.  

.SH SYNOPSIS
.br
.PP
.SS "Namespaces"

.in +1c
.ti -1c
.RI " \fBlibrary\fP"
.br
.RI "\fIPackage of libraries\&. \fP"
.ti -1c
.RI " \fBnamtree\fP"
.br
.RI "\fIPackage of Nam-Tree\&. \fP"
.ti -1c
.RI " \fBprotocol\fP"
.br
.RI "\fIPackage of network protocol and libraries\&. \fP"
.in -1c
.SS "Classes"

.in +1c
.ti -1c
.RI "class \fBByteArray\fP"
.br
.RI "\fIBinary data class\&. \fP"
.ti -1c
.RI "class \fBIndexPair\fP"
.br
.RI "\fIA pair of index and its value(_Ty) \fP"
.ti -1c
.RI "class \fBMap\fP"
.br
.RI "\fI\fBMap\fP\&. \fP"
.ti -1c
.RI "class \fBSmartPointer\fP"
.br
.RI "\fIGlobal shared pointer
.br
\&. \fP"
.ti -1c
.RI "class \fBWeakString\fP"
.br
.RI "\fIA string class only references characeters, reference only\&. \fP"
.in -1c
.SS "Typedefs"

.in +1c
.ti -1c
.RI "template<typename _Ty , typename _Pr  = std::less<std::string>, typename _Alloc  = std::allocator<std::pair<const std::string, _Ty>>> using \fBDictionary\fP = \fBMap\fP< std::string, _Ty, _Pr, _Alloc >"
.br
.RI "\fIA \fBMap\fP key is string\&. \fP"
.in -1c
.SH "Detailed Description"
.PP 
Top level namespace of products built from samchon\&. 


.PD 0

.IP "\(bu" 2
http://samchon.org/ 
.IP "\(bu" 2
https://github.com/samchon/
.PP
 
.PP
\fBAuthor:\fP
.RS 4
Jeongho Nam 
.RE
.PP

.SH "Typedef Documentation"
.PP 
.SS "using \fBDictionary\fP =  \fBMap\fP<std::string, _Ty, _Pr, _Alloc>"

.PP
A \fBMap\fP key is string\&. 
.PP
\fBSee also:\fP
.RS 4
library::Map 
.RE
.PP
\fBAuthor:\fP
.RS 4
Jeongho Nam 
.RE
.PP

.SH "Author"
.PP 
Generated automatically by Doxygen for Samchon Framework for CPP from the source code\&.
