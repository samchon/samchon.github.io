.TH "FTFile" 3 "Mon Oct 26 2015" "Version 1.0.0" "Samchon Framework for CPP" \" -*- nroff -*-
.ad l
.nh
.SH NAME
FTFile \- A file\&.  

.SH SYNOPSIS
.br
.PP
.PP
\fC#include <FTFile\&.hpp>\fP
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBFTFile\fP (\fBFTFolder\fP *)"
.br
.RI "\fIConstruct from parent folder\&. \fP"
.ti -1c
.RI "auto \fBgetExtension\fP () const  \-> std::string"
.br
.RI "\fIGet extension\&. \fP"
.ti -1c
.RI "virtual auto \fBtoXML\fP () const  \-> std::shared_ptr< \fBlibrary::XML\fP >"
.br
.RI "\fIGet an \fBXML\fP object represents the Entity\&. \fP"
.in -1c
.SS "Protected Attributes"

.in +1c
.ti -1c
.RI "std::string \fBextension\fP"
.br
.RI "\fIAn extension of a file\&. \fP"
.in -1c
.SS "Additional Inherited Members"
.SH "Detailed Description"
.PP 
A file\&. 

An abstract class represents a file instance with extension\&.
.PP
 
.PP
\fBSee also:\fP
.RS 4
\fBsamchon::library\fP 
.RE
.PP
\fBAuthor:\fP
.RS 4
Jeongho Nam 
.RE
.PP

.SH "Constructor & Destructor Documentation"
.PP 
.SS "\fBFTFile\fP (\fBFTFolder\fP * parent)"

.PP
Construct from parent folder\&. 
.PP
\fBParameters:\fP
.RS 4
\fIfolder\fP Belonged folder 
.RE
.PP

.SH "Member Function Documentation"
.PP 
.SS "auto toXML () const \-> std::shared_ptr<\fBlibrary::XML\fP>\fC [virtual]\fP"

.PP
Get an \fBXML\fP object represents the Entity\&. Returns an \fBXML\fP object that can represents the Entity containing member variables into properties\&. 
.PP
A member variable (not object, but atomic value like number, string or date) is categorized as a property within the framework of entity side\&. Thus, when overriding a \fBtoXML()\fP method and archiving member variables to an \fBXML\fP object to return, puts each variable to be a property belongs to only an \fBXML\fP object\&. 
.PP
Don't archive the member variable of atomic value to \fBXML::value\fP causing enormouse creation of \fBXML\fP objects to number of member variables\&. An Entity must be represented by only an \fBXML\fP instance (tag)\&. 
.PP
Standard Usage  Non-standard usage abusing value   <memberList>
.br
      <member id='jhnam88' name='Jeongho+Nam' birthdate='1988-03-11' />
.br
      <member id='master' name='Administartor' birthdate='2011-07-28' />
.br
 </memberList>  <member>
.br
      <id>jhnam88</id>
.br
      <name>Jeongho+Nam</name>
.br
      <birthdate>1988-03-11</birthdate>
.br
 </member>   
.PP
\fBReturns:\fP
.RS 4
An \fBXML\fP object representing the Entity\&. 
.RE
.PP

.PP
Reimplemented from \fBFTInstance\fP\&.
.PP
Reimplemented in \fBNTFile\fP\&.
.SH "Member Data Documentation"
.PP 
.SS "std::string extension\fC [protected]\fP"

.PP
An extension of a file\&. \fBFTFile\fP's identifier is composited by name and extension\&. 

.SH "Author"
.PP 
Generated automatically by Doxygen for Samchon Framework for CPP from the source code\&.
