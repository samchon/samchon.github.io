.TH "ServerConnector" 3 "Mon Oct 26 2015" "Version 1.0.0" "Samchon Framework for CPP" \" -*- nroff -*-
.ad l
.nh
.SH NAME
ServerConnector \- A server connector for a physical client\&.  

.SH SYNOPSIS
.br
.PP
.PP
\fC#include <ServerConnector\&.hpp>\fP
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBServerConnector\fP ()"
.br
.RI "\fIDefault Constructor\&. \fP"
.ti -1c
.RI "virtual auto \fBgetIP\fP () const  \-> std::string=0"
.br
.RI "\fIDestinatio IP\&. \fP"
.ti -1c
.RI "virtual auto \fBgetPort\fP () const  \-> int=0"
.br
.RI "\fIDestination port\&. \fP"
.ti -1c
.RI "virtual auto \fBgetMyIP\fP () const  \-> std::string"
.br
.RI "\fI(optional) My IP, if you want to bind \fP"
.ti -1c
.RI "virtual void \fBconnect\fP ()"
.br
.RI "\fIConnect to a server\&. \fP"
.in -1c
.SS "Protected Attributes"

.in +1c
.ti -1c
.RI "boost::asio::io_service * \fBioService\fP"
.br
.RI "\fIAn io_service of Boost\&.Asio's own\&. \fP"
.ti -1c
.RI "EndPoint * \fBendPoint\fP"
.br
.RI "\fIAn endpoint directing a server\&. \fP"
.ti -1c
.RI "EndPoint * \fBlocalEndPoint\fP"
.br
.RI "\fI(Optional) An local endpoint of the client (my system) \fP"
.in -1c
.SS "Additional Inherited Members"
.SH "Detailed Description"
.PP 
A server connector for a physical client\&. 

\fBServerConnector\fP is a class for a physical client connecting a server\&. If you want to connect to a server, then implements this \fBServerConnector\fP and just override some methods like \fBgetIP()\fP, \fBgetPort()\fP and \fBreplyData()\fP\&. That's all\&. 
.PP
In Samchon Framework, package protocol, There are basic 3 + 1 components that can make any type of network system in Samchon Framework\&. The basic 3 components are \fBIProtocol\fP, \fBIServer\fP and \fBIClient\fP\&. The last, surplus one is the \fBServerConnector\fP\&. Looking around classes in Samchon Framework, especially module master and slave which are designed for realizing distributed processing systems and parallel processing systems, physical client classes are all derived from this \fBServerConnector\fP\&. 
.PP
 
.PP
\fBAuthor:\fP
.RS 4
Jeongho Nam 
.RE
.PP

.SH "Member Function Documentation"
.PP 
.SS "void connect ()\fC [virtual]\fP"

.PP
Connect to a server\&. Connects to a server with configured ip address and port number\&. After connection, listens data replied from the server (\fBIClient::listen()\fP)\&. 
.PP
\fBNote:\fP
.RS 4
It monopolies a thread 
.RE
.PP

.PP
Reimplemented in \fBWebServerConnector\fP\&.
.SH "Member Data Documentation"
.PP 
.SS "EndPoint* localEndPoint\fC [protected]\fP"

.PP
(Optional) An local endpoint of the client (my system) An local endpoint fof my system\&. It binds my ip to custom\&. It acts when my_ip is configured\&. If the my_ip is not configured, does not act\&. 

.SH "Author"
.PP 
Generated automatically by Doxygen for Samchon Framework for CPP from the source code\&.
