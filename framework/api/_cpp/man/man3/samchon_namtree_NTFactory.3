.TH "NTFactory" 3 "Mon Oct 26 2015" "Version 1.0.0" "Samchon Framework for CPP" \" -*- nroff -*-
.ad l
.nh
.SH NAME
NTFactory \- A factory for Nam-Tree objects\&.  

.SH SYNOPSIS
.br
.PP
.PP
\fC#include <NTFactory\&.hpp>\fP
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBNTFactory\fP (\fBNTEntityGroup\fP *)"
.br
.RI "\fIConstruct from historical(studying) data\&. \fP"
.ti -1c
.RI "virtual auto \fBcreateCriteria\fP (\fBNTCriteria\fP *, std::shared_ptr< \fBlibrary::XML\fP >) \-> \fBNTCriteria\fP *"
.br
.RI "\fIFactory method of a \fBNTCriteria\fP\&. \fP"
.ti -1c
.RI "virtual auto \fBcreateSide\fP (std::shared_ptr< \fBlibrary::XML\fP >) \-> \fBNTSide\fP *"
.br
.RI "\fIFactory method of a \fBNTSide\fP\&. \fP"
.in -1c
.SS "Protected Attributes"

.in +1c
.ti -1c
.RI "\fBNTEntityGroup\fP * \fBdata\fP"
.br
.RI "\fIA entity gorup containing historical data\&. \fP"
.ti -1c
.RI "\fBDictionary\fP< SideFunction > \fBsideFunctionMap\fP"
.br
.RI "\fIA dictionary of function pointers\&. \fP"
.in -1c
.SH "Detailed Description"
.PP 
A factory for Nam-Tree objects\&. 

\fBNTFactory\fP class is a FTFactory and an abstract class creating and managing Nam-Tree objects\&. When overriding nam-tree module, do not override methods \fIcreateChild()\fP of file or criteria objects like \fBNTFile\fP, \fBNTCriteria\fP and \fBNTSide\fP\&. Only overrides method of creation in the \fBNTFactory\fP\&. 
.PP
.PD 0
.IP "\(bu" 2
Creator method of history data is not in \fBNTFactory\fP\&. It must be done by hand of user\&.
.PP
.PP
 
.PP
 
.PP
\fBNote:\fP
.RS 4
.RE
.PP
Previous version of the Samchon Framework, \fBNTFile\fP class had a function script on the \fBNTFile\fP and Nam-Tree module compiled the script like Nam-Tree moudle of Flex standalone that is keeping the compiling method\&. 
.PP
However, modern Samchon Framework's C++ \fBNTFile\fP class doesn't have a function script and does not compile\&. I don't know a way to compile a script in lots of operating systems, so I dropped the compiling method\&. Until update, \fBNTFactory\fP has function pointers in a Dictionary and \fBNTFile\fP reference them\&. Users must put own methods into the Dictionary by their hands\&. 
.PP
I will solve the problem sooon\&. Until next generation of Samchon Framework, put your own function pointers to a Dictionary in \fBNTFactory\fP by your hand please\&. Sorry for my unripe skill on programming\&. 
.PP
\fBSee also:\fP
.RS 4
\fBsamchon::namtree\fP 
.RE
.PP
\fBAuthor:\fP
.RS 4
Jeongho Nam 
.RE
.PP

.SH "Constructor & Destructor Documentation"
.PP 
.SS "\fBNTFactory\fP (\fBNTEntityGroup\fP * data)"

.PP
Construct from historical(studying) data\&. 
.PP
\fBParameters:\fP
.RS 4
\fIentity\fP A group of history data\&. 
.RE
.PP

.SH "Member Function Documentation"
.PP 
.SS "auto createCriteria (\fBNTCriteria\fP *, std::shared_ptr< \fBlibrary::XML\fP >) \-> \fBNTCriteria\fP*\fC [virtual]\fP"

.PP
Factory method of a \fBNTCriteria\fP\&. 
.PP
\fBParameters:\fP
.RS 4
\fIparent\fP A parent \fBNTCriteria\fP object  xml An xml object for discriminating type\&. 
.RE
.PP
\fBReturns:\fP
.RS 4
A NTCrteria object representing a logical conditional\&. 
.RE
.PP

.SS "auto createSide (std::shared_ptr< \fBlibrary::XML\fP >) \-> \fBNTSide\fP*\fC [virtual]\fP"

.PP
Factory method of a \fBNTSide\fP\&. 
.PP
\fBParameters:\fP
.RS 4
\fIxml\fP An xml oject for distriminating type\&. 
.RE
.PP
\fBReturns:\fP
.RS 4
A \fBNTSide\fP object which means a side of a logical condition\&. 
.RE
.PP


.SH "Author"
.PP 
Generated automatically by Doxygen for Samchon Framework for CPP from the source code\&.
