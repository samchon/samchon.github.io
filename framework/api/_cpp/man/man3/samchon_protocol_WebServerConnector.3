.TH "WebServerConnector" 3 "Mon Oct 26 2015" "Version 1.0.0" "Samchon Framework for CPP" \" -*- nroff -*-
.ad l
.nh
.SH NAME
WebServerConnector \- A web-socket server connector\&.  

.SH SYNOPSIS
.br
.PP
.PP
\fC#include <WebServerConnector\&.hpp>\fP
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBWebServerConnector\fP ()"
.br
.RI "\fIDefault Constructor\&. \fP"
.ti -1c
.RI "virtual void \fBconnect\fP () override"
.br
.RI "\fIConnect to a server following web-socket protoocol\&. \fP"
.in -1c
.SS "Additional Inherited Members"
.SH "Detailed Description"
.PP 
A web-socket server connector\&. 

\fBWebServerConnector\fP is a \fBServerConnector\fP following web-socket protocol\&. 
.PP
\fB[Inherited]\fP
.RS 4

.RE
.PP
\fBServerConnector\fP is a class for a physical client connecting a server\&. If you want to connect to a server, then implements this \fBServerConnector\fP and just override some methods like \fBgetIP()\fP, \fBgetPort()\fP and \fBreplyData()\fP\&. That's all\&. 
.PP
In Samchon Framework, package protocol, There are basic 3 + 1 components that can make any type of network system in Samchon Framework\&. The basic 3 components are \fBIProtocol\fP, \fBIServer\fP and \fBIClient\fP\&. The last, surplus one is the \fBServerConnector\fP\&. Looking around classes in Samchon Framework, especially module master and slave which are designed for realizing distributed processing systems and parallel processing systems, physical client classes are all derived from this \fBServerConnector\fP\&. 
.PP
 
.PP
\fBAuthor:\fP
.RS 4
Jeongho Nam 
.RE
.PP


.SH "Author"
.PP 
Generated automatically by Doxygen for Samchon Framework for CPP from the source code\&.
