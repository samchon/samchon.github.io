.TH "IndexPair< _Ty >" 3 "Mon Oct 26 2015" "Version 1.0.0" "Samchon Framework for CPP" \" -*- nroff -*-
.ad l
.nh
.SH NAME
IndexPair< _Ty > \- A pair of index and its value(_Ty)  

.SH SYNOPSIS
.br
.PP
.PP
\fC#include <IndexPair\&.hpp>\fP
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "auto \fBgetIndex\fP () const  \-> size_t"
.br
.RI "\fIGet index\&. \fP"
.ti -1c
.RI "auto \fBgetValue\fP () \-> _Ty &"
.br
.RI "\fIGet const value\&. \fP"
.ti -1c
.RI "auto \fBgetValue\fP () const  \-> const _Ty &"
.br
.RI "\fIGet value\&. \fP"
.in -1c
.SH "Detailed Description"
.PP 

.SS "template<class _Ty>class samchon::IndexPair< _Ty >"
A pair of index and its value(_Ty) 

\fBIndexPair\fP is a std::pair<size_t, _Ty> class\&. 
.PP
\fBIndexPair\fP expresses index and value\&. It's useful for expressing finding literals, specified object, calculating mininum or maximum with its position\&. 
.PP
\fB[Inherited] \fP
.RS 4

.RE
.PP
This class couples together a pair of values, which may be of different types (T1 and T2)\&. The individual values can be accessed through its public members first and second\&. 
.PP
Pairs are a particular case of tuple\&. 
.PP
Referenced comments of std::pair 
.PP
.PD 0
.IP "\(bu" 2
http://www.cplusplus.com/reference/utility/pair/
.PP
\fBAuthor:\fP
.RS 4
Jeongho Nam 
.RE
.PP

.SH "Member Function Documentation"
.PP 
.SS "auto getIndex () const \-> size_t
		\fC [inline]\fP"

.PP
Get index\&. 
.PP
\fBReturns:\fP
.RS 4
Index of the pair 
.RE
.PP

.SS "auto getValue () \-> _Ty&
		\fC [inline]\fP"

.PP
Get const value\&. 
.PP
\fBReturns:\fP
.RS 4
Reference of value of the pair 
.RE
.PP

.SS "auto getValue () const \-> const _Ty&
		\fC [inline]\fP"

.PP
Get value\&. 
.PP
\fBReturns:\fP
.RS 4
Const reference of value of the pair 
.RE
.PP


.SH "Author"
.PP 
Generated automatically by Doxygen for Samchon Framework for CPP from the source code\&.
