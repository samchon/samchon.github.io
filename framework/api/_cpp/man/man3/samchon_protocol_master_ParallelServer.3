.TH "ParallelServer" 3 "Mon Oct 26 2015" "Version 1.0.0" "Samchon Framework for CPP" \" -*- nroff -*-
.ad l
.nh
.SH NAME
ParallelServer \- A network driver for a parallel server\&.  

.SH SYNOPSIS
.br
.PP
.PP
\fC#include <ParallelServer\&.hpp>\fP
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBParallelServer\fP ()"
.br
.RI "\fIDefault Constructor\&. \fP"
.ti -1c
.RI "virtual void \fBconstruct\fP (std::shared_ptr< \fBlibrary::XML\fP >) override"
.br
.RI "\fIConstruct data of the \fBEntity\fP from an XML object\&. \fP"
.ti -1c
.RI "virtual auto \fBtoXML\fP () const  \-> std::shared_ptr< \fBlibrary::XML\fP > override"
.br
.RI "\fIGet an XML object represents the \fBEntityGroup\fP\&. \fP"
.in -1c
.SS "Additional Inherited Members"
.SH "Detailed Description"
.PP 
A network driver for a parallel server\&. 

\fBParallelServer\fP is an \fBParallelSystem\fP specialized in server driver\&. 
.PP
\fB[Inherited]\fP
.RS 4

.RE
.PP
\fBParallelSystem\fP class is an \fBExternalSystem\fP having performance index and history logs of handled \fBInvoke\fP messages with those elapsed times\&. Those performance index and history logs are used to determine how much segmentation to be allocated\&. 
.PP
Each segmentation in requested process (\fBInvoke\fP message) is equivalent\&. Thus, role of \fBParallelSystem\fP objects in a \fBParallelSystemArray\fP are almost same and does not need to specify \fBExternalSystemRole\fP on \fBParallelSystem\fP\&. 
.PP
.PD 0
.IP "\(bu" 2
Not a matter to specifying \fBExternalSystemRole\fP objects to each \fBParallelSystem\fP\&. In that case, \fBInvoke\fP messages having segmentation size will be processed by \fBParallelSystem\fP's own logic and \fBInvoke\fP messages without segmentation size will be handled by ordinary logic of \fBExternalSystem\fP's own\&.
.PP
.PP
 
.PP
\fB[Inherited]\fP
.RS 4

.RE
.PP

.SH "Member Function Documentation"
.PP 
.SS "virtual void construct (std::shared_ptr< \fBlibrary::XML\fP > xml)\fC [override]\fP, \fC [virtual]\fP"

.PP
Construct data of the \fBEntity\fP from an XML object\&. Constructs the \fBEntityGroup\fP's own member variables only from the input XML object\&. 
.PP
Do not consider about constructing children \fBEntity\fP objects' data in \fBEntityGroup::construct()\fP\&. Those children \fBEntity\fP objects' data will constructed by their own \fBconstruct()\fP method\&. Even insertion of XML objects representing children are done by abstract method of \fBEntityGroup::toXML()\fP\&. 
.PP
Constructs only data of \fBEntityGroup\fP's own\&. 
.PP
\fB[Inherited]\fP
.RS 4
Construct data of the \fBEntity\fP from an XML object\&. 
.RE
.PP
Overrides the \fBconstruct()\fP method and fetch data of member variables from the XML\&. 
.PP
By recommended guidance, data representing member variables are contained in properties of the put XML object\&. 
.PP
\fBParameters:\fP
.RS 4
\fIxml\fP An xml used to construct data of entity 
.RE
.PP

.PP
Reimplemented from \fBExternalServer\fP\&.
.SS "virtual auto toXML () const \-> std::shared_ptr<\fBlibrary::XML\fP>\fC [override]\fP, \fC [virtual]\fP"

.PP
Get an XML object represents the \fBEntityGroup\fP\&. Archives the \fBEntityGroup\fP's own member variables only to the returned XML object\&. 
.PP
Do not consider about archiving children \fBEntity\fP objects' data in \fBEntityGroup::toXML()\fP\&. Those children \fBEntity\fP objects will converted to XML object by their own \fBtoXML()\fP method\&. The insertion of XML objects representing children are done by abstract method of \fBEntityGroup::toXML()\fP\&. 
.PP
Archives only data of \fBEntityGroup\fP's own\&. 
.PP
\fB[Inherited]\fP
.RS 4
Get an XML object represents the \fBEntity\fP\&. 
.RE
.PP
Returns an XML object that can represents the \fBEntity\fP containing member variables into properties\&. 
.PP
A member variable (not object, but atomic value like number, string or date) is categorized as a property within the framework of entity side\&. Thus, when overriding a \fBtoXML()\fP method and archiving member variables to an XML object to return, puts each variable to be a property belongs to only an XML object\&. 
.PP
Don't archive the member variable of atomic value to XML::value causing enormouse creation of XML objects to number of member variables\&. An \fBEntity\fP must be represented by only an XML instance (tag)\&. 
.PP
Standard Usage  Non-standard usage abusing value   <memberList>
.br
      <member id='jhnam88' name='Jeongho+Nam' birthdate='1988-03-11' />
.br
      <member id='master' name='Administartor' birthdate='2011-07-28' />
.br
 </memberList>  <member>
.br
      <id>jhnam88</id>
.br
      <name>Jeongho+Nam</name>
.br
      <birthdate>1988-03-11</birthdate>
.br
 </member>   
.PP
\fBReturns:\fP
.RS 4
An XML object representing the \fBEntity\fP\&. 
.RE
.PP

.PP
Reimplemented from \fBExternalServer\fP\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for Samchon Framework for CPP from the source code\&.
