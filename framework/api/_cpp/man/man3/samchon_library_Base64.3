.TH "Base64" 3 "Mon Oct 26 2015" "Version 1.0.0" "Samchon Framework for CPP" \" -*- nroff -*-
.ad l
.nh
.SH NAME
Base64 \- Utility class for base64 format's en-decoding\&.  

.SH SYNOPSIS
.br
.PP
.PP
\fC#include <Base64\&.hpp>\fP
.SS "Static Public Member Functions"

.in +1c
.ti -1c
.RI "static auto \fBencode\fP (const \fBByteArray\fP &) \-> std::string"
.br
.RI "\fIEncode from binary data to base64-string\&. \fP"
.ti -1c
.RI "static auto \fBdecode\fP (const std::string &) \-> \fBByteArray\fP"
.br
.RI "\fIDecode from base64-string to binary data\&. \fP"
.in -1c
.SH "Detailed Description"
.PP 
Utility class for base64 format's en-decoding\&. 

\fBBase64\fP supports 
.PD 0

.IP "\(bu" 2
Encoding from binary data to base64-string 
.IP "\(bu" 2
Decoding from base64-string to binary data
.PP
 
.PP
\fBSee also:\fP
.RS 4
\fBsamchon::library\fP 
.RE
.PP
\fBAuthor:\fP
.RS 4
Jeongho Nam 
.RE
.PP

.SH "Member Function Documentation"
.PP 
.SS "auto encode (const \fBByteArray\fP & byteArray) \-> std::string\fC [static]\fP"

.PP
Encode from binary data to base64-string\&. Encodes a binary data to base64-string
.PP
\fBParameters:\fP
.RS 4
\fIbyteArray\fP binary data you want to encode 
.RE
.PP
\fBReturns:\fP
.RS 4
A base64-string encoded from binary data 
.RE
.PP

.SS "auto decode (const std::string & str) \-> \fBByteArray\fP\fC [static]\fP"

.PP
Decode from base64-string to binary data\&. Decodes a base64 encoded string to binary data
.PP
\fBNote:\fP
.RS 4
If the encoded string is not whole but a part of the binary data, Base64Decoder will be better 
.RE
.PP
\fBParameters:\fP
.RS 4
\fIstr\fP A encoded string representing binary data as base64 format 
.RE
.PP
\fBReturns:\fP
.RS 4
A binary data decoded from string 
.RE
.PP


.SH "Author"
.PP 
Generated automatically by Doxygen for Samchon Framework for CPP from the source code\&.
