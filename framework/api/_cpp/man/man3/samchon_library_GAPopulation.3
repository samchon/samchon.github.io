.TH "GAPopulation< GeneArray, Compare >" 3 "Mon Oct 26 2015" "Version 1.0.0" "Samchon Framework for CPP" \" -*- nroff -*-
.ad l
.nh
.SH NAME
GAPopulation< GeneArray, Compare > \- A population of a generation in G\&.A\&.  

.SH SYNOPSIS
.br
.PP
.PP
\fC#include <GAPopulation\&.hpp>\fP
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBGAPopulation\fP (std::shared_ptr< GeneArray > geneArray, size_t size)"
.br
.RI "\fIConstruct from a GeneArray and size of the population\&. \fP"
.ti -1c
.RI "auto \fBfitTest\fP () const  \-> std::shared_ptr< GeneArray >"
.br
.RI "\fITest fitness of each GeneArray in the population\&. \fP"
.in -1c
.SS "Private Member Functions"

.in +1c
.ti -1c
.RI "\fBGAPopulation\fP (size_t size)"
.br
.RI "\fIPrivate Constructor with population\&. \fP"
.in -1c
.SS "Private Attributes"

.in +1c
.ti -1c
.RI "std::vector< std::shared_ptr< GeneArray > > \fBchildren\fP"
.br
.RI "\fIGenes representing the population\&. \fP"
.in -1c
.SH "Detailed Description"
.PP 

.SS "template<typename GeneArray, typename Compare = std::less<GeneArray>>class samchon::library::GAPopulation< GeneArray, Compare >"
A population of a generation in G\&.A\&. 

\fBGAPopulation\fP is a class representing population of candidate genes(sequence listing) having an array of GeneArray as a member\&. \fBGAPopulation\fP also manages initial set of genes and handles fitting test direclty by the method \fIfitTest\fP\&. 
.PP
The success of evolution of genetic alogirhtm is depend on the \fBGAPopulation\fP's initial set and fitting test\&. (GeneArray and Compare\&.) 
.PP
 
.PP
\fBTemplate Parameters:\fP
.RS 4
\fIGeneArray\fP 
.RE
.PP
An array(std::vector) containing genes as elments; sequnce listing 
.PP
The GeneArray must be a type of \fIstd::vector\fP\&. 
.PP
\fBTemplate Parameters:\fP
.RS 4
\fICompare\fP A comparison class (or struct) returns whether left gene is more optimal\&.
.br

.br
 Default template parameter of Compare is \fIstd::less<GeneArray>\fP\&. It means to compare two std::vector (GeneArray must be a std::vector)\&. Thus, you've to keep follwing rules\&.
.br

.br
 If you don't want to follow the rules or want a custom comparison class, you have to realize a comparison class\&. The following code is an example realizing the comparison class\&. 
.PP
.nf
- GeneArray is inherited from <i>std::vector</i>
- GeneArray has custom <i>auto operator<(const GeneArray &) const -> bool</i>

.fi
.PP
.RE
.PP
.PP
.nf
template <typename _Ty>
struct MyCompare
{
auto operator()(const _Ty &newObj, const _Ty &prevObj) const -> bool;
};
.fi
.PP
.PP
\fBWarning:\fP
.RS 4
.RE
.PP
Be careful for the mistakes of direction or position of Compare\&. 
.PP
Most of logical errors failed to access optimal solution are occured by those mistakens\&. 
.PP
\fBSee also:\fP
.RS 4
\fBlibrary::GeneticAlgorithm\fP 
.PP
\fBsamchon::library\fP 
.RE
.PP
\fBAuthor:\fP
.RS 4
Jeonghoh Nam 
.RE
.PP

.SH "Constructor & Destructor Documentation"
.PP 
.SS "\fBGAPopulation\fP (size_t size)\fC [inline]\fP, \fC [private]\fP"

.PP
Private Constructor with population\&. Private constructor of \fBGAPopulation\fP does not create children (candidate genes) but fills only \fInullptr\fP repeatedly following the size\&. 
.PP
The private constructor is only for and handled by \fBGeneticAlgorithm\fP\&. 
.PP
\fBParameters:\fP
.RS 4
\fIsize\fP Size of the population 
.RE
.PP

.SS "\fBGAPopulation\fP (std::shared_ptr< GeneArray > geneArray, size_t size)\fC [inline]\fP"

.PP
Construct from a GeneArray and size of the population\&. Constructor with initial set of genes and size of the population\&. 
.PP
The public constructor creates GeneArray(s) as population (size) having shuffled genes which are came from the initial set of genes (geneArray)\&. 
.PP
\fBNote:\fP
.RS 4
The success of genetic algorithm is depend on the initial genes(geneArray)\&.
.RE
.PP
\fBParameters:\fP
.RS 4
\fIgeneArray\fP An initial sequence listing 
.br
\fIsize\fP The size of population to have as children 
.RE
.PP

.SH "Member Function Documentation"
.PP 
.SS "auto fitTest () const \-> std::shared_ptr<GeneArray>
			\fC [inline]\fP"

.PP
Test fitness of each GeneArray in the population\&. 
.PP
\fBReturns:\fP
.RS 4
The best GeneArray in the population 
.RE
.PP


.SH "Author"
.PP 
Generated automatically by Doxygen for Samchon Framework for CPP from the source code\&.
