.TH "TSQLStatement" 3 "Mon Oct 26 2015" "Version 1.0.0" "Samchon Framework for CPP" \" -*- nroff -*-
.ad l
.nh
.SH NAME
TSQLStatement \- A t-sql statement\&.  

.SH SYNOPSIS
.br
.PP
.PP
\fC#include <TSQLStatement\&.hpp>\fP
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "virtual auto \fBtoXML\fP () const  \-> std::shared_ptr< \fBXML\fP > override"
.br
.RI "\fIReturn an \fBXML\fP representing records\&. \fP"
.in -1c
.SS "Additional Inherited Members"
.SH "Detailed Description"
.PP 
A t-sql statement\&. 

\fBTSQLStatement\fP is a \fBSQLStatement\fP for adjusting domain function f T-SQL, 'FOR \fBXML\fP' statement\&. 
.PP
\fB[Inherited]\fP
.RS 4

.RE
.PP
A \fBSQLStatement\fP instance is used to executing a SQL statement and returning the results it produces against a SQL database that is opened through a \fBSQLi\fP instance\&. 
.PP
Through the \fBSQLi\fP, it's the reason why a principle of DBMS, DBMS system doesn't allow simultaneous query from a session (connection)\&. Only a query (process) is allowed at a time\&. If you try to simultaneous query from a \fBSQLi\fP, ODBC throws error\&. To avoid the error, an execute of query from \fBSQLStatement\fP will lock a mutex of \fBSQLi\fP to ensure exclusiveness\&. 
.PP
 
.PP
\fBNote:\fP
.RS 4
.RE
.PP
To ensure the exclusiveness, you've to make \fBSQLStatement\fP from \fBSQLi\fP\&. Do not make \fBSQLStatement\fP by yourself\&. call SQLi::createSQLStatement() instead\&. Even you make a derived class from \fBSQLStatement\fP, don't make its constructor to have public accessor\&. 
.PP
Becuase execution of a sql statement causes lock on mutex in \fBSQLi\fP, you've to destruct the \fBSQLStatement\fP or call \fBSQLStatement::free()\fP method()\&. If you don't, the mutex will not be unlocked, thus you can't do anything by the \fBSQLi\fP\&. 
.PP
\fBSee also:\fP
.RS 4
\fBsamchon::library\fP 
.RE
.PP
\fBAuthor:\fP
.RS 4
Jeongho Nam 
.RE
.PP

.SH "Member Function Documentation"
.PP 
.SS "auto toXML () const \-> std::shared_ptr<\fBXML\fP>\fC [override]\fP, \fC [virtual]\fP"

.PP
Return an \fBXML\fP representing records\&. Get an \fBXML\fP object generated from a sql statement containing 'FOR \fBXML\fP'
.PP
\fBReturns:\fP
.RS 4
\fBXML\fP represents records 
.RE
.PP

.PP
Reimplemented from \fBSQLStatement\fP\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for Samchon Framework for CPP from the source code\&.
