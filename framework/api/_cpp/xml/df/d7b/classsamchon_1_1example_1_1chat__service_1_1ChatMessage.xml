<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.10">
  <compounddef id="df/d7b/classsamchon_1_1example_1_1chat__service_1_1ChatMessage" kind="class" language="C++" prot="public">
    <compoundname>samchon::example::chat_service::ChatMessage</compoundname>
    <basecompoundref refid="d0/d3e/classsamchon_1_1protocol_1_1Entity" prot="public" virt="non-virtual">Entity</basecompoundref>
    <includes refid="d2/d30/ChatMessage_8hpp" local="no">ChatMessage.hpp</includes>
      <sectiondef kind="protected-type">
      <memberdef kind="typedef" id="df/d7b/classsamchon_1_1example_1_1chat__service_1_1ChatMessage_1ad39e9e1084298d459f378d1d4ab340e3" prot="protected" static="no">
        <type><ref refid="d0/d3e/classsamchon_1_1protocol_1_1Entity" kindref="compound">protocol::Entity</ref></type>
        <definition>typedef protocol::Entity super</definition>
        <argsstring></argsstring>
        <name>super</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/OneDrive/Project/Samchon/framework/cpp/samchon/examples/chat_service/ChatMessage.hpp" line="28" column="1" bodyfile="D:/OneDrive/Project/Samchon/framework/cpp/samchon/examples/chat_service/ChatMessage.hpp" bodystart="28" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="df/d7b/classsamchon_1_1example_1_1chat__service_1_1ChatMessage_1acf217f33ee0216bc314e30597ea92d7e" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string orator</definition>
        <argsstring></argsstring>
        <name>orator</name>
        <briefdescription>
<para>An orator, who told. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/OneDrive/Project/Samchon/framework/cpp/samchon/examples/chat_service/ChatMessage.hpp" line="39" column="1" bodyfile="D:/OneDrive/Project/Samchon/framework/cpp/samchon/examples/chat_service/ChatMessage.hpp" bodystart="33" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="df/d7b/classsamchon_1_1example_1_1chat__service_1_1ChatMessage_1a3775bc7759ade969c51fd75883ddc25f" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string listener</definition>
        <argsstring></argsstring>
        <name>listener</name>
        <briefdescription>
<para>A listener, target of whispering. </para>        </briefdescription>
        <detaileddescription>
<para>If there&apos;s not a listener to whisper, the value is &quot;ALL&quot;. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/OneDrive/Project/Samchon/framework/cpp/samchon/examples/chat_service/ChatMessage.hpp" line="45" column="1" bodyfile="D:/OneDrive/Project/Samchon/framework/cpp/samchon/examples/chat_service/ChatMessage.hpp" bodystart="45" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="df/d7b/classsamchon_1_1example_1_1chat__service_1_1ChatMessage_1a36bd74109f547f7f8198faf5a12d2879" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string message</definition>
        <argsstring></argsstring>
        <name>message</name>
        <briefdescription>
<para>A message, what to say. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/OneDrive/Project/Samchon/framework/cpp/samchon/examples/chat_service/ChatMessage.hpp" line="50" column="1" bodyfile="D:/OneDrive/Project/Samchon/framework/cpp/samchon/examples/chat_service/ChatMessage.hpp" bodystart="50" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="df/d7b/classsamchon_1_1example_1_1chat__service_1_1ChatMessage_1a0d32bf5b31cc10a3ea17ae79215f2c35" prot="protected" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>auto</type>
        <definition>virtual auto TAG</definition>
        <argsstring>() const  -&gt; std::string</argsstring>
        <name>TAG</name>
        <reimplements refid="d0/d3e/classsamchon_1_1protocol_1_1Entity_1a974f48d92f0ef494a8d2c879f82c6426">TAG</reimplements>
        <briefdescription>
<para>A tag name when represented by XML. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>A tag name </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/OneDrive/Project/Samchon/framework/cpp/samchon/examples/chat_service/ChatMessage.hpp" line="30" column="1" bodyfile="D:/OneDrive/Project/Samchon/framework/cpp/samchon/examples/chat_service/ChatMessage.hpp" bodystart="30" bodyend="33"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="df/d7b/classsamchon_1_1example_1_1chat__service_1_1ChatMessage_1ad5c81d015d01930997c1dee4ae48c006" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>ChatMessage</definition>
        <argsstring>()</argsstring>
        <name>ChatMessage</name>
        <briefdescription>
<para>Default Constructor. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/OneDrive/Project/Samchon/framework/cpp/samchon/examples/chat_service/ChatMessage.hpp" line="59" column="1" bodyfile="D:/OneDrive/Project/Samchon/framework/cpp/samchon/examples/chat_service/ChatMessage.cpp" bodystart="13" bodyend="16"/>
      </memberdef>
      <memberdef kind="function" id="df/d7b/classsamchon_1_1example_1_1chat__service_1_1ChatMessage_1a94c3267fcea2647f94409ff3697c2ee4" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>virtual ~ChatMessage</definition>
        <argsstring>()=default</argsstring>
        <name>~ChatMessage</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/OneDrive/Project/Samchon/framework/cpp/samchon/examples/chat_service/ChatMessage.hpp" line="60" column="1"/>
      </memberdef>
      <memberdef kind="function" id="df/d7b/classsamchon_1_1example_1_1chat__service_1_1ChatMessage_1a74c1a3e11210762d4968faeee1c60841" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void construct</definition>
        <argsstring>(std::shared_ptr&lt; library::XML &gt;)</argsstring>
        <name>construct</name>
        <reimplements refid="d0/d3e/classsamchon_1_1protocol_1_1Entity_1ac1489c595f4d9e9ceb6fb91463ae195c">construct</reimplements>
        <param>
          <type>std::shared_ptr&lt; <ref refid="d5/d37/classsamchon_1_1library_1_1XML" kindref="compound">library::XML</ref> &gt;</type>
        </param>
        <briefdescription>
<para>Construct data of the Entity from an XML object. </para>        </briefdescription>
        <detaileddescription>
<para>Overrides the <ref refid="df/d7b/classsamchon_1_1example_1_1chat__service_1_1ChatMessage_1a74c1a3e11210762d4968faeee1c60841" kindref="member">construct()</ref> method and fetch data of member variables from the XML. </para><para>By recommended guidance, data representing member variables are contained in properties of the put XML object. </para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>xml</parametername>
</parameternamelist>
<parameterdescription>
<para>An xml used to construct data of entity </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/OneDrive/Project/Samchon/framework/cpp/samchon/examples/chat_service/ChatMessage.hpp" line="62" column="1" bodyfile="D:/OneDrive/Project/Samchon/framework/cpp/samchon/examples/chat_service/ChatMessage.cpp" bodystart="17" bodyend="26"/>
      </memberdef>
      <memberdef kind="function" id="df/d7b/classsamchon_1_1example_1_1chat__service_1_1ChatMessage_1a01f1afa6837a9eb8e6891c4f433f0a46" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>auto</type>
        <definition>auto getListener</definition>
        <argsstring>() const  -&gt; std::string</argsstring>
        <name>getListener</name>
        <briefdescription>
<para>Get listener. </para>        </briefdescription>
        <detaileddescription>
<para>Used to determine which (physical) client will get the message. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/OneDrive/Project/Samchon/framework/cpp/samchon/examples/chat_service/ChatMessage.hpp" line="71" column="1" bodyfile="D:/OneDrive/Project/Samchon/framework/cpp/samchon/examples/chat_service/ChatMessage.cpp" bodystart="31" bodyend="34"/>
      </memberdef>
      <memberdef kind="function" id="df/d7b/classsamchon_1_1example_1_1chat__service_1_1ChatMessage_1ae1c1e56eb0b3e41f12170628475a7d2a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>auto</type>
        <definition>auto toXML</definition>
        <argsstring>() const  -&gt; std::shared_ptr&lt; library::XML &gt;</argsstring>
        <name>toXML</name>
        <reimplements refid="d0/d3e/classsamchon_1_1protocol_1_1Entity_1ae1c1e56eb0b3e41f12170628475a7d2a">toXML</reimplements>
        <briefdescription>
<para>Get an XML object represents the Entity. </para>        </briefdescription>
        <detaileddescription>
<para>Returns an XML object that can represents the Entity containing member variables into properties. </para><para>A member variable (not object, but atomic value like number, string or date) is categorized as a property within the framework of entity side. Thus, when overriding a <ref refid="df/d7b/classsamchon_1_1example_1_1chat__service_1_1ChatMessage_1ae1c1e56eb0b3e41f12170628475a7d2a" kindref="member">toXML()</ref> method and archiving member variables to an XML object to return, puts each variable to be a property belongs to only an XML object. </para><para>Don&apos;t archive the member variable of atomic value to XML::value causing enormouse creation of XML objects to number of member variables. An Entity must be represented by only an XML instance (tag). </para><para><table rows="2" cols="2"><row>
<entry thead="yes"><para>Standard Usage  </para></entry><entry thead="yes"><para>Non-standard usage abusing value   </para></entry></row>
<row>
<entry thead="no"><para>&lt;memberList&gt;<linebreak/>
 <nonbreakablespace/><nonbreakablespace/><nonbreakablespace/><nonbreakablespace/> &lt;member id=&apos;jhnam88&apos; name=&apos;Jeongho+Nam&apos; birthdate=&apos;1988-03-11&apos; /&gt;<linebreak/>
 <nonbreakablespace/><nonbreakablespace/><nonbreakablespace/><nonbreakablespace/> &lt;member id=&apos;master&apos; name=&apos;Administartor&apos; birthdate=&apos;2011-07-28&apos; /&gt;<linebreak/>
 &lt;/memberList&gt;  </para></entry><entry thead="no"><para>&lt;member&gt;<linebreak/>
 <nonbreakablespace/><nonbreakablespace/><nonbreakablespace/><nonbreakablespace/> &lt;id&gt;jhnam88&lt;/id&gt;<linebreak/>
 <nonbreakablespace/><nonbreakablespace/><nonbreakablespace/><nonbreakablespace/> &lt;name&gt;Jeongho+Nam&lt;/name&gt;<linebreak/>
 <nonbreakablespace/><nonbreakablespace/><nonbreakablespace/><nonbreakablespace/> &lt;birthdate&gt;1988-03-11&lt;/birthdate&gt;<linebreak/>
 &lt;/member&gt;   </para></entry></row>
</table>
</para><para><simplesect kind="return"><para>An XML object representing the Entity. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/OneDrive/Project/Samchon/framework/cpp/samchon/examples/chat_service/ChatMessage.hpp" line="73" column="1" bodyfile="D:/OneDrive/Project/Samchon/framework/cpp/samchon/examples/chat_service/ChatMessage.cpp" bodystart="35" bodyend="44"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>A chat message. </para>    </briefdescription>
    <detaileddescription>
<para>An entity class representing a chat message. </para><para><image type="html" name="example_chat_service.png"></image>
 <image type="latex" name="example_chat_service.png"></image>
</para><para><simplesect kind="author"><para>Jeongho Nam </para></simplesect>
</para>    </detaileddescription>
    <inheritancegraph>
      <node id="983">
        <label>Entity</label>
        <link refid="d0/d3e/classsamchon_1_1protocol_1_1Entity"/>
      </node>
      <node id="982">
        <label>ChatMessage</label>
        <link refid="df/d7b/classsamchon_1_1example_1_1chat__service_1_1ChatMessage"/>
        <childnode refid="983" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="985">
        <label>Entity</label>
        <link refid="d0/d3e/classsamchon_1_1protocol_1_1Entity"/>
      </node>
      <node id="984">
        <label>ChatMessage</label>
        <link refid="df/d7b/classsamchon_1_1example_1_1chat__service_1_1ChatMessage"/>
        <childnode refid="985" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="D:/OneDrive/Project/Samchon/framework/cpp/samchon/examples/chat_service/ChatMessage.hpp" line="26" column="1" bodyfile="D:/OneDrive/Project/Samchon/framework/cpp/samchon/examples/chat_service/ChatMessage.hpp" bodystart="24" bodyend="74"/>
    <listofallmembers>
      <member refid="df/d7b/classsamchon_1_1example_1_1chat__service_1_1ChatMessage_1ad5c81d015d01930997c1dee4ae48c006" prot="public" virt="non-virtual"><scope>samchon::example::chat_service::ChatMessage</scope><name>ChatMessage</name></member>
      <member refid="df/d7b/classsamchon_1_1example_1_1chat__service_1_1ChatMessage_1a74c1a3e11210762d4968faeee1c60841" prot="public" virt="virtual"><scope>samchon::example::chat_service::ChatMessage</scope><name>construct</name></member>
      <member refid="d0/d3e/classsamchon_1_1protocol_1_1Entity_1afb4718a8ca5b822cf88129ae04240489" prot="public" virt="non-virtual"><scope>samchon::example::chat_service::ChatMessage</scope><name>Entity</name></member>
      <member refid="df/d7b/classsamchon_1_1example_1_1chat__service_1_1ChatMessage_1a01f1afa6837a9eb8e6891c4f433f0a46" prot="public" virt="non-virtual"><scope>samchon::example::chat_service::ChatMessage</scope><name>getListener</name></member>
      <member refid="d0/d3e/classsamchon_1_1protocol_1_1Entity_1a5f7b0261859ce45be6fc2cef64026183" prot="public" virt="virtual"><scope>samchon::example::chat_service::ChatMessage</scope><name>key</name></member>
      <member refid="df/d7b/classsamchon_1_1example_1_1chat__service_1_1ChatMessage_1a3775bc7759ade969c51fd75883ddc25f" prot="private" virt="non-virtual"><scope>samchon::example::chat_service::ChatMessage</scope><name>listener</name></member>
      <member refid="df/d7b/classsamchon_1_1example_1_1chat__service_1_1ChatMessage_1a36bd74109f547f7f8198faf5a12d2879" prot="private" virt="non-virtual"><scope>samchon::example::chat_service::ChatMessage</scope><name>message</name></member>
      <member refid="df/d7b/classsamchon_1_1example_1_1chat__service_1_1ChatMessage_1acf217f33ee0216bc314e30597ea92d7e" prot="private" virt="non-virtual"><scope>samchon::example::chat_service::ChatMessage</scope><name>orator</name></member>
      <member refid="df/d7b/classsamchon_1_1example_1_1chat__service_1_1ChatMessage_1ad39e9e1084298d459f378d1d4ab340e3" prot="protected" virt="non-virtual"><scope>samchon::example::chat_service::ChatMessage</scope><name>super</name></member>
      <member refid="df/d7b/classsamchon_1_1example_1_1chat__service_1_1ChatMessage_1a0d32bf5b31cc10a3ea17ae79215f2c35" prot="protected" virt="virtual"><scope>samchon::example::chat_service::ChatMessage</scope><name>TAG</name></member>
      <member refid="df/d7b/classsamchon_1_1example_1_1chat__service_1_1ChatMessage_1ae1c1e56eb0b3e41f12170628475a7d2a" prot="public" virt="virtual"><scope>samchon::example::chat_service::ChatMessage</scope><name>toXML</name></member>
      <member refid="df/d7b/classsamchon_1_1example_1_1chat__service_1_1ChatMessage_1a94c3267fcea2647f94409ff3697c2ee4" prot="public" virt="virtual"><scope>samchon::example::chat_service::ChatMessage</scope><name>~ChatMessage</name></member>
      <member refid="d0/d3e/classsamchon_1_1protocol_1_1Entity_1a07d18d40fa0c4b4f1341cfddc0b600dd" prot="public" virt="virtual"><scope>samchon::example::chat_service::ChatMessage</scope><name>~Entity</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
