<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.10">
  <compounddef id="df/d42/classsamchon_1_1protocol_1_1ExternalSystem" kind="class" language="C++" prot="public" abstract="yes">
    <compoundname>samchon::protocol::ExternalSystem</compoundname>
    <basecompoundref refid="d4/deb/classsamchon_1_1protocol_1_1EntityGroup" prot="public" virt="virtual">samchon::protocol::EntityGroup&lt; ExternalSystemRole &gt;</basecompoundref>
    <basecompoundref refid="d3/dc8/classsamchon_1_1protocol_1_1IClient" prot="public" virt="virtual">IClient</basecompoundref>
    <derivedcompoundref refid="dc/dfd/classsamchon_1_1protocol_1_1ExternalClient" prot="public" virt="virtual">ExternalClient</derivedcompoundref>
    <derivedcompoundref refid="df/d4a/classsamchon_1_1protocol_1_1ExternalServer" prot="public" virt="virtual">ExternalServer</derivedcompoundref>
    <derivedcompoundref refid="db/d2d/classsamchon_1_1protocol_1_1master_1_1DistributedSystem" prot="public" virt="virtual">DistributedSystem</derivedcompoundref>
    <derivedcompoundref refid="d9/d6b/classsamchon_1_1protocol_1_1master_1_1ParallelSystem" prot="public" virt="virtual">ParallelSystem</derivedcompoundref>
    <derivedcompoundref refid="d1/d4a/classsamchon_1_1protocol_1_1slave_1_1SlaveSystem" prot="public" virt="virtual">SlaveSystem</derivedcompoundref>
    <includes refid="d4/d5d/ExternalSystem_8hpp" local="no">ExternalSystem.hpp</includes>
      <sectiondef kind="protected-type">
      <memberdef kind="typedef" id="df/d42/classsamchon_1_1protocol_1_1ExternalSystem_1a3c66810ce5e48f4441529afb8cd37bcc" prot="protected" static="no">
        <type><ref refid="db/d64/namespacesamchon_1_1protocol_1aad78260d3d142da970db113839ab3e52" kindref="member">SharedEntityArray</ref>&lt; <ref refid="d4/db7/classsamchon_1_1protocol_1_1ExternalSystemRole" kindref="compound">ExternalSystemRole</ref> &gt;</type>
        <definition>typedef SharedEntityArray&lt;ExternalSystemRole&gt; super</definition>
        <argsstring></argsstring>
        <name>super</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/OneDrive/Project/Samchon/framework/cpp/samchon/protocol/ExternalSystem.hpp" line="51" column="1" bodyfile="D:/OneDrive/Project/Samchon/framework/cpp/samchon/protocol/ExternalSystem.hpp" bodystart="51" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="df/d42/classsamchon_1_1protocol_1_1ExternalSystem_1a9b45b3e13bd9167aab02e17e08916231" prot="protected" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string name</definition>
        <argsstring></argsstring>
        <name>name</name>
        <briefdescription>
<para>A name can identify an external system. </para>        </briefdescription>
        <detaileddescription>
<para>The name must be unique in <ref refid="d9/dc6/classsamchon_1_1protocol_1_1ExternalSystemArray" kindref="compound">ExternalSystemArray</ref>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/OneDrive/Project/Samchon/framework/cpp/samchon/protocol/ExternalSystem.hpp" line="58" column="1" bodyfile="D:/OneDrive/Project/Samchon/framework/cpp/samchon/protocol/ExternalSystem.hpp" bodystart="58" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="df/d42/classsamchon_1_1protocol_1_1ExternalSystem_1a319b95015f17a3dc8b4b43a65c541571" prot="protected" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string ip</definition>
        <argsstring></argsstring>
        <name>ip</name>
        <briefdescription>
<para>An ip address of an external system. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/OneDrive/Project/Samchon/framework/cpp/samchon/protocol/ExternalSystem.hpp" line="63" column="1" bodyfile="D:/OneDrive/Project/Samchon/framework/cpp/samchon/protocol/ExternalSystem.hpp" bodystart="63" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="df/d42/classsamchon_1_1protocol_1_1ExternalSystem_1a63c89c04d1feae07ca35558055155ffb" prot="protected" static="no" mutable="no">
        <type>int</type>
        <definition>int port</definition>
        <argsstring></argsstring>
        <name>port</name>
        <briefdescription>
<para>A port number of an external system. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/OneDrive/Project/Samchon/framework/cpp/samchon/protocol/ExternalSystem.hpp" line="68" column="1" bodyfile="D:/OneDrive/Project/Samchon/framework/cpp/samchon/protocol/ExternalSystem.hpp" bodystart="68" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="df/d42/classsamchon_1_1protocol_1_1ExternalSystem_1a6e60022a9f417171874972fda77f6b42" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>ExternalSystem</definition>
        <argsstring>()</argsstring>
        <name>ExternalSystem</name>
        <briefdescription>
<para>Default Constructor. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/OneDrive/Project/Samchon/framework/cpp/samchon/protocol/ExternalSystem.hpp" line="77" column="1" bodyfile="D:/OneDrive/Project/Samchon/framework/cpp/samchon/protocol/ExternalSystem.cpp" bodystart="15" bodyend="19"/>
      </memberdef>
      <memberdef kind="function" id="df/d42/classsamchon_1_1protocol_1_1ExternalSystem_1ace3eaec0a1864ab10a9a6e815c0eba58" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>virtual ~ExternalSystem</definition>
        <argsstring>()=default</argsstring>
        <name>~ExternalSystem</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/OneDrive/Project/Samchon/framework/cpp/samchon/protocol/ExternalSystem.hpp" line="78" column="1"/>
      </memberdef>
      <memberdef kind="function" id="df/d42/classsamchon_1_1protocol_1_1ExternalSystem_1a4c4b7d9441b10a734e8ce75e67d0375c" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void construct</definition>
        <argsstring>(std::shared_ptr&lt; library::XML &gt;) override</argsstring>
        <name>construct</name>
        <reimplements refid="d4/deb/classsamchon_1_1protocol_1_1EntityGroup_1a49bad12c4913a280d0249479ee08edc2">construct</reimplements>
        <reimplementedby refid="d7/da8/classsamchon_1_1protocol_1_1master_1_1DistributedServer_1a4ca1bd41b274e7cc42e80b90de4794bc">construct</reimplementedby>
        <reimplementedby refid="d1/da1/classsamchon_1_1protocol_1_1master_1_1ParallelServer_1a4ca1bd41b274e7cc42e80b90de4794bc">construct</reimplementedby>
        <reimplementedby refid="df/d4a/classsamchon_1_1protocol_1_1ExternalServer_1a4c4b7d9441b10a734e8ce75e67d0375c">construct</reimplementedby>
        <reimplementedby refid="d9/d6b/classsamchon_1_1protocol_1_1master_1_1ParallelSystem_1a4c4b7d9441b10a734e8ce75e67d0375c">construct</reimplementedby>
        <reimplementedby refid="db/d2d/classsamchon_1_1protocol_1_1master_1_1DistributedSystem_1a4ca1bd41b274e7cc42e80b90de4794bc">construct</reimplementedby>
        <param>
          <type>std::shared_ptr&lt; <ref refid="d5/d37/classsamchon_1_1library_1_1XML" kindref="compound">library::XML</ref> &gt;</type>
          <declname>xml</declname>
        </param>
        <briefdescription>
<para>Construct data of the <ref refid="d0/d3e/classsamchon_1_1protocol_1_1Entity" kindref="compound">Entity</ref> from an XML object. </para>        </briefdescription>
        <detaileddescription>
<para>Constructs the <ref refid="d4/deb/classsamchon_1_1protocol_1_1EntityGroup" kindref="compound">EntityGroup</ref>&apos;s own member variables only from the input XML object. </para><para>Do not consider about constructing children <ref refid="d0/d3e/classsamchon_1_1protocol_1_1Entity" kindref="compound">Entity</ref> objects&apos; data in <ref refid="d4/deb/classsamchon_1_1protocol_1_1EntityGroup_1a49bad12c4913a280d0249479ee08edc2" kindref="member">EntityGroup::construct()</ref>. Those children <ref refid="d0/d3e/classsamchon_1_1protocol_1_1Entity" kindref="compound">Entity</ref> objects&apos; data will constructed by their own <ref refid="df/d42/classsamchon_1_1protocol_1_1ExternalSystem_1a4c4b7d9441b10a734e8ce75e67d0375c" kindref="member">construct()</ref> method. Even insertion of XML objects representing children are done by abstract method of <ref refid="d4/deb/classsamchon_1_1protocol_1_1EntityGroup_1a30dee0fe2044f2f88579935cc10fc753" kindref="member">EntityGroup::toXML()</ref>. </para><para>Constructs only data of <ref refid="d4/deb/classsamchon_1_1protocol_1_1EntityGroup" kindref="compound">EntityGroup</ref>&apos;s own. </para><para><simplesect kind="par"><title>[Inherited]</title><para>Construct data of the <ref refid="d0/d3e/classsamchon_1_1protocol_1_1Entity" kindref="compound">Entity</ref> from an XML object. </para></simplesect>
Overrides the <ref refid="df/d42/classsamchon_1_1protocol_1_1ExternalSystem_1a4c4b7d9441b10a734e8ce75e67d0375c" kindref="member">construct()</ref> method and fetch data of member variables from the XML. </para><para>By recommended guidance, data representing member variables are contained in properties of the put XML object. </para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>xml</parametername>
</parameternamelist>
<parameterdescription>
<para>An xml used to construct data of entity </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/OneDrive/Project/Samchon/framework/cpp/samchon/protocol/ExternalSystem.hpp" line="80" column="1" bodyfile="D:/OneDrive/Project/Samchon/framework/cpp/samchon/protocol/ExternalSystem.cpp" bodystart="20" bodyend="28"/>
      </memberdef>
      <memberdef kind="function" id="df/d42/classsamchon_1_1protocol_1_1ExternalSystem_1ac0ae5f26cd2001d772aed9d2ea97d41c" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void start</definition>
        <argsstring>()=0</argsstring>
        <name>start</name>
        <reimplementedby refid="df/d4a/classsamchon_1_1protocol_1_1ExternalServer_1a5d5d9ebd12cd3a7d268bc98a3fc7bf97">start</reimplementedby>
        <briefdescription>
<para>Start interaction. </para>        </briefdescription>
        <detaileddescription>
<para>An abstract method starting interaction with an external system. </para><para>If an external systems are a server, starts connection and listening Inovoke message, else clients, just starts listening only. You also can addict your own procudures of starting the driver, but if you directly override method of abstract <ref refid="df/d42/classsamchon_1_1protocol_1_1ExternalSystem" kindref="compound">ExternalSystem</ref>, be careful about virtual inheritance. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/OneDrive/Project/Samchon/framework/cpp/samchon/protocol/ExternalSystem.hpp" line="93" column="1"/>
      </memberdef>
      <memberdef kind="function" id="df/d42/classsamchon_1_1protocol_1_1ExternalSystem_1a8083eb5e1b4528069982a49abe45205f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>auto</type>
        <definition>auto key</definition>
        <argsstring>() const  -&gt; std::string override</argsstring>
        <name>key</name>
        <reimplements refid="d0/d3e/classsamchon_1_1protocol_1_1Entity_1a5f7b0261859ce45be6fc2cef64026183">key</reimplements>
        <briefdescription>
<para>Get a key that can identify the <ref refid="d0/d3e/classsamchon_1_1protocol_1_1Entity" kindref="compound">Entity</ref> uniquely. </para>        </briefdescription>
        <detaileddescription>
<para>If identifier of the <ref refid="d0/d3e/classsamchon_1_1protocol_1_1Entity" kindref="compound">Entity</ref> is not atomic value, returns a string represents the composite identifier. If identifier of the <ref refid="d0/d3e/classsamchon_1_1protocol_1_1Entity" kindref="compound">Entity</ref> is not string, converts the identifier to string and returns the string. </para><para><simplesect kind="return"><para>An identifier </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/OneDrive/Project/Samchon/framework/cpp/samchon/protocol/ExternalSystem.hpp" line="98" column="1" bodyfile="D:/OneDrive/Project/Samchon/framework/cpp/samchon/protocol/ExternalSystem.cpp" bodystart="33" bodyend="36"/>
      </memberdef>
      <memberdef kind="function" id="df/d42/classsamchon_1_1protocol_1_1ExternalSystem_1a5b0e5be870f2d6a26004a8e637a1ce6c" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void replyData</definition>
        <argsstring>(std::shared_ptr&lt; Invoke &gt;) override</argsstring>
        <name>replyData</name>
        <reimplements refid="d4/dcf/classsamchon_1_1protocol_1_1IProtocol_1a8debd8a0f208dbf9778fe66248443317">replyData</reimplements>
        <reimplementedby refid="df/db1/classsamchon_1_1protocol_1_1master_1_1ParallelSlaveSystemMediator_1a5c675c019fe4a91aee5dd8649e550e93">replyData</reimplementedby>
        <reimplementedby refid="d5/d46/classsamchon_1_1protocol_1_1master_1_1DistributedSlaveSystemMediator_1a5c675c019fe4a91aee5dd8649e550e93">replyData</reimplementedby>
        <reimplementedby refid="db/d2d/classsamchon_1_1protocol_1_1master_1_1DistributedSystem_1a5c675c019fe4a91aee5dd8649e550e93">replyData</reimplementedby>
        <param>
          <type>std::shared_ptr&lt; <ref refid="d8/d82/classsamchon_1_1protocol_1_1Invoke" kindref="compound">Invoke</ref> &gt;</type>
        </param>
        <briefdescription>
<para>Handling replied message from an external system. </para>        </briefdescription>
        <detaileddescription>
<para>If there&apos;s a related <ref refid="d4/db7/classsamchon_1_1protocol_1_1ExternalSystemRole" kindref="compound">ExternalSystemRole</ref>, shifts responsibility to the <ref refid="d4/db7/classsamchon_1_1protocol_1_1ExternalSystemRole" kindref="compound">ExternalSystemRole</ref>.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>invoke</parametername>
</parameternamelist>
<parameterdescription>
<para>Replied <ref refid="d8/d82/classsamchon_1_1protocol_1_1Invoke" kindref="compound">Invoke</ref> message </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/OneDrive/Project/Samchon/framework/cpp/samchon/protocol/ExternalSystem.hpp" line="109" column="1" bodyfile="D:/OneDrive/Project/Samchon/framework/cpp/samchon/protocol/ExternalSystem.cpp" bodystart="41" bodyend="48"/>
      </memberdef>
      <memberdef kind="function" id="df/d42/classsamchon_1_1protocol_1_1ExternalSystem_1aa55bc231502ef8e0dd9a9c274d028ac9" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>auto</type>
        <definition>auto TAG</definition>
        <argsstring>() const  -&gt; std::string override</argsstring>
        <name>TAG</name>
        <reimplements refid="d0/d3e/classsamchon_1_1protocol_1_1Entity_1a974f48d92f0ef494a8d2c879f82c6426">TAG</reimplements>
        <reimplementedby refid="df/db1/classsamchon_1_1protocol_1_1master_1_1ParallelSlaveSystemMediator_1ad014a91040b5b0c80cfb2a8e229368ec">TAG</reimplementedby>
        <reimplementedby refid="d5/d46/classsamchon_1_1protocol_1_1master_1_1DistributedSlaveSystemMediator_1ad014a91040b5b0c80cfb2a8e229368ec">TAG</reimplementedby>
        <briefdescription>
<para>A tag name when represented by XML. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>A tag name </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/OneDrive/Project/Samchon/framework/cpp/samchon/protocol/ExternalSystem.hpp" line="115" column="1" bodyfile="D:/OneDrive/Project/Samchon/framework/cpp/samchon/protocol/ExternalSystem.cpp" bodystart="53" bodyend="56"/>
      </memberdef>
      <memberdef kind="function" id="df/d42/classsamchon_1_1protocol_1_1ExternalSystem_1a5cb3666da8a6a0efe4014782bda20af0" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>auto</type>
        <definition>auto CHILD_TAG</definition>
        <argsstring>() const  -&gt; std::string override</argsstring>
        <name>CHILD_TAG</name>
        <reimplements refid="d9/d4c/classsamchon_1_1protocol_1_1IEntityGroup_1abcef66d1cd792f48c12c52ac52198c0f">CHILD_TAG</reimplements>
        <briefdescription>
<para>A tag name of children. </para>        </briefdescription>
        <detaileddescription>
<para>&lt; TAG&gt;<linebreak/>
 <nonbreakablespace/><nonbreakablespace/><nonbreakablespace/><nonbreakablespace/> &lt;CHILD_TAG /&gt;<linebreak/>
 <nonbreakablespace/><nonbreakablespace/><nonbreakablespace/><nonbreakablespace/> &lt;CHILD_TAG /&gt;<linebreak/>
 &lt;/TAG&gt; </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/OneDrive/Project/Samchon/framework/cpp/samchon/protocol/ExternalSystem.hpp" line="116" column="1" bodyfile="D:/OneDrive/Project/Samchon/framework/cpp/samchon/protocol/ExternalSystem.cpp" bodystart="57" bodyend="60"/>
      </memberdef>
      <memberdef kind="function" id="df/d42/classsamchon_1_1protocol_1_1ExternalSystem_1ac0248fcb25b3fa4f463d545005fdcbf3" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>auto</type>
        <definition>auto toXML</definition>
        <argsstring>() const  -&gt; std::shared_ptr&lt; library::XML &gt; override</argsstring>
        <name>toXML</name>
        <reimplements refid="d4/deb/classsamchon_1_1protocol_1_1EntityGroup_1a30dee0fe2044f2f88579935cc10fc753">toXML</reimplements>
        <reimplementedby refid="d7/da8/classsamchon_1_1protocol_1_1master_1_1DistributedServer_1aad9fbd4de53a3243bd213e7158ed2e48">toXML</reimplementedby>
        <reimplementedby refid="d1/da1/classsamchon_1_1protocol_1_1master_1_1ParallelServer_1aad9fbd4de53a3243bd213e7158ed2e48">toXML</reimplementedby>
        <reimplementedby refid="df/d4a/classsamchon_1_1protocol_1_1ExternalServer_1ac0248fcb25b3fa4f463d545005fdcbf3">toXML</reimplementedby>
        <reimplementedby refid="d9/d6b/classsamchon_1_1protocol_1_1master_1_1ParallelSystem_1ac0248fcb25b3fa4f463d545005fdcbf3">toXML</reimplementedby>
        <reimplementedby refid="db/d2d/classsamchon_1_1protocol_1_1master_1_1DistributedSystem_1aad9fbd4de53a3243bd213e7158ed2e48">toXML</reimplementedby>
        <briefdescription>
<para>Get an XML object represents the <ref refid="d4/deb/classsamchon_1_1protocol_1_1EntityGroup" kindref="compound">EntityGroup</ref>. </para>        </briefdescription>
        <detaileddescription>
<para>Archives the <ref refid="d4/deb/classsamchon_1_1protocol_1_1EntityGroup" kindref="compound">EntityGroup</ref>&apos;s own member variables only to the returned XML object. </para><para>Do not consider about archiving children <ref refid="d0/d3e/classsamchon_1_1protocol_1_1Entity" kindref="compound">Entity</ref> objects&apos; data in <ref refid="d4/deb/classsamchon_1_1protocol_1_1EntityGroup_1a30dee0fe2044f2f88579935cc10fc753" kindref="member">EntityGroup::toXML()</ref>. Those children <ref refid="d0/d3e/classsamchon_1_1protocol_1_1Entity" kindref="compound">Entity</ref> objects will converted to XML object by their own <ref refid="df/d42/classsamchon_1_1protocol_1_1ExternalSystem_1ac0248fcb25b3fa4f463d545005fdcbf3" kindref="member">toXML()</ref> method. The insertion of XML objects representing children are done by abstract method of <ref refid="d4/deb/classsamchon_1_1protocol_1_1EntityGroup_1a30dee0fe2044f2f88579935cc10fc753" kindref="member">EntityGroup::toXML()</ref>. </para><para>Archives only data of <ref refid="d4/deb/classsamchon_1_1protocol_1_1EntityGroup" kindref="compound">EntityGroup</ref>&apos;s own. </para><para><simplesect kind="par"><title>[Inherited]</title><para>Get an XML object represents the <ref refid="d0/d3e/classsamchon_1_1protocol_1_1Entity" kindref="compound">Entity</ref>. </para></simplesect>
Returns an XML object that can represents the <ref refid="d0/d3e/classsamchon_1_1protocol_1_1Entity" kindref="compound">Entity</ref> containing member variables into properties. </para><para>A member variable (not object, but atomic value like number, string or date) is categorized as a property within the framework of entity side. Thus, when overriding a <ref refid="df/d42/classsamchon_1_1protocol_1_1ExternalSystem_1ac0248fcb25b3fa4f463d545005fdcbf3" kindref="member">toXML()</ref> method and archiving member variables to an XML object to return, puts each variable to be a property belongs to only an XML object. </para><para>Don&apos;t archive the member variable of atomic value to XML::value causing enormouse creation of XML objects to number of member variables. An <ref refid="d0/d3e/classsamchon_1_1protocol_1_1Entity" kindref="compound">Entity</ref> must be represented by only an XML instance (tag). </para><para><table rows="2" cols="2"><row>
<entry thead="yes"><para>Standard Usage  </para></entry><entry thead="yes"><para>Non-standard usage abusing value   </para></entry></row>
<row>
<entry thead="no"><para>&lt;memberList&gt;<linebreak/>
 <nonbreakablespace/><nonbreakablespace/><nonbreakablespace/><nonbreakablespace/> &lt;member id=&apos;jhnam88&apos; name=&apos;Jeongho+Nam&apos; birthdate=&apos;1988-03-11&apos; /&gt;<linebreak/>
 <nonbreakablespace/><nonbreakablespace/><nonbreakablespace/><nonbreakablespace/> &lt;member id=&apos;master&apos; name=&apos;Administartor&apos; birthdate=&apos;2011-07-28&apos; /&gt;<linebreak/>
 &lt;/memberList&gt;  </para></entry><entry thead="no"><para>&lt;member&gt;<linebreak/>
 <nonbreakablespace/><nonbreakablespace/><nonbreakablespace/><nonbreakablespace/> &lt;id&gt;jhnam88&lt;/id&gt;<linebreak/>
 <nonbreakablespace/><nonbreakablespace/><nonbreakablespace/><nonbreakablespace/> &lt;name&gt;Jeongho+Nam&lt;/name&gt;<linebreak/>
 <nonbreakablespace/><nonbreakablespace/><nonbreakablespace/><nonbreakablespace/> &lt;birthdate&gt;1988-03-11&lt;/birthdate&gt;<linebreak/>
 &lt;/member&gt;   </para></entry></row>
</table>
</para><para><simplesect kind="return"><para>An XML object representing the <ref refid="d0/d3e/classsamchon_1_1protocol_1_1Entity" kindref="compound">Entity</ref>. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/OneDrive/Project/Samchon/framework/cpp/samchon/protocol/ExternalSystem.hpp" line="118" column="1" bodyfile="D:/OneDrive/Project/Samchon/framework/cpp/samchon/protocol/ExternalSystem.cpp" bodystart="62" bodyend="70"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>A network driver for an external system. </para>    </briefdescription>
    <detaileddescription>
<para><ref refid="df/d42/classsamchon_1_1protocol_1_1ExternalSystem" kindref="compound">ExternalSystem</ref> is a boundary class interacting with an external system by network communication. Also, <ref refid="df/d42/classsamchon_1_1protocol_1_1ExternalSystem" kindref="compound">ExternalSystem</ref> is an abstract class that a network role, which one is server and which one is client, is not determined yet. </para><para>The <ref refid="df/d42/classsamchon_1_1protocol_1_1ExternalSystem" kindref="compound">ExternalSystem</ref> has ExternalSystemRole(s) groupped methods, handling <ref refid="d8/d82/classsamchon_1_1protocol_1_1Invoke" kindref="compound">Invoke</ref> message interacting with the external system, by subject or unit of a moudle. The <ref refid="d4/db7/classsamchon_1_1protocol_1_1ExternalSystemRole" kindref="compound">ExternalSystemRole</ref> is categorized in a &apos;control&apos;. </para><para><image type="html" name="protocol_external_system.png"></image>
 <image type="latex" name="protocol_external_system.png"></image>
</para><para><simplesect kind="note"><para></para></simplesect>
The <ref refid="df/d42/classsamchon_1_1protocol_1_1ExternalSystem" kindref="compound">ExternalSystem</ref> class takes a role of interaction with external system in network level. However, within a framework of Samchon Framework, a boundary class like the <ref refid="df/d42/classsamchon_1_1protocol_1_1ExternalSystem" kindref="compound">ExternalSystem</ref> is not such important. You can find some evidence in a relationship between <ref refid="d9/dc6/classsamchon_1_1protocol_1_1ExternalSystemArray" kindref="compound">ExternalSystemArray</ref>, <ref refid="df/d42/classsamchon_1_1protocol_1_1ExternalSystem" kindref="compound">ExternalSystem</ref> and <ref refid="d4/db7/classsamchon_1_1protocol_1_1ExternalSystemRole" kindref="compound">ExternalSystemRole</ref>. </para><para>Of course, the <ref refid="d4/db7/classsamchon_1_1protocol_1_1ExternalSystemRole" kindref="compound">ExternalSystemRole</ref> is belonged to an <ref refid="df/d42/classsamchon_1_1protocol_1_1ExternalSystem" kindref="compound">ExternalSystem</ref>. However, if you access an <ref refid="d4/db7/classsamchon_1_1protocol_1_1ExternalSystemRole" kindref="compound">ExternalSystemRole</ref> from an <ref refid="d9/dc6/classsamchon_1_1protocol_1_1ExternalSystemArray" kindref="compound">ExternalSystemArray</ref> directly, not passing by a belonged <ref refid="df/d42/classsamchon_1_1protocol_1_1ExternalSystem" kindref="compound">ExternalSystem</ref>, and send an <ref refid="d8/d82/classsamchon_1_1protocol_1_1Invoke" kindref="compound">Invoke</ref> message even you&apos;re not knowing which <ref refid="df/d42/classsamchon_1_1protocol_1_1ExternalSystem" kindref="compound">ExternalSystem</ref> is related in, it&apos;s called &quot;Proxy pattern&quot;.</para><para>Like the explanation of &quot;Proxy pattern&quot;, you can utilize an <ref refid="d4/db7/classsamchon_1_1protocol_1_1ExternalSystemRole" kindref="compound">ExternalSystemRole</ref> as a proxy of an <ref refid="df/d42/classsamchon_1_1protocol_1_1ExternalSystem" kindref="compound">ExternalSystem</ref>. With the pattern, you can only concentrate on <ref refid="d4/db7/classsamchon_1_1protocol_1_1ExternalSystemRole" kindref="compound">ExternalSystemRole</ref> itself, what to do with <ref refid="d8/d82/classsamchon_1_1protocol_1_1Invoke" kindref="compound">Invoke</ref> message, irrespective of the <ref refid="d4/db7/classsamchon_1_1protocol_1_1ExternalSystemRole" kindref="compound">ExternalSystemRole</ref> is belonged to which <ref refid="df/d42/classsamchon_1_1protocol_1_1ExternalSystem" kindref="compound">ExternalSystem</ref>. </para><para><simplesect kind="see"><para><ref refid="db/d64/namespacesamchon_1_1protocol" kindref="compound">samchon::protocol</ref> </para></simplesect>
<simplesect kind="author"><para>Jeongho Nam </para></simplesect>
</para>    </detaileddescription>
    <inheritancegraph>
      <node id="1658">
        <label>IProtocol</label>
        <link refid="d4/dcf/classsamchon_1_1protocol_1_1IProtocol"/>
      </node>
      <node id="1659">
        <label>ExternalClient</label>
        <link refid="dc/dfd/classsamchon_1_1protocol_1_1ExternalClient"/>
        <childnode refid="1653" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1668">
        <label>DistributedSlaveServerMediator</label>
        <link refid="d0/d1d/classsamchon_1_1protocol_1_1master_1_1DistributedSlaveServerMediator"/>
        <childnode refid="1667" relation="public-inheritance">
        </childnode>
        <childnode refid="1672" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1670">
        <label>ParallelSystem</label>
        <link refid="d9/d6b/classsamchon_1_1protocol_1_1master_1_1ParallelSystem"/>
        <childnode refid="1653" relation="public-inheritance">
        </childnode>
        <childnode refid="1671" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1654">
        <label>SharedEntityArray&lt; ExternalSystemRole &gt;</label>
        <link refid="d4/deb/classsamchon_1_1protocol_1_1EntityGroup"/>
        <childnode refid="1655" relation="public-inheritance">
        </childnode>
        <childnode refid="1656" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1663">
        <label>DistributedClientServerMediator</label>
        <link refid="dd/d60/classsamchon_1_1protocol_1_1master_1_1DistributedClientServerMediator"/>
        <childnode refid="1662" relation="public-inheritance">
        </childnode>
        <childnode refid="1672" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1672">
        <label>DistributedSlaveSystemMediator</label>
        <link refid="d5/d46/classsamchon_1_1protocol_1_1master_1_1DistributedSlaveSystemMediator"/>
        <childnode refid="1671" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1653">
        <label>ExternalSystem</label>
        <link refid="df/d42/classsamchon_1_1protocol_1_1ExternalSystem"/>
        <childnode refid="1654" relation="public-inheritance">
        </childnode>
        <childnode refid="1657" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1657">
        <label>IClient</label>
        <link refid="d3/dc8/classsamchon_1_1protocol_1_1IClient"/>
        <childnode refid="1658" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1655">
        <label>Entity</label>
        <link refid="d0/d3e/classsamchon_1_1protocol_1_1Entity"/>
      </node>
      <node id="1662">
        <label>SlaveClient</label>
        <link refid="db/d5d/classsamchon_1_1protocol_1_1slave_1_1SlaveClient"/>
        <childnode refid="1659" relation="public-inheritance">
        </childnode>
        <childnode refid="1671" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1666">
        <label>ParallelServer</label>
        <link refid="d1/da1/classsamchon_1_1protocol_1_1master_1_1ParallelServer"/>
        <childnode refid="1664" relation="public-inheritance">
        </childnode>
        <childnode refid="1667" relation="public-inheritance">
        </childnode>
        <childnode refid="1670" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1664">
        <label>ExternalServer</label>
        <link refid="df/d4a/classsamchon_1_1protocol_1_1ExternalServer"/>
        <childnode refid="1653" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1661">
        <label>ParallelClient</label>
        <link refid="d9/dda/classsamchon_1_1protocol_1_1master_1_1ParallelClient"/>
        <childnode refid="1659" relation="public-inheritance">
        </childnode>
        <childnode refid="1662" relation="public-inheritance">
        </childnode>
        <childnode refid="1670" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1667">
        <label>SlaveServer</label>
        <link refid="d2/da4/classsamchon_1_1protocol_1_1slave_1_1SlaveServer"/>
        <childnode refid="1664" relation="public-inheritance">
        </childnode>
        <childnode refid="1671" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1656">
        <label>IEntityGroup</label>
        <link refid="d9/d4c/classsamchon_1_1protocol_1_1IEntityGroup"/>
      </node>
      <node id="1671">
        <label>SlaveSystem</label>
        <link refid="d1/d4a/classsamchon_1_1protocol_1_1slave_1_1SlaveSystem"/>
        <childnode refid="1653" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1665">
        <label>DistributedServer</label>
        <link refid="d7/da8/classsamchon_1_1protocol_1_1master_1_1DistributedServer"/>
        <childnode refid="1664" relation="public-inheritance">
        </childnode>
        <childnode refid="1669" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1660">
        <label>DistributedClient</label>
        <link refid="d2/d26/classsamchon_1_1protocol_1_1master_1_1DistributedClient"/>
        <childnode refid="1659" relation="public-inheritance">
        </childnode>
        <childnode refid="1669" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1669">
        <label>DistributedSystem</label>
        <link refid="db/d2d/classsamchon_1_1protocol_1_1master_1_1DistributedSystem"/>
        <childnode refid="1653" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1678">
        <label>IProtocol</label>
        <link refid="d4/dcf/classsamchon_1_1protocol_1_1IProtocol"/>
      </node>
      <node id="1674">
        <label>SharedEntityArray&lt; ExternalSystemRole &gt;</label>
        <link refid="d4/deb/classsamchon_1_1protocol_1_1EntityGroup"/>
        <childnode refid="1675" relation="public-inheritance">
        </childnode>
        <childnode refid="1676" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1673">
        <label>ExternalSystem</label>
        <link refid="df/d42/classsamchon_1_1protocol_1_1ExternalSystem"/>
        <childnode refid="1674" relation="public-inheritance">
        </childnode>
        <childnode refid="1677" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1677">
        <label>IClient</label>
        <link refid="d3/dc8/classsamchon_1_1protocol_1_1IClient"/>
        <childnode refid="1678" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1675">
        <label>Entity</label>
        <link refid="d0/d3e/classsamchon_1_1protocol_1_1Entity"/>
      </node>
      <node id="1676">
        <label>IEntityGroup</label>
        <link refid="d9/d4c/classsamchon_1_1protocol_1_1IEntityGroup"/>
      </node>
    </collaborationgraph>
    <location file="D:/OneDrive/Project/Samchon/framework/cpp/samchon/protocol/ExternalSystem.hpp" line="49" column="1" bodyfile="D:/OneDrive/Project/Samchon/framework/cpp/samchon/protocol/ExternalSystem.hpp" bodystart="46" bodyend="119"/>
    <listofallmembers>
      <member refid="d3/dc8/classsamchon_1_1protocol_1_1IClient_1aa3ceab5738d3d60e963bb177d5847f14" prot="protected" virt="virtual"><scope>samchon::protocol::ExternalSystem</scope><name>_replyData</name></member>
      <member refid="d3/dc8/classsamchon_1_1protocol_1_1IClient_1a68ee198dd9bae714dab92bb6374f8d95" prot="protected" virt="virtual"><scope>samchon::protocol::ExternalSystem</scope><name>BUFFER_SIZE</name></member>
      <member refid="df/d42/classsamchon_1_1protocol_1_1ExternalSystem_1a5cb3666da8a6a0efe4014782bda20af0" prot="public" virt="virtual"><scope>samchon::protocol::ExternalSystem</scope><name>CHILD_TAG</name></member>
      <member refid="df/d42/classsamchon_1_1protocol_1_1ExternalSystem_1a4c4b7d9441b10a734e8ce75e67d0375c" prot="public" virt="virtual"><scope>samchon::protocol::ExternalSystem</scope><name>construct</name></member>
      <member refid="d4/deb/classsamchon_1_1protocol_1_1EntityGroup_1aac5cb7c267e3cf067657ca5a73363728" prot="protected" virt="non-virtual"><scope>samchon::protocol::ExternalSystem</scope><name>container_type</name></member>
      <member refid="d4/deb/classsamchon_1_1protocol_1_1EntityGroup_1a554e0798083a38327f360c61a1ca716b" prot="protected" virt="pure-virtual"><scope>samchon::protocol::ExternalSystem</scope><name>createChild</name></member>
      <member refid="d0/d3e/classsamchon_1_1protocol_1_1Entity_1afb4718a8ca5b822cf88129ae04240489" prot="public" virt="non-virtual"><scope>samchon::protocol::ExternalSystem</scope><name>Entity</name></member>
      <member refid="d4/deb/classsamchon_1_1protocol_1_1EntityGroup_1a8e82af015377749a76c1839466abb676" prot="protected" virt="non-virtual"><scope>samchon::protocol::ExternalSystem</scope><name>entity_type</name></member>
      <member refid="d4/deb/classsamchon_1_1protocol_1_1EntityGroup_1a14f6ca078bbeb51a6f6bc153f7384a7c" prot="public" virt="non-virtual"><scope>samchon::protocol::ExternalSystem</scope><name>EntityGroup</name></member>
      <member refid="df/d42/classsamchon_1_1protocol_1_1ExternalSystem_1a6e60022a9f417171874972fda77f6b42" prot="public" virt="non-virtual"><scope>samchon::protocol::ExternalSystem</scope><name>ExternalSystem</name></member>
      <member refid="d4/deb/classsamchon_1_1protocol_1_1EntityGroup_1af318f1e62268b7e178fdc2a9669444b8" prot="public" virt="non-virtual"><scope>samchon::protocol::ExternalSystem</scope><name>get</name></member>
      <member refid="d4/deb/classsamchon_1_1protocol_1_1EntityGroup_1af5c2fb617197f93e98ec6c4b547d9bdd" prot="public" virt="non-virtual"><scope>samchon::protocol::ExternalSystem</scope><name>get</name></member>
      <member refid="d4/deb/classsamchon_1_1protocol_1_1EntityGroup_1a531cae9e9c8b395f8cde3f2ca243cc79" prot="public" virt="non-virtual"><scope>samchon::protocol::ExternalSystem</scope><name>has</name></member>
      <member refid="d3/dc8/classsamchon_1_1protocol_1_1IClient_1a7d9b7003a224b6050168eede30b914a4" prot="public" virt="non-virtual"><scope>samchon::protocol::ExternalSystem</scope><name>IClient</name></member>
      <member refid="d9/d4c/classsamchon_1_1protocol_1_1IEntityGroup_1a613d2b691653c86d5f900c8ba33ba30b" prot="public" virt="non-virtual"><scope>samchon::protocol::ExternalSystem</scope><name>IEntityGroup</name></member>
      <member refid="df/d42/classsamchon_1_1protocol_1_1ExternalSystem_1a319b95015f17a3dc8b4b43a65c541571" prot="protected" virt="non-virtual"><scope>samchon::protocol::ExternalSystem</scope><name>ip</name></member>
      <member refid="d4/dcf/classsamchon_1_1protocol_1_1IProtocol_1a6258c530c328dc119e698bb7e7fe222a" prot="public" virt="non-virtual"><scope>samchon::protocol::ExternalSystem</scope><name>IProtocol</name></member>
      <member refid="df/d42/classsamchon_1_1protocol_1_1ExternalSystem_1a8083eb5e1b4528069982a49abe45205f" prot="public" virt="virtual"><scope>samchon::protocol::ExternalSystem</scope><name>key</name></member>
      <member refid="d3/dc8/classsamchon_1_1protocol_1_1IClient_1a458bbe4cf81360301586b2e62a7f9dd2" prot="public" virt="virtual"><scope>samchon::protocol::ExternalSystem</scope><name>listen</name></member>
      <member refid="df/d42/classsamchon_1_1protocol_1_1ExternalSystem_1a9b45b3e13bd9167aab02e17e08916231" prot="protected" virt="non-virtual"><scope>samchon::protocol::ExternalSystem</scope><name>name</name></member>
      <member refid="df/d42/classsamchon_1_1protocol_1_1ExternalSystem_1a63c89c04d1feae07ca35558055155ffb" prot="protected" virt="non-virtual"><scope>samchon::protocol::ExternalSystem</scope><name>port</name></member>
      <member refid="df/d42/classsamchon_1_1protocol_1_1ExternalSystem_1a5b0e5be870f2d6a26004a8e637a1ce6c" prot="public" virt="virtual"><scope>samchon::protocol::ExternalSystem</scope><name>replyData</name></member>
      <member refid="d3/dc8/classsamchon_1_1protocol_1_1IClient_1a7e9e36d7847d933abbf3b1eda35aab0d" prot="public" virt="virtual"><scope>samchon::protocol::ExternalSystem</scope><name>sendData</name></member>
      <member refid="d3/dc8/classsamchon_1_1protocol_1_1IClient_1a4d6d58450d4b275cd6200bdcfb05403f" prot="protected" virt="non-virtual"><scope>samchon::protocol::ExternalSystem</scope><name>sendMtx</name></member>
      <member refid="d3/dc8/classsamchon_1_1protocol_1_1IClient_1ac7cf6524b1019c7fbaa210c68c05726e" prot="protected" virt="non-virtual"><scope>samchon::protocol::ExternalSystem</scope><name>socket</name></member>
      <member refid="df/d42/classsamchon_1_1protocol_1_1ExternalSystem_1ac0ae5f26cd2001d772aed9d2ea97d41c" prot="public" virt="pure-virtual"><scope>samchon::protocol::ExternalSystem</scope><name>start</name></member>
      <member refid="df/d42/classsamchon_1_1protocol_1_1ExternalSystem_1a3c66810ce5e48f4441529afb8cd37bcc" prot="protected" virt="non-virtual"><scope>samchon::protocol::ExternalSystem</scope><name>super</name></member>
      <member refid="df/d42/classsamchon_1_1protocol_1_1ExternalSystem_1aa55bc231502ef8e0dd9a9c274d028ac9" prot="public" virt="virtual"><scope>samchon::protocol::ExternalSystem</scope><name>TAG</name></member>
      <member refid="df/d42/classsamchon_1_1protocol_1_1ExternalSystem_1ac0248fcb25b3fa4f463d545005fdcbf3" prot="public" virt="virtual"><scope>samchon::protocol::ExternalSystem</scope><name>toXML</name></member>
      <member refid="d4/deb/classsamchon_1_1protocol_1_1EntityGroup_1aa03d6edd1546642516652a481c0bf8db" prot="protected" virt="non-virtual"><scope>samchon::protocol::ExternalSystem</scope><name>value_type</name></member>
      <member refid="d0/d3e/classsamchon_1_1protocol_1_1Entity_1a07d18d40fa0c4b4f1341cfddc0b600dd" prot="public" virt="virtual"><scope>samchon::protocol::ExternalSystem</scope><name>~Entity</name></member>
      <member refid="d4/deb/classsamchon_1_1protocol_1_1EntityGroup_1a0dd6821308dca7395965242148146aae" prot="public" virt="virtual"><scope>samchon::protocol::ExternalSystem</scope><name>~EntityGroup</name></member>
      <member refid="df/d42/classsamchon_1_1protocol_1_1ExternalSystem_1ace3eaec0a1864ab10a9a6e815c0eba58" prot="public" virt="virtual"><scope>samchon::protocol::ExternalSystem</scope><name>~ExternalSystem</name></member>
      <member refid="d3/dc8/classsamchon_1_1protocol_1_1IClient_1ae8742ef162f2aee85a2e7b4b7ef1357f" prot="public" virt="virtual"><scope>samchon::protocol::ExternalSystem</scope><name>~IClient</name></member>
      <member refid="d9/d4c/classsamchon_1_1protocol_1_1IEntityGroup_1ae41524ffa5ca16d3160dfd0b00e7800f" prot="public" virt="virtual"><scope>samchon::protocol::ExternalSystem</scope><name>~IEntityGroup</name></member>
      <member refid="d4/dcf/classsamchon_1_1protocol_1_1IProtocol_1a51a537c2b3a6ff5eb7b5ed859cc062ad" prot="public" virt="virtual"><scope>samchon::protocol::ExternalSystem</scope><name>~IProtocol</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
