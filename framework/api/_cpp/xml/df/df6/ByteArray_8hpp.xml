<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.10">
  <compounddef id="df/df6/ByteArray_8hpp" kind="file" language="C++">
    <compoundname>ByteArray.hpp</compoundname>
    <includes refid="d9/d8f/API_8hpp" local="no">samchon/API.hpp</includes>
    <includes local="no">vector</includes>
    <includes local="no">string</includes>
    <includedby refid="db/d09/ByteArray_8cpp" local="no">D:/OneDrive/Project/Samchon/framework/cpp/samchon/ByteArray.cpp</includedby>
    <includedby refid="db/de2/web__socket_2main_8cpp" local="no">D:/OneDrive/Project/Samchon/framework/cpp/samchon/examples/web_socket/main.cpp</includedby>
    <includedby refid="d0/d79/Base64_8hpp" local="no">D:/OneDrive/Project/Samchon/framework/cpp/samchon/library/Base64.hpp</includedby>
    <includedby refid="d3/d91/FTByteFile_8hpp" local="no">D:/OneDrive/Project/Samchon/framework/cpp/samchon/library/FTByteFile.hpp</includedby>
    <includedby refid="d3/d91/HTTPLoader_8hpp" local="no">D:/OneDrive/Project/Samchon/framework/cpp/samchon/library/HTTPLoader.hpp</includedby>
    <includedby refid="d3/d37/SQLStatement_8hpp" local="no">D:/OneDrive/Project/Samchon/framework/cpp/samchon/library/SQLStatement.hpp</includedby>
    <includedby refid="dc/d96/IClient_8cpp" local="no">D:/OneDrive/Project/Samchon/framework/cpp/samchon/protocol/IClient.cpp</includedby>
    <includedby refid="dd/d5c/InvokeParameter_8cpp" local="no">D:/OneDrive/Project/Samchon/framework/cpp/samchon/protocol/InvokeParameter.cpp</includedby>
    <includedby refid="d3/da5/InvokeParameter_8hpp" local="no">D:/OneDrive/Project/Samchon/framework/cpp/samchon/protocol/InvokeParameter.hpp</includedby>
    <incdepgraph>
      <node id="161">
        <label>string</label>
      </node>
      <node id="159">
        <label>samchon/API.hpp</label>
        <link refid="d9/d8f/API_8hpp_source"/>
      </node>
      <node id="158">
        <label>D:/OneDrive/Project/Samchon/framework/cpp/samchon/ByteArray.hpp</label>
        <link refid="ByteArray.hpp"/>
        <childnode refid="159" relation="include">
        </childnode>
        <childnode refid="160" relation="include">
        </childnode>
        <childnode refid="161" relation="include">
        </childnode>
      </node>
      <node id="160">
        <label>vector</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="168">
        <label>D:/OneDrive/Project/Samchon/framework/cpp/samchon/protocol/InvokeParameter.hpp</label>
        <link refid="d3/da5/InvokeParameter_8hpp_source"/>
        <childnode refid="169" relation="include">
        </childnode>
      </node>
      <node id="166">
        <label>D:/OneDrive/Project/Samchon/framework/cpp/samchon/library/SQLStatement.hpp</label>
        <link refid="d3/d37/SQLStatement_8hpp_source"/>
        <childnode refid="167" relation="include">
        </childnode>
      </node>
      <node id="163">
        <label>D:/OneDrive/Project/Samchon/framework/cpp/samchon/library/Base64.hpp</label>
        <link refid="d0/d79/Base64_8hpp_source"/>
      </node>
      <node id="162">
        <label>D:/OneDrive/Project/Samchon/framework/cpp/samchon/ByteArray.hpp</label>
        <link refid="ByteArray.hpp"/>
        <childnode refid="163" relation="include">
        </childnode>
        <childnode refid="164" relation="include">
        </childnode>
        <childnode refid="165" relation="include">
        </childnode>
        <childnode refid="166" relation="include">
        </childnode>
        <childnode refid="168" relation="include">
        </childnode>
      </node>
      <node id="169">
        <label>D:/OneDrive/Project/Samchon/framework/cpp/samchon/protocol/Invoke.hpp</label>
        <link refid="d1/d6e/Invoke_8hpp_source"/>
      </node>
      <node id="165">
        <label>D:/OneDrive/Project/Samchon/framework/cpp/samchon/library/HTTPLoader.hpp</label>
        <link refid="d3/d91/HTTPLoader_8hpp_source"/>
      </node>
      <node id="167">
        <label>D:/OneDrive/Project/Samchon/framework/cpp/samchon/library/TSQLStatement.hpp</label>
        <link refid="d2/da6/TSQLStatement_8hpp_source"/>
      </node>
      <node id="164">
        <label>D:/OneDrive/Project/Samchon/framework/cpp/samchon/library/FTByteFile.hpp</label>
        <link refid="d3/d91/FTByteFile_8hpp_source"/>
      </node>
    </invincdepgraph>
    <innerclass refid="dc/d37/classsamchon_1_1ByteArray" prot="public">samchon::ByteArray</innerclass>
    <innernamespace refid="db/df1/namespacesamchon">samchon</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;samchon/API.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vector&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7" refid="db/df1/namespacesamchon" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="db/df1/namespacesamchon" kindref="compound">samchon</ref></highlight></codeline>
<codeline lineno="8"><highlight class="normal">{</highlight></codeline>
<codeline lineno="30" refid="dc/d37/classsamchon_1_1ByteArray" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">SAMCHON_FRAMEWORK_API<sp/><ref refid="dc/d37/classsamchon_1_1ByteArray" kindref="compound">ByteArray</ref></highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>std::vector&lt;unsigned<sp/>char&gt;</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>std::vector&lt;unsigned<sp/>char&gt;<sp/>super;</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="43" refid="dc/d37/classsamchon_1_1ByteArray_1a7a04afe5347934be732ec70a70bd0a28" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="dc/d37/classsamchon_1_1ByteArray_1a7a04afe5347934be732ec70a70bd0a28" kindref="member">position</ref>;</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>--------------------------------------------------------------</highlight></codeline>
<codeline lineno="47"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CONSTRUCTROS</highlight></codeline>
<codeline lineno="48"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>--------------------------------------------------------------<sp/>*/</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="dc/d37/classsamchon_1_1ByteArray" kindref="compound">ByteArray</ref>();</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="dc/d37/classsamchon_1_1ByteArray" kindref="compound">ByteArray</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="dc/d37/classsamchon_1_1ByteArray" kindref="compound">ByteArray</ref><sp/>&amp;);</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="dc/d37/classsamchon_1_1ByteArray" kindref="compound">ByteArray</ref>(<ref refid="dc/d37/classsamchon_1_1ByteArray" kindref="compound">ByteArray</ref><sp/>&amp;&amp;);</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>--------------------------------------------------------------</highlight></codeline>
<codeline lineno="63"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>POSITION</highlight></codeline>
<codeline lineno="64"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>--------------------------------------------------------------<sp/>*/</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>getPosition()<sp/>const<sp/>-&gt;<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setPosition(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="86" refid="dc/d37/classsamchon_1_1ByteArray_1a0d477c9f39a7d1dc318ff7778f4153d9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>template<sp/>&lt;typename<sp/>_Ty&gt;<sp/>static<sp/>auto<sp/>reverse(const<sp/>_Ty<sp/>&amp;val)<sp/>-&gt;<sp/>_Ty</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_Ty<sp/>res;</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>size<sp/>=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(_Ty);</highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*originalBytes<sp/>=<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)&amp;val;</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*reversedBytes<sp/>=<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)&amp;res;</highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>size;<sp/>i++)</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>reversedBytes[i]<sp/>=<sp/>originalBytes[size<sp/>-<sp/>i<sp/>-<sp/>1];</highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>res;</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>--------------------------------------------------------------</highlight></codeline>
<codeline lineno="101"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>READ<sp/>BYTES</highlight></codeline>
<codeline lineno="102"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>--------------------------------------------------------------<sp/>*/</highlight></codeline>
<codeline lineno="111" refid="dc/d37/classsamchon_1_1ByteArray_1ae7e51bdb9d4acbc77330cb67fdb3c0a6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>_Ty&gt;<sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="dc/d37/classsamchon_1_1ByteArray_1ae7e51bdb9d4acbc77330cb67fdb3c0a6" kindref="member">read</ref>()<sp/>const<sp/>-&gt;<sp/>_Ty</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_Ty<sp/>*ptr<sp/>=<sp/>(_Ty*)(data()<sp/>+<sp/>position);</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((<ref refid="dc/d37/classsamchon_1_1ByteArray" kindref="compound">ByteArray</ref>*)</highlight><highlight class="keyword">this</highlight><highlight class="normal">)-&gt;position<sp/>+=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(_Ty);</highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*ptr;</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;&gt;<sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>read()<sp/>const<sp/>-&gt;<sp/><ref refid="d8/dcc/namespacestd" kindref="compound">std</ref>::</highlight><highlight class="keywordtype">string</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight></codeline>
<codeline lineno="133" refid="dc/d37/classsamchon_1_1ByteArray_1af31a23a4ca34bc84dbcf28345d2f9d7d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>template<sp/>&lt;typename<sp/>_Ty&gt;<sp/>auto<sp/>readReversely()<sp/>const<sp/>-&gt;<sp/>_Ty</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_Ty<sp/>val<sp/>=<sp/>read&lt;_Ty&gt;();</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>reserve(val);</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>--------------------------------------------------------------</highlight></codeline>
<codeline lineno="140"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>WRITE<sp/>BYTES</highlight></codeline>
<codeline lineno="141"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>--------------------------------------------------------------<sp/>*/</highlight></codeline>
<codeline lineno="149" refid="dc/d37/classsamchon_1_1ByteArray_1aeff26f32c2731798c0f803b8f8073bdb" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>_Ty&gt;<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="dc/d37/classsamchon_1_1ByteArray_1aeff26f32c2731798c0f803b8f8073bdb" kindref="member">write</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>_Ty<sp/>&amp;val)</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*ptr<sp/>=<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)&amp;val;</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>insert(end(),<sp/>ptr,<sp/>ptr<sp/>+<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(_Ty));</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;&gt;<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>write(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;str);</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;&gt;<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>write(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="dc/d37/classsamchon_1_1ByteArray" kindref="compound">ByteArray</ref><sp/>&amp;byteArray);</highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight></codeline>
<codeline lineno="167" refid="dc/d37/classsamchon_1_1ByteArray_1a882c59201cd1968079a9deb180173490" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>_Ty&gt;<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="dc/d37/classsamchon_1_1ByteArray_1a882c59201cd1968079a9deb180173490" kindref="member">writeReversely</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>_Ty<sp/>&amp;val)</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>write(reverse(val));</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>--------------------------------------------------------------</highlight></codeline>
<codeline lineno="173"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>COMPRESS<sp/>&amp;<sp/>DECOMPRESS</highlight></codeline>
<codeline lineno="174"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>--------------------------------------------------------------<sp/>*/</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>compress()<sp/>const<sp/>-&gt;<sp/><ref refid="dc/d37/classsamchon_1_1ByteArray" kindref="compound">ByteArray</ref>;</highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>auto<sp/>decompress()<sp/>const<sp/>-&gt;<sp/><ref refid="dc/d37/classsamchon_1_1ByteArray" kindref="compound">ByteArray</ref>;</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="197"><highlight class="normal">};</highlight></codeline>
    </programlisting>
    <location file="D:/OneDrive/Project/Samchon/framework/cpp/samchon/ByteArray.hpp"/>
  </compounddef>
</doxygen>
