<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.10">
  <compounddef id="d2/dc0/classsamchon_1_1IndexPair" kind="class" language="C++" prot="public">
    <compoundname>samchon::IndexPair</compoundname>
    <basecompoundref prot="private" virt="non-virtual">std::pair&lt; size_t, _Ty &gt;</basecompoundref>
    <includes refid="d9/ded/IndexPair_8hpp" local="no">IndexPair.hpp</includes>
    <templateparamlist>
      <param>
        <type>class _Ty</type>
      </param>
    </templateparamlist>
      <sectiondef kind="private-type">
      <memberdef kind="typedef" id="d2/dc0/classsamchon_1_1IndexPair_1a6125bc31eed9165a501f7c82040f7033" prot="private" static="no">
        <type>std::pair&lt; size_t, _Ty &gt;</type>
        <definition>typedef std::pair&lt;size_t, _Ty&gt; super</definition>
        <argsstring></argsstring>
        <name>super</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/OneDrive/Project/Samchon/framework/cpp/samchon/IndexPair.hpp" line="33" column="1" bodyfile="D:/OneDrive/Project/Samchon/framework/cpp/samchon/IndexPair.hpp" bodystart="33" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="d2/dc0/classsamchon_1_1IndexPair_1a280aa5ab6c82dfcaaf73d49dc4f6f15a" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>auto</type>
        <definition>auto getIndex</definition>
        <argsstring>() const  -&gt; size_t</argsstring>
        <name>getIndex</name>
        <briefdescription>
<para>Get index. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Index of the pair </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/OneDrive/Project/Samchon/framework/cpp/samchon/IndexPair.hpp" line="46" column="1" bodyfile="D:/OneDrive/Project/Samchon/framework/cpp/samchon/IndexPair.hpp" bodystart="46" bodyend="49"/>
      </memberdef>
      <memberdef kind="function" id="d2/dc0/classsamchon_1_1IndexPair_1ae1f37281fd33eb01762d83d0e2cf9caf" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>auto</type>
        <definition>auto getValue</definition>
        <argsstring>() -&gt; _Ty &amp;</argsstring>
        <name>getValue</name>
        <briefdescription>
<para>Get const value. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Reference of value of the pair </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/OneDrive/Project/Samchon/framework/cpp/samchon/IndexPair.hpp" line="56" column="1" bodyfile="D:/OneDrive/Project/Samchon/framework/cpp/samchon/IndexPair.hpp" bodystart="56" bodyend="59"/>
      </memberdef>
      <memberdef kind="function" id="d2/dc0/classsamchon_1_1IndexPair_1a09c97afa079beabad5302938e35c6cb9" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>auto</type>
        <definition>auto getValue</definition>
        <argsstring>() const  -&gt; const _Ty &amp;</argsstring>
        <name>getValue</name>
        <briefdescription>
<para>Get value. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Const reference of value of the pair </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/OneDrive/Project/Samchon/framework/cpp/samchon/IndexPair.hpp" line="66" column="1" bodyfile="D:/OneDrive/Project/Samchon/framework/cpp/samchon/IndexPair.hpp" bodystart="66" bodyend="69"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>A pair of index and its value(_Ty) </para>    </briefdescription>
    <detaileddescription>
<para><ref refid="d2/dc0/classsamchon_1_1IndexPair" kindref="compound">IndexPair</ref> is a std::pair&lt;size_t, _Ty&gt; class. </para><para><ref refid="d2/dc0/classsamchon_1_1IndexPair" kindref="compound">IndexPair</ref> expresses index and value. It&apos;s useful for expressing finding literals, specified object, calculating mininum or maximum with its position. </para><para><simplesect kind="par"><title>[Inherited] </title><para></para></simplesect>
This class couples together a pair of values, which may be of different types (T1 and T2). The individual values can be accessed through its public members first and second. </para><para>Pairs are a particular case of tuple. </para><para>Referenced comments of std::pair </para><para><itemizedlist>
<listitem><para><ulink url="http://www.cplusplus.com/reference/utility/pair/">http://www.cplusplus.com/reference/utility/pair/</ulink></para></listitem>
</itemizedlist>
<simplesect kind="author"><para>Jeongho Nam </para></simplesect>
</para>    </detaileddescription>
    <location file="D:/OneDrive/Project/Samchon/framework/cpp/samchon/IndexPair.hpp" line="31" column="1" bodyfile="D:/OneDrive/Project/Samchon/framework/cpp/samchon/IndexPair.hpp" bodystart="29" bodyend="70"/>
    <listofallmembers>
      <member refid="d2/dc0/classsamchon_1_1IndexPair_1a280aa5ab6c82dfcaaf73d49dc4f6f15a" prot="public" virt="non-virtual"><scope>samchon::IndexPair</scope><name>getIndex</name></member>
      <member refid="d2/dc0/classsamchon_1_1IndexPair_1ae1f37281fd33eb01762d83d0e2cf9caf" prot="public" virt="non-virtual"><scope>samchon::IndexPair</scope><name>getValue</name></member>
      <member refid="d2/dc0/classsamchon_1_1IndexPair_1a09c97afa079beabad5302938e35c6cb9" prot="public" virt="non-virtual"><scope>samchon::IndexPair</scope><name>getValue</name></member>
      <member refid="d2/dc0/classsamchon_1_1IndexPair_1a6125bc31eed9165a501f7c82040f7033" prot="private" virt="non-virtual"><scope>samchon::IndexPair</scope><name>super</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
