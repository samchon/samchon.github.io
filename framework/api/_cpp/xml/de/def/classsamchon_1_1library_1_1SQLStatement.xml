<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.10">
  <compounddef id="de/def/classsamchon_1_1library_1_1SQLStatement" kind="class" language="C++" prot="public">
    <compoundname>samchon::library::SQLStatement</compoundname>
    <derivedcompoundref refid="d3/d69/classsamchon_1_1library_1_1TSQLStatement" prot="public" virt="non-virtual">TSQLStatement</derivedcompoundref>
    <includes refid="d3/d37/SQLStatement_8hpp" local="no">SQLStatement.hpp</includes>
      <sectiondef kind="private-type">
      <memberdef kind="typedef" id="de/def/classsamchon_1_1library_1_1SQLStatement_1ac6286d18f6bb01561cffe1ba299e7611" prot="private" static="no">
        <type>long</type>
        <definition>typedef long SQL_SIZE_T</definition>
        <argsstring></argsstring>
        <name>SQL_SIZE_T</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/OneDrive/Project/Samchon/framework/cpp/samchon/library/SQLStatement.hpp" line="51" column="1" bodyfile="D:/OneDrive/Project/Samchon/framework/cpp/samchon/library/SQLStatement.hpp" bodystart="51" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="de/def/classsamchon_1_1library_1_1SQLStatement_1afe40a5143dbcaea614145a8ad8c8257a" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend class</type>
        <definition>friend class SQLi</definition>
        <argsstring></argsstring>
        <name>SQLi</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/OneDrive/Project/Samchon/framework/cpp/samchon/library/SQLStatement.hpp" line="46" column="1" bodyfile="D:/OneDrive/Project/Samchon/framework/cpp/samchon/library/SQLStatement.hpp" bodystart="46" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="de/def/classsamchon_1_1library_1_1SQLStatement_1a13714007d02c778c7993d06a1010be95" prot="protected" static="no" mutable="no">
        <type><ref refid="d9/d2f/classsamchon_1_1library_1_1SQLi" kindref="compound">SQLi</ref> *</type>
        <definition>SQLi* sqli</definition>
        <argsstring></argsstring>
        <name>sqli</name>
        <briefdescription>
<para><ref refid="d9/d2f/classsamchon_1_1library_1_1SQLi" kindref="compound">SQLi</ref> who created the <ref refid="de/def/classsamchon_1_1library_1_1SQLStatement" kindref="compound">SQLStatement</ref>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/OneDrive/Project/Samchon/framework/cpp/samchon/library/SQLStatement.hpp" line="61" column="1" bodyfile="D:/OneDrive/Project/Samchon/framework/cpp/samchon/library/SQLStatement.hpp" bodystart="61" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="de/def/classsamchon_1_1library_1_1SQLStatement_1a07586fe73a1456ecc4cc9cd922dcf7fb" prot="protected" static="no" mutable="no">
        <type>void *</type>
        <definition>void* hstmt</definition>
        <argsstring></argsstring>
        <name>hstmt</name>
        <briefdescription>
<para>Handler of sql statement (OBDC) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/OneDrive/Project/Samchon/framework/cpp/samchon/library/SQLStatement.hpp" line="66" column="1" bodyfile="D:/OneDrive/Project/Samchon/framework/cpp/samchon/library/SQLStatement.hpp" bodystart="66" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="de/def/classsamchon_1_1library_1_1SQLStatement_1a10c37673607a94c552835df9c76e17d4" prot="protected" static="no" mutable="no">
        <type>size_t</type>
        <definition>size_t bindParameterCount</definition>
        <argsstring></argsstring>
        <name>bindParameterCount</name>
        <briefdescription>
<para>Count of binded parameters<linebreak/>
. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/OneDrive/Project/Samchon/framework/cpp/samchon/library/SQLStatement.hpp" line="74" column="1" bodyfile="D:/OneDrive/Project/Samchon/framework/cpp/samchon/library/SQLStatement.hpp" bodystart="74" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="de/def/classsamchon_1_1library_1_1SQLStatement_1a257b3f294b5df4f48ec2bf39f122d6a6" prot="protected" static="no" mutable="no">
        <type><ref refid="d1/d4e/classsamchon_1_1Map" kindref="compound">Map</ref>&lt; size_t, SQL_SIZE_T &gt;</type>
        <definition>Map&lt;size_t, SQL_SIZE_T&gt; bindParameterBASizeMap</definition>
        <argsstring></argsstring>
        <name>bindParameterBASizeMap</name>
        <briefdescription>
<para>A map for binary size. </para>        </briefdescription>
        <detaileddescription>
<para>When calls ByteArray::size(), the returned size_t value can&apos;t be kept until </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/OneDrive/Project/Samchon/framework/cpp/samchon/library/SQLStatement.hpp" line="82" column="1" bodyfile="D:/OneDrive/Project/Samchon/framework/cpp/samchon/library/SQLStatement.hpp" bodystart="82" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="de/def/classsamchon_1_1library_1_1SQLStatement_1a27fee800887428a73c9dd801e39aebd4" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>SQLStatement</definition>
        <argsstring>(SQLi *sqli)</argsstring>
        <name>SQLStatement</name>
        <param>
          <type><ref refid="d9/d2f/classsamchon_1_1library_1_1SQLi" kindref="compound">SQLi</ref> *</type>
          <declname>sqli</declname>
        </param>
        <briefdescription>
<para>Protected Constructor. </para>        </briefdescription>
        <detaileddescription>
<para><ref refid="de/def/classsamchon_1_1library_1_1SQLStatement" kindref="compound">SQLStatement</ref>&apos;s constructor have to created by <ref refid="d9/d2f/classsamchon_1_1library_1_1SQLi_1a270bed8f66bffd0352efe7a9b33e3be8" kindref="member">SQLi::createStatement()</ref>.</para><para><simplesect kind="note"><para></para></simplesect>
Don&apos;t create <ref refid="de/def/classsamchon_1_1library_1_1SQLStatement" kindref="compound">SQLStatement</ref> by yourself. </para><para><ref refid="de/def/classsamchon_1_1library_1_1SQLStatement" kindref="compound">SQLStatement</ref> has to be created by <ref refid="d9/d2f/classsamchon_1_1library_1_1SQLi_1a270bed8f66bffd0352efe7a9b33e3be8" kindref="member">SQLi::createStatement()</ref>. </para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>sqli</parametername>
</parameternamelist>
<parameterdescription>
<para>Parent <ref refid="d9/d2f/classsamchon_1_1library_1_1SQLi" kindref="compound">SQLi</ref> who created the <ref refid="de/def/classsamchon_1_1library_1_1SQLStatement" kindref="compound">SQLStatement</ref> </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/OneDrive/Project/Samchon/framework/cpp/samchon/library/SQLStatement.hpp" line="96" column="1" bodyfile="D:/OneDrive/Project/Samchon/framework/cpp/samchon/library/SQLStatement.cpp" bodystart="22" bodyend="28"/>
      </memberdef>
      <memberdef kind="function" id="de/def/classsamchon_1_1library_1_1SQLStatement_1af90912ea6348e6b54b4184b75d487228" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void reset</definition>
        <argsstring>(SQLi *sqli)</argsstring>
        <name>reset</name>
        <param>
          <type><ref refid="d9/d2f/classsamchon_1_1library_1_1SQLi" kindref="compound">SQLi</ref> *</type>
          <declname>sqli</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/OneDrive/Project/Samchon/framework/cpp/samchon/library/SQLStatement.hpp" line="97" column="1" bodyfile="D:/OneDrive/Project/Samchon/framework/cpp/samchon/library/SQLStatement.cpp" bodystart="34" bodyend="40"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="de/def/classsamchon_1_1library_1_1SQLStatement_1a836476eea0f9a9416105f8aff5bcc8e7" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>~SQLStatement</definition>
        <argsstring>()</argsstring>
        <name>~SQLStatement</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/OneDrive/Project/Samchon/framework/cpp/samchon/library/SQLStatement.hpp" line="100" column="1" bodyfile="D:/OneDrive/Project/Samchon/framework/cpp/samchon/library/SQLStatement.cpp" bodystart="29" bodyend="32"/>
      </memberdef>
      <memberdef kind="function" id="de/def/classsamchon_1_1library_1_1SQLStatement_1aafde19f7d36ca163a143579c1b125b6d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void free</definition>
        <argsstring>()</argsstring>
        <name>free</name>
        <briefdescription>
<para>Free the sql statement. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/OneDrive/Project/Samchon/framework/cpp/samchon/library/SQLStatement.hpp" line="106" column="1" bodyfile="D:/OneDrive/Project/Samchon/framework/cpp/samchon/library/SQLStatement.cpp" bodystart="41" bodyend="52"/>
      </memberdef>
      <memberdef kind="function" id="de/def/classsamchon_1_1library_1_1SQLStatement_1a5f2e190b8261a98c97c2ea4e86670d54" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void refresh</definition>
        <argsstring>()</argsstring>
        <name>refresh</name>
        <briefdescription>
<para>Refresh the sql statement. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/OneDrive/Project/Samchon/framework/cpp/samchon/library/SQLStatement.hpp" line="111" column="1" bodyfile="D:/OneDrive/Project/Samchon/framework/cpp/samchon/library/SQLStatement.cpp" bodystart="53" bodyend="56"/>
      </memberdef>
      <memberdef kind="function" id="de/def/classsamchon_1_1library_1_1SQLStatement_1a142bbc3bf2ea6eb276b185d97f9e6bf4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename _Ty</type>
          </param>
          <param>
            <type>typename...</type>
            <declname>_Args</declname>
            <defname>_Args</defname>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void prepare</definition>
        <argsstring>(const std::string &amp;sql, const _Ty &amp;val, const _Args &amp;...args)</argsstring>
        <name>prepare</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>sql</declname>
        </param>
        <param>
          <type>const _Ty &amp;</type>
          <declname>val</declname>
        </param>
        <param>
          <type>const _Args &amp;...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
<para>Prepare a sql statement. </para>        </briefdescription>
        <detaileddescription>
<para>Prepare a sql statement with parameters to bind for execution</para><para><simplesect kind="warning"><para>Be careful for destructions of binded parameters</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>sql</parametername>
</parameternamelist>
<parameterdescription>
<para>A sql-statement to prepare </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>...</parametername>
</parameternamelist>
<parameterdescription>
<para>args The parameters to bind </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/OneDrive/Project/Samchon/framework/cpp/samchon/library/SQLStatement.hpp" line="126" column="1" bodyfile="D:/OneDrive/Project/Samchon/framework/cpp/samchon/library/SQLStatement.hpp" bodystart="126" bodyend="132"/>
      </memberdef>
      <memberdef kind="function" id="de/def/classsamchon_1_1library_1_1SQLStatement_1ade976b5340d6d170f7eff0dd643204a3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename _Ty</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void prepare</definition>
        <argsstring>(const std::string &amp;str, const _Ty &amp;val)</argsstring>
        <name>prepare</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>str</declname>
        </param>
        <param>
          <type>const _Ty &amp;</type>
          <declname>val</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/OneDrive/Project/Samchon/framework/cpp/samchon/library/SQLStatement.hpp" line="133" column="1" bodyfile="D:/OneDrive/Project/Samchon/framework/cpp/samchon/library/SQLStatement.hpp" bodystart="133" bodyend="138"/>
      </memberdef>
      <memberdef kind="function" id="de/def/classsamchon_1_1library_1_1SQLStatement_1a4fece1a9b988d01819be999779c4fc4e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void prepare</definition>
        <argsstring>(const std::string &amp;)</argsstring>
        <name>prepare</name>
        <param>
          <type>const std::string &amp;</type>
          <defname>sql</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/OneDrive/Project/Samchon/framework/cpp/samchon/library/SQLStatement.hpp" line="139" column="1" bodyfile="D:/OneDrive/Project/Samchon/framework/cpp/samchon/library/SQLStatement.cpp" bodystart="64" bodyend="72"/>
      </memberdef>
      <memberdef kind="function" id="de/def/classsamchon_1_1library_1_1SQLStatement_1a61af3e60b94ae3e748f6fbac1e794af7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void execute</definition>
        <argsstring>()</argsstring>
        <name>execute</name>
        <briefdescription>
<para>Execute the prepared sql statement. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>exception</parametername>
</parameternamelist>
<parameterdescription>
<para>Error message from DBMS </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/OneDrive/Project/Samchon/framework/cpp/samchon/library/SQLStatement.hpp" line="146" column="1" bodyfile="D:/OneDrive/Project/Samchon/framework/cpp/samchon/library/SQLStatement.cpp" bodystart="73" bodyend="78"/>
      </memberdef>
      <memberdef kind="function" id="de/def/classsamchon_1_1library_1_1SQLStatement_1a0e0f8524084b9e6a17a3d6b53d5c0c21" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void executeDirectly</definition>
        <argsstring>(const std::string &amp;)</argsstring>
        <name>executeDirectly</name>
        <param>
          <type>const std::string &amp;</type>
          <defname>sql</defname>
        </param>
        <briefdescription>
<para>Execute sql-statement direclty. </para>        </briefdescription>
        <detaileddescription>
<para>Executes the given sql-statement without preparing or binding any parameter</para><para><simplesect kind="warning"><para><itemizedlist>
<listitem><para>Cannot use if prepare statement has already defined. Use execute instead. </para></listitem>
<listitem><para>Not recommended when the case of dynamic sql and the sql-statement is not for procedure but for direct access to table. Use prepare and execute instead.</para></listitem>
</itemizedlist>
</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>sql</parametername>
</parameternamelist>
<parameterdescription>
<para>sql-statement you want to execute </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>exception</parametername>
</parameternamelist>
<parameterdescription>
<para>Error message from DBMS </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>exception</parametername>
</parameternamelist>
<parameterdescription>
<para>Method prepare is already called </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/OneDrive/Project/Samchon/framework/cpp/samchon/library/SQLStatement.hpp" line="164" column="1" bodyfile="D:/OneDrive/Project/Samchon/framework/cpp/samchon/library/SQLStatement.cpp" bodystart="79" bodyend="87"/>
      </memberdef>
      <memberdef kind="function" id="de/def/classsamchon_1_1library_1_1SQLStatement_1ac40ce75123bf8135e599fb5385c93bc4" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>auto</type>
        <definition>auto fetch</definition>
        <argsstring>() const  -&gt; bool</argsstring>
        <name>fetch</name>
        <briefdescription>
<para>Fetch a record. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para></para></simplesect>
Whether succeded to fetch a record. </para><para>False means there&apos;s not any record or previous record was the last. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/OneDrive/Project/Samchon/framework/cpp/samchon/library/SQLStatement.hpp" line="176" column="1" bodyfile="D:/OneDrive/Project/Samchon/framework/cpp/samchon/library/SQLStatement.cpp" bodystart="98" bodyend="110"/>
      </memberdef>
      <memberdef kind="function" id="de/def/classsamchon_1_1library_1_1SQLStatement_1a4aa958951f386e1c6754cb166772e456" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>auto</type>
        <definition>auto next</definition>
        <argsstring>() const  -&gt; bool</argsstring>
        <name>next</name>
        <briefdescription>
<para>Move cursor to the next sql-statement. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Whether succeded to move cursor to the next statement. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/OneDrive/Project/Samchon/framework/cpp/samchon/library/SQLStatement.hpp" line="183" column="1" bodyfile="D:/OneDrive/Project/Samchon/framework/cpp/samchon/library/SQLStatement.cpp" bodystart="94" bodyend="97"/>
      </memberdef>
      <memberdef kind="function" id="de/def/classsamchon_1_1library_1_1SQLStatement_1ac4dde158d6dd302ea028acb582e9b67a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>auto</type>
        <definition>auto size</definition>
        <argsstring>() const  -&gt; size_t</argsstring>
        <name>size</name>
        <briefdescription>
<para>Get size of columns. </para>        </briefdescription>
        <detaileddescription>
<para>Returns the number of columns in a result set. <simplesect kind="warning"><para>Not size of rows. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/OneDrive/Project/Samchon/framework/cpp/samchon/library/SQLStatement.hpp" line="194" column="1" bodyfile="D:/OneDrive/Project/Samchon/framework/cpp/samchon/library/SQLStatement.cpp" bodystart="118" bodyend="124"/>
      </memberdef>
      <memberdef kind="function" id="de/def/classsamchon_1_1library_1_1SQLStatement_1a21b63a97abd0ea41486084ceca92c867" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename _Ty</type>
          </param>
        </templateparamlist>
        <type>auto</type>
        <definition>auto at</definition>
        <argsstring>(size_t index) const  -&gt; _Ty</argsstring>
        <name>at</name>
        <param>
          <type>size_t</type>
          <declname>index</declname>
        </param>
        <briefdescription>
<para>Get column&apos;s data by its index. </para>        </briefdescription>
        <detaileddescription>
<para>Returns column&apos;s data from fetched-record by specified column index</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>index</parametername>
</parameternamelist>
<parameterdescription>
<para>Index number of a column wants to get </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Data stored in the record at the position of specifield column </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/OneDrive/Project/Samchon/framework/cpp/samchon/library/SQLStatement.hpp" line="203" column="1" bodyfile="D:/OneDrive/Project/Samchon/framework/cpp/samchon/library/SQLStatement.hpp" bodystart="203" bodyend="209"/>
      </memberdef>
      <memberdef kind="function" id="de/def/classsamchon_1_1library_1_1SQLStatement_1aadc16d105a71fe0da988322779f61984" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>auto</type>
        <definition>auto at</definition>
        <argsstring>(size_t) const  -&gt; std::string</argsstring>
        <name>at</name>
        <param>
          <type>size_t</type>
          <defname>index</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/OneDrive/Project/Samchon/framework/cpp/samchon/library/SQLStatement.hpp" line="210" column="1" bodyfile="D:/OneDrive/Project/Samchon/framework/cpp/samchon/library/SQLStatement.cpp" bodystart="126" bodyend="139"/>
      </memberdef>
      <memberdef kind="function" id="de/def/classsamchon_1_1library_1_1SQLStatement_1acac936dc32184eb6ba73daa0d2dc40c0" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>auto</type>
        <definition>auto at</definition>
        <argsstring>(size_t) const  -&gt; std::wstring</argsstring>
        <name>at</name>
        <param>
          <type>size_t</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/OneDrive/Project/Samchon/framework/cpp/samchon/library/SQLStatement.hpp" line="211" column="1"/>
      </memberdef>
      <memberdef kind="function" id="de/def/classsamchon_1_1library_1_1SQLStatement_1aecf1ea51b71ae8be4314f6b64f4adb85" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>auto</type>
        <definition>auto at</definition>
        <argsstring>(size_t) const  -&gt; ByteArray</argsstring>
        <name>at</name>
        <param>
          <type>size_t</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/OneDrive/Project/Samchon/framework/cpp/samchon/library/SQLStatement.hpp" line="212" column="1"/>
      </memberdef>
      <memberdef kind="function" id="de/def/classsamchon_1_1library_1_1SQLStatement_1a1e1160e68b9d5a9ffc8651c2bdf7783b" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename _Ty</type>
          </param>
        </templateparamlist>
        <type>auto</type>
        <definition>auto get</definition>
        <argsstring>(const std::string &amp;) const  -&gt; _Ty</argsstring>
        <name>get</name>
        <param>
          <type>const std::string &amp;</type>
        </param>
        <briefdescription>
<para>Get a column data by its name. </para>        </briefdescription>
        <detaileddescription>
<para>Returns column&apos;s data from fetchched-recrod by specified column name</para><para>Get data from fetched-record by specified column name</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>Name of a column wants to get </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Data stored in the record at the position of specifield column </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/OneDrive/Project/Samchon/framework/cpp/samchon/library/SQLStatement.hpp" line="224" column="1" bodyfile="D:/OneDrive/Project/Samchon/framework/cpp/samchon/library/SQLStatement.hpp" bodystart="224" bodyend="227"/>
      </memberdef>
      <memberdef kind="function" id="de/def/classsamchon_1_1library_1_1SQLStatement_1ab18f224e3e9420e471c28a66bcaa909a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>auto</type>
        <definition>auto toXML</definition>
        <argsstring>() const  -&gt; std::shared_ptr&lt; XML &gt;</argsstring>
        <name>toXML</name>
        <reimplementedby refid="d3/d69/classsamchon_1_1library_1_1TSQLStatement_1a95fc1f6c4620b8132bb60378e96b25ec">toXML</reimplementedby>
        <briefdescription>
<para>Result sets to <ref refid="d5/d37/classsamchon_1_1library_1_1XML" kindref="compound">XML</ref>. </para>        </briefdescription>
        <detaileddescription>
<para>Converts the records of current sql-statement to <ref refid="d5/d37/classsamchon_1_1library_1_1XML" kindref="compound">XML</ref>. </para><para>Recommends to override for each DBMS&apos;s domain <ref refid="d5/d37/classsamchon_1_1library_1_1XML" kindref="compound">XML</ref> rule. </para><para><simplesect kind="return"><para><ref refid="d5/d37/classsamchon_1_1library_1_1XML" kindref="compound">XML</ref> representing records of the statement </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/OneDrive/Project/Samchon/framework/cpp/samchon/library/SQLStatement.hpp" line="238" column="1" bodyfile="D:/OneDrive/Project/Samchon/framework/cpp/samchon/library/SQLStatement.cpp" bodystart="172" bodyend="176"/>
      </memberdef>
      <memberdef kind="function" id="de/def/classsamchon_1_1library_1_1SQLStatement_1a332f32d76b4c5ad86b8d47860befbb04" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>auto</type>
        <definition>auto C_TYPE</definition>
        <argsstring>(const string &amp;) const  -&gt; short</argsstring>
        <name>C_TYPE</name>
        <param>
          <type>const string &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/OneDrive/Project/Samchon/framework/cpp/samchon/library/SQLStatement.cpp" line="271" column="1" bodyfile="D:/OneDrive/Project/Samchon/framework/cpp/samchon/library/SQLStatement.cpp" bodystart="271" bodyend="274"/>
      </memberdef>
      <memberdef kind="function" id="de/def/classsamchon_1_1library_1_1SQLStatement_1a3e5106fadd061ee8c9735830b5968f6f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>auto</type>
        <definition>auto C_TYPE</definition>
        <argsstring>(const wstring &amp;) const  -&gt; short</argsstring>
        <name>C_TYPE</name>
        <param>
          <type>const wstring &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/OneDrive/Project/Samchon/framework/cpp/samchon/library/SQLStatement.cpp" line="275" column="1" bodyfile="D:/OneDrive/Project/Samchon/framework/cpp/samchon/library/SQLStatement.cpp" bodystart="275" bodyend="278"/>
      </memberdef>
      <memberdef kind="function" id="de/def/classsamchon_1_1library_1_1SQLStatement_1a0dfc80b0dbca971ec14799505226e072" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>auto</type>
        <definition>auto SQL_TYPE</definition>
        <argsstring>(const string &amp;) const  -&gt; short</argsstring>
        <name>SQL_TYPE</name>
        <param>
          <type>const string &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/OneDrive/Project/Samchon/framework/cpp/samchon/library/SQLStatement.cpp" line="345" column="1" bodyfile="D:/OneDrive/Project/Samchon/framework/cpp/samchon/library/SQLStatement.cpp" bodystart="345" bodyend="348"/>
      </memberdef>
      <memberdef kind="function" id="de/def/classsamchon_1_1library_1_1SQLStatement_1af9e6a0f6081ae21b63e962e14f8fcbe3" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>auto</type>
        <definition>auto SQL_TYPE</definition>
        <argsstring>(const wstring &amp;) const  -&gt; short</argsstring>
        <name>SQL_TYPE</name>
        <param>
          <type>const wstring &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/OneDrive/Project/Samchon/framework/cpp/samchon/library/SQLStatement.cpp" line="349" column="1" bodyfile="D:/OneDrive/Project/Samchon/framework/cpp/samchon/library/SQLStatement.cpp" bodystart="349" bodyend="352"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="de/def/classsamchon_1_1library_1_1SQLStatement_1a5f5f00de85bc1c69a52df32af2d40822" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename _Ty</type>
          </param>
          <param>
            <type>typename...</type>
            <declname>_Args</declname>
            <defname>_Args</defname>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void bindParameter</definition>
        <argsstring>(const _Ty &amp;val, const _Args &amp;...args)</argsstring>
        <name>bindParameter</name>
        <param>
          <type>const _Ty &amp;</type>
          <declname>val</declname>
        </param>
        <param>
          <type>const _Args &amp;...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/OneDrive/Project/Samchon/framework/cpp/samchon/library/SQLStatement.hpp" line="245" column="1" bodyfile="D:/OneDrive/Project/Samchon/framework/cpp/samchon/library/SQLStatement.hpp" bodystart="245" bodyend="249"/>
      </memberdef>
      <memberdef kind="function" id="de/def/classsamchon_1_1library_1_1SQLStatement_1ab22caaa71373489711982af8c8564891" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename _Ty</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void bindParameter</definition>
        <argsstring>(const _Ty &amp;val)</argsstring>
        <name>bindParameter</name>
        <param>
          <type>const _Ty &amp;</type>
          <declname>val</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/OneDrive/Project/Samchon/framework/cpp/samchon/library/SQLStatement.hpp" line="250" column="1" bodyfile="D:/OneDrive/Project/Samchon/framework/cpp/samchon/library/SQLStatement.hpp" bodystart="250" bodyend="253"/>
      </memberdef>
      <memberdef kind="function" id="de/def/classsamchon_1_1library_1_1SQLStatement_1a9df9222ba3aec3be74ddbbb5f31ed6ac" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>void</type>
        <definition>void bindParameter</definition>
        <argsstring>(const std::string &amp;val)</argsstring>
        <name>bindParameter</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>val</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/OneDrive/Project/Samchon/framework/cpp/samchon/library/SQLStatement.hpp" line="254" column="1" bodyfile="D:/OneDrive/Project/Samchon/framework/cpp/samchon/library/SQLStatement.cpp" bodystart="181" bodyend="184"/>
      </memberdef>
      <memberdef kind="function" id="de/def/classsamchon_1_1library_1_1SQLStatement_1ae5b11d601a29cd46d251b86995731d94" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>void</type>
        <definition>void bindParameter</definition>
        <argsstring>(const std::wstring &amp;val)</argsstring>
        <name>bindParameter</name>
        <param>
          <type>const std::wstring &amp;</type>
          <declname>val</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/OneDrive/Project/Samchon/framework/cpp/samchon/library/SQLStatement.hpp" line="255" column="1" bodyfile="D:/OneDrive/Project/Samchon/framework/cpp/samchon/library/SQLStatement.cpp" bodystart="185" bodyend="188"/>
      </memberdef>
      <memberdef kind="function" id="de/def/classsamchon_1_1library_1_1SQLStatement_1a6539f3683af11584e72d0eeed86dc54b" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>void</type>
        <definition>void bindParameter</definition>
        <argsstring>(const ByteArray &amp;val)</argsstring>
        <name>bindParameter</name>
        <param>
          <type>const <ref refid="dc/d37/classsamchon_1_1ByteArray" kindref="compound">ByteArray</ref> &amp;</type>
          <declname>val</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/OneDrive/Project/Samchon/framework/cpp/samchon/library/SQLStatement.hpp" line="256" column="1" bodyfile="D:/OneDrive/Project/Samchon/framework/cpp/samchon/library/SQLStatement.cpp" bodystart="189" bodyend="194"/>
      </memberdef>
      <memberdef kind="function" id="de/def/classsamchon_1_1library_1_1SQLStatement_1a699dfdd3482daa8ccd60d19fb5c626b3" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void sql_get_data</definition>
        <argsstring>(size_t, short, void *) const </argsstring>
        <name>sql_get_data</name>
        <param>
          <type>size_t</type>
          <defname>index</defname>
        </param>
        <param>
          <type>short</type>
          <defname>type</defname>
        </param>
        <param>
          <type>void *</type>
          <defname>listener</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/OneDrive/Project/Samchon/framework/cpp/samchon/library/SQLStatement.hpp" line="261" column="1" bodyfile="D:/OneDrive/Project/Samchon/framework/cpp/samchon/library/SQLStatement.cpp" bodystart="199" bodyend="203"/>
      </memberdef>
      <memberdef kind="function" id="de/def/classsamchon_1_1library_1_1SQLStatement_1aa3e44f7aed49b29aa3ff93e7fc5af491" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void sql_bind_parameter</definition>
        <argsstring>(short, short, void *)</argsstring>
        <name>sql_bind_parameter</name>
        <param>
          <type>short</type>
          <defname>cppType</defname>
        </param>
        <param>
          <type>short</type>
          <defname>sqlType</defname>
        </param>
        <param>
          <type>void *</type>
          <defname>val</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/OneDrive/Project/Samchon/framework/cpp/samchon/library/SQLStatement.hpp" line="262" column="1" bodyfile="D:/OneDrive/Project/Samchon/framework/cpp/samchon/library/SQLStatement.cpp" bodystart="204" bodyend="208"/>
      </memberdef>
      <memberdef kind="function" id="de/def/classsamchon_1_1library_1_1SQLStatement_1ae5ab601a0d47174dc739126dd6e4a546" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename _Ty</type>
          </param>
        </templateparamlist>
        <type>auto</type>
        <definition>auto C_TYPE</definition>
        <argsstring>(const _Ty &amp;) const  -&gt; short</argsstring>
        <name>C_TYPE</name>
        <param>
          <type>const _Ty &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/OneDrive/Project/Samchon/framework/cpp/samchon/library/SQLStatement.hpp" line="264" column="1"/>
      </memberdef>
      <memberdef kind="function" id="de/def/classsamchon_1_1library_1_1SQLStatement_1aba94b2182793a510bfc46ba1317b1a9a" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>auto</type>
        <definition>auto C_TYPE</definition>
        <argsstring>(const bool &amp;) const  -&gt; short</argsstring>
        <name>C_TYPE</name>
        <param>
          <type>const bool &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/OneDrive/Project/Samchon/framework/cpp/samchon/library/SQLStatement.hpp" line="265" column="1" bodyfile="D:/OneDrive/Project/Samchon/framework/cpp/samchon/library/SQLStatement.cpp" bodystart="213" bodyend="216"/>
      </memberdef>
      <memberdef kind="function" id="de/def/classsamchon_1_1library_1_1SQLStatement_1a3aabc519b4488a085476ba74b0d5a1b7" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>auto</type>
        <definition>auto C_TYPE</definition>
        <argsstring>(const char &amp;) const  -&gt; short</argsstring>
        <name>C_TYPE</name>
        <param>
          <type>const char &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/OneDrive/Project/Samchon/framework/cpp/samchon/library/SQLStatement.hpp" line="266" column="1" bodyfile="D:/OneDrive/Project/Samchon/framework/cpp/samchon/library/SQLStatement.cpp" bodystart="217" bodyend="220"/>
      </memberdef>
      <memberdef kind="function" id="de/def/classsamchon_1_1library_1_1SQLStatement_1ae94860ad2b779eecfc5f34e92e73649a" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>auto</type>
        <definition>auto C_TYPE</definition>
        <argsstring>(const short &amp;) const  -&gt; short</argsstring>
        <name>C_TYPE</name>
        <param>
          <type>const short &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/OneDrive/Project/Samchon/framework/cpp/samchon/library/SQLStatement.hpp" line="267" column="1" bodyfile="D:/OneDrive/Project/Samchon/framework/cpp/samchon/library/SQLStatement.cpp" bodystart="221" bodyend="224"/>
      </memberdef>
      <memberdef kind="function" id="de/def/classsamchon_1_1library_1_1SQLStatement_1a2764444ca2e33e711d866be9ab43a7a4" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>auto</type>
        <definition>auto C_TYPE</definition>
        <argsstring>(const long &amp;) const  -&gt; short</argsstring>
        <name>C_TYPE</name>
        <param>
          <type>const long &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/OneDrive/Project/Samchon/framework/cpp/samchon/library/SQLStatement.hpp" line="268" column="1" bodyfile="D:/OneDrive/Project/Samchon/framework/cpp/samchon/library/SQLStatement.cpp" bodystart="225" bodyend="228"/>
      </memberdef>
      <memberdef kind="function" id="de/def/classsamchon_1_1library_1_1SQLStatement_1a01b2457414c0e65939e949b082e6fbea" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>auto</type>
        <definition>auto C_TYPE</definition>
        <argsstring>(const long long &amp;) const  -&gt; short</argsstring>
        <name>C_TYPE</name>
        <param>
          <type>const long long &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/OneDrive/Project/Samchon/framework/cpp/samchon/library/SQLStatement.hpp" line="269" column="1" bodyfile="D:/OneDrive/Project/Samchon/framework/cpp/samchon/library/SQLStatement.cpp" bodystart="229" bodyend="232"/>
      </memberdef>
      <memberdef kind="function" id="de/def/classsamchon_1_1library_1_1SQLStatement_1a985e739bf7ad8195f6bd3f45e17a3b97" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>auto</type>
        <definition>auto C_TYPE</definition>
        <argsstring>(const int &amp;) const  -&gt; short</argsstring>
        <name>C_TYPE</name>
        <param>
          <type>const int &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/OneDrive/Project/Samchon/framework/cpp/samchon/library/SQLStatement.hpp" line="270" column="1" bodyfile="D:/OneDrive/Project/Samchon/framework/cpp/samchon/library/SQLStatement.cpp" bodystart="233" bodyend="236"/>
      </memberdef>
      <memberdef kind="function" id="de/def/classsamchon_1_1library_1_1SQLStatement_1a1ffd847ff028f058f4a5cc396c79979b" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>auto</type>
        <definition>auto C_TYPE</definition>
        <argsstring>(const float &amp;) const  -&gt; short</argsstring>
        <name>C_TYPE</name>
        <param>
          <type>const float &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/OneDrive/Project/Samchon/framework/cpp/samchon/library/SQLStatement.hpp" line="271" column="1" bodyfile="D:/OneDrive/Project/Samchon/framework/cpp/samchon/library/SQLStatement.cpp" bodystart="237" bodyend="240"/>
      </memberdef>
      <memberdef kind="function" id="de/def/classsamchon_1_1library_1_1SQLStatement_1ab34a8862d6ae01842c2a32383cec6b02" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>auto</type>
        <definition>auto C_TYPE</definition>
        <argsstring>(const double &amp;) const  -&gt; short</argsstring>
        <name>C_TYPE</name>
        <param>
          <type>const double &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/OneDrive/Project/Samchon/framework/cpp/samchon/library/SQLStatement.hpp" line="272" column="1" bodyfile="D:/OneDrive/Project/Samchon/framework/cpp/samchon/library/SQLStatement.cpp" bodystart="241" bodyend="244"/>
      </memberdef>
      <memberdef kind="function" id="de/def/classsamchon_1_1library_1_1SQLStatement_1a41b33c9d50b6eb691fdcf434808924a2" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>auto</type>
        <definition>auto C_TYPE</definition>
        <argsstring>(const unsigned char &amp;) const  -&gt; short</argsstring>
        <name>C_TYPE</name>
        <param>
          <type>const unsigned char &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/OneDrive/Project/Samchon/framework/cpp/samchon/library/SQLStatement.hpp" line="274" column="1" bodyfile="D:/OneDrive/Project/Samchon/framework/cpp/samchon/library/SQLStatement.cpp" bodystart="246" bodyend="249"/>
      </memberdef>
      <memberdef kind="function" id="de/def/classsamchon_1_1library_1_1SQLStatement_1a94a57494fb5e169bd61c131a5a9629dc" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>auto</type>
        <definition>auto C_TYPE</definition>
        <argsstring>(const unsigned short &amp;) const  -&gt; short</argsstring>
        <name>C_TYPE</name>
        <param>
          <type>const unsigned short &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/OneDrive/Project/Samchon/framework/cpp/samchon/library/SQLStatement.hpp" line="275" column="1" bodyfile="D:/OneDrive/Project/Samchon/framework/cpp/samchon/library/SQLStatement.cpp" bodystart="250" bodyend="253"/>
      </memberdef>
      <memberdef kind="function" id="de/def/classsamchon_1_1library_1_1SQLStatement_1acb679fca8819dc8e7f8b6ebf152d2dd9" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>auto</type>
        <definition>auto C_TYPE</definition>
        <argsstring>(const unsigned long &amp;) const  -&gt; short</argsstring>
        <name>C_TYPE</name>
        <param>
          <type>const unsigned long &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/OneDrive/Project/Samchon/framework/cpp/samchon/library/SQLStatement.hpp" line="276" column="1" bodyfile="D:/OneDrive/Project/Samchon/framework/cpp/samchon/library/SQLStatement.cpp" bodystart="254" bodyend="257"/>
      </memberdef>
      <memberdef kind="function" id="de/def/classsamchon_1_1library_1_1SQLStatement_1a85e4f9015692fe359f6f7fd7100e7f8e" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>auto</type>
        <definition>auto C_TYPE</definition>
        <argsstring>(const unsigned long long &amp;) const  -&gt; short</argsstring>
        <name>C_TYPE</name>
        <param>
          <type>const unsigned long long &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/OneDrive/Project/Samchon/framework/cpp/samchon/library/SQLStatement.hpp" line="277" column="1" bodyfile="D:/OneDrive/Project/Samchon/framework/cpp/samchon/library/SQLStatement.cpp" bodystart="258" bodyend="261"/>
      </memberdef>
      <memberdef kind="function" id="de/def/classsamchon_1_1library_1_1SQLStatement_1a9b2581af91082870af46b6d8498e16c5" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>auto</type>
        <definition>auto C_TYPE</definition>
        <argsstring>(const unsigned int &amp;) const  -&gt; short</argsstring>
        <name>C_TYPE</name>
        <param>
          <type>const unsigned int &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/OneDrive/Project/Samchon/framework/cpp/samchon/library/SQLStatement.hpp" line="278" column="1" bodyfile="D:/OneDrive/Project/Samchon/framework/cpp/samchon/library/SQLStatement.cpp" bodystart="262" bodyend="265"/>
      </memberdef>
      <memberdef kind="function" id="de/def/classsamchon_1_1library_1_1SQLStatement_1a888ce8bb044a5026ed0ae838ceea4559" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>auto</type>
        <definition>auto C_TYPE</definition>
        <argsstring>(const long double &amp;) const  -&gt; short</argsstring>
        <name>C_TYPE</name>
        <param>
          <type>const long double &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/OneDrive/Project/Samchon/framework/cpp/samchon/library/SQLStatement.hpp" line="279" column="1" bodyfile="D:/OneDrive/Project/Samchon/framework/cpp/samchon/library/SQLStatement.cpp" bodystart="266" bodyend="269"/>
      </memberdef>
      <memberdef kind="function" id="de/def/classsamchon_1_1library_1_1SQLStatement_1a73d32a287a0db5544d4e18726eec847b" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>auto</type>
        <definition>auto C_TYPE</definition>
        <argsstring>(const std::string &amp;) const  -&gt; short</argsstring>
        <name>C_TYPE</name>
        <param>
          <type>const std::string &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/OneDrive/Project/Samchon/framework/cpp/samchon/library/SQLStatement.hpp" line="281" column="1"/>
      </memberdef>
      <memberdef kind="function" id="de/def/classsamchon_1_1library_1_1SQLStatement_1a99ea82f49a1e2ddb6fbff9109619e59b" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>auto</type>
        <definition>auto C_TYPE</definition>
        <argsstring>(const std::wstring &amp;) const  -&gt; short</argsstring>
        <name>C_TYPE</name>
        <param>
          <type>const std::wstring &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/OneDrive/Project/Samchon/framework/cpp/samchon/library/SQLStatement.hpp" line="282" column="1"/>
      </memberdef>
      <memberdef kind="function" id="de/def/classsamchon_1_1library_1_1SQLStatement_1a1db21854ebbdc8e87971233a429c1a84" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>auto</type>
        <definition>auto C_TYPE</definition>
        <argsstring>(const ByteArray &amp;) const  -&gt; short</argsstring>
        <name>C_TYPE</name>
        <param>
          <type>const <ref refid="dc/d37/classsamchon_1_1ByteArray" kindref="compound">ByteArray</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/OneDrive/Project/Samchon/framework/cpp/samchon/library/SQLStatement.hpp" line="283" column="1" bodyfile="D:/OneDrive/Project/Samchon/framework/cpp/samchon/library/SQLStatement.cpp" bodystart="279" bodyend="282"/>
      </memberdef>
      <memberdef kind="function" id="de/def/classsamchon_1_1library_1_1SQLStatement_1a5bdb64c96d1cc96d99b5bf708e11ef0e" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename _Ty</type>
          </param>
        </templateparamlist>
        <type>auto</type>
        <definition>auto SQL_TYPE</definition>
        <argsstring>(const _Ty &amp;) const  -&gt; short</argsstring>
        <name>SQL_TYPE</name>
        <param>
          <type>const _Ty &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/OneDrive/Project/Samchon/framework/cpp/samchon/library/SQLStatement.hpp" line="285" column="1"/>
      </memberdef>
      <memberdef kind="function" id="de/def/classsamchon_1_1library_1_1SQLStatement_1afa760f11c53b613cd743b5827e25c843" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>auto</type>
        <definition>auto SQL_TYPE</definition>
        <argsstring>(const bool &amp;) const  -&gt; short</argsstring>
        <name>SQL_TYPE</name>
        <param>
          <type>const bool &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/OneDrive/Project/Samchon/framework/cpp/samchon/library/SQLStatement.hpp" line="286" column="1" bodyfile="D:/OneDrive/Project/Samchon/framework/cpp/samchon/library/SQLStatement.cpp" bodystart="287" bodyend="290"/>
      </memberdef>
      <memberdef kind="function" id="de/def/classsamchon_1_1library_1_1SQLStatement_1a5fe8ab42734552cb5791db636ebd572c" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>auto</type>
        <definition>auto SQL_TYPE</definition>
        <argsstring>(const char &amp;) const  -&gt; short</argsstring>
        <name>SQL_TYPE</name>
        <param>
          <type>const char &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/OneDrive/Project/Samchon/framework/cpp/samchon/library/SQLStatement.hpp" line="287" column="1" bodyfile="D:/OneDrive/Project/Samchon/framework/cpp/samchon/library/SQLStatement.cpp" bodystart="291" bodyend="294"/>
      </memberdef>
      <memberdef kind="function" id="de/def/classsamchon_1_1library_1_1SQLStatement_1ad47d8e4769f0e6628e1e1cb3ff64cb78" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>auto</type>
        <definition>auto SQL_TYPE</definition>
        <argsstring>(const short &amp;) const  -&gt; short</argsstring>
        <name>SQL_TYPE</name>
        <param>
          <type>const short &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/OneDrive/Project/Samchon/framework/cpp/samchon/library/SQLStatement.hpp" line="288" column="1" bodyfile="D:/OneDrive/Project/Samchon/framework/cpp/samchon/library/SQLStatement.cpp" bodystart="295" bodyend="298"/>
      </memberdef>
      <memberdef kind="function" id="de/def/classsamchon_1_1library_1_1SQLStatement_1a72046dbf8bebac23bb6bb15fbc0d8c39" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>auto</type>
        <definition>auto SQL_TYPE</definition>
        <argsstring>(const long &amp;) const  -&gt; short</argsstring>
        <name>SQL_TYPE</name>
        <param>
          <type>const long &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/OneDrive/Project/Samchon/framework/cpp/samchon/library/SQLStatement.hpp" line="289" column="1" bodyfile="D:/OneDrive/Project/Samchon/framework/cpp/samchon/library/SQLStatement.cpp" bodystart="299" bodyend="302"/>
      </memberdef>
      <memberdef kind="function" id="de/def/classsamchon_1_1library_1_1SQLStatement_1a06a88fce3741431e60824b37023e2333" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>auto</type>
        <definition>auto SQL_TYPE</definition>
        <argsstring>(const long long &amp;) const  -&gt; short</argsstring>
        <name>SQL_TYPE</name>
        <param>
          <type>const long long &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/OneDrive/Project/Samchon/framework/cpp/samchon/library/SQLStatement.hpp" line="290" column="1" bodyfile="D:/OneDrive/Project/Samchon/framework/cpp/samchon/library/SQLStatement.cpp" bodystart="303" bodyend="306"/>
      </memberdef>
      <memberdef kind="function" id="de/def/classsamchon_1_1library_1_1SQLStatement_1a70abf2859fa682c3fd032b5ee32e4cbb" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>auto</type>
        <definition>auto SQL_TYPE</definition>
        <argsstring>(const int &amp;) const  -&gt; short</argsstring>
        <name>SQL_TYPE</name>
        <param>
          <type>const int &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/OneDrive/Project/Samchon/framework/cpp/samchon/library/SQLStatement.hpp" line="291" column="1" bodyfile="D:/OneDrive/Project/Samchon/framework/cpp/samchon/library/SQLStatement.cpp" bodystart="307" bodyend="310"/>
      </memberdef>
      <memberdef kind="function" id="de/def/classsamchon_1_1library_1_1SQLStatement_1a50f88bafe63b39b53cdf12cb2c0efc39" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>auto</type>
        <definition>auto SQL_TYPE</definition>
        <argsstring>(const float &amp;) const  -&gt; short</argsstring>
        <name>SQL_TYPE</name>
        <param>
          <type>const float &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/OneDrive/Project/Samchon/framework/cpp/samchon/library/SQLStatement.hpp" line="292" column="1" bodyfile="D:/OneDrive/Project/Samchon/framework/cpp/samchon/library/SQLStatement.cpp" bodystart="311" bodyend="314"/>
      </memberdef>
      <memberdef kind="function" id="de/def/classsamchon_1_1library_1_1SQLStatement_1a263b8ee652e5cfe0a9d8c56f657b2581" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>auto</type>
        <definition>auto SQL_TYPE</definition>
        <argsstring>(const double &amp;) const  -&gt; short</argsstring>
        <name>SQL_TYPE</name>
        <param>
          <type>const double &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/OneDrive/Project/Samchon/framework/cpp/samchon/library/SQLStatement.hpp" line="293" column="1" bodyfile="D:/OneDrive/Project/Samchon/framework/cpp/samchon/library/SQLStatement.cpp" bodystart="315" bodyend="318"/>
      </memberdef>
      <memberdef kind="function" id="de/def/classsamchon_1_1library_1_1SQLStatement_1a25e6d6eeb5cb8a2cc1c026c39dd296ab" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>auto</type>
        <definition>auto SQL_TYPE</definition>
        <argsstring>(const unsigned char &amp;) const  -&gt; short</argsstring>
        <name>SQL_TYPE</name>
        <param>
          <type>const unsigned char &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/OneDrive/Project/Samchon/framework/cpp/samchon/library/SQLStatement.hpp" line="295" column="1" bodyfile="D:/OneDrive/Project/Samchon/framework/cpp/samchon/library/SQLStatement.cpp" bodystart="320" bodyend="323"/>
      </memberdef>
      <memberdef kind="function" id="de/def/classsamchon_1_1library_1_1SQLStatement_1ac630485164c2d264c3a70536285040e1" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>auto</type>
        <definition>auto SQL_TYPE</definition>
        <argsstring>(const unsigned short &amp;) const  -&gt; short</argsstring>
        <name>SQL_TYPE</name>
        <param>
          <type>const unsigned short &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/OneDrive/Project/Samchon/framework/cpp/samchon/library/SQLStatement.hpp" line="296" column="1" bodyfile="D:/OneDrive/Project/Samchon/framework/cpp/samchon/library/SQLStatement.cpp" bodystart="324" bodyend="327"/>
      </memberdef>
      <memberdef kind="function" id="de/def/classsamchon_1_1library_1_1SQLStatement_1a997664e8aa0bec3cda528fa1ab52bf41" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>auto</type>
        <definition>auto SQL_TYPE</definition>
        <argsstring>(const unsigned long &amp;) const  -&gt; short</argsstring>
        <name>SQL_TYPE</name>
        <param>
          <type>const unsigned long &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/OneDrive/Project/Samchon/framework/cpp/samchon/library/SQLStatement.hpp" line="297" column="1" bodyfile="D:/OneDrive/Project/Samchon/framework/cpp/samchon/library/SQLStatement.cpp" bodystart="328" bodyend="331"/>
      </memberdef>
      <memberdef kind="function" id="de/def/classsamchon_1_1library_1_1SQLStatement_1a7c828599459ba960538da399603a7e60" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>auto</type>
        <definition>auto SQL_TYPE</definition>
        <argsstring>(const unsigned long long &amp;) const  -&gt; short</argsstring>
        <name>SQL_TYPE</name>
        <param>
          <type>const unsigned long long &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/OneDrive/Project/Samchon/framework/cpp/samchon/library/SQLStatement.hpp" line="298" column="1" bodyfile="D:/OneDrive/Project/Samchon/framework/cpp/samchon/library/SQLStatement.cpp" bodystart="332" bodyend="335"/>
      </memberdef>
      <memberdef kind="function" id="de/def/classsamchon_1_1library_1_1SQLStatement_1a710dc17ae4b0160994f0e97f4f5948bd" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>auto</type>
        <definition>auto SQL_TYPE</definition>
        <argsstring>(const unsigned int &amp;) const  -&gt; short</argsstring>
        <name>SQL_TYPE</name>
        <param>
          <type>const unsigned int &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/OneDrive/Project/Samchon/framework/cpp/samchon/library/SQLStatement.hpp" line="299" column="1" bodyfile="D:/OneDrive/Project/Samchon/framework/cpp/samchon/library/SQLStatement.cpp" bodystart="336" bodyend="339"/>
      </memberdef>
      <memberdef kind="function" id="de/def/classsamchon_1_1library_1_1SQLStatement_1ac58d150ea043ad4bd1c60c5580c67c58" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>auto</type>
        <definition>auto SQL_TYPE</definition>
        <argsstring>(const long double &amp;) const  -&gt; short</argsstring>
        <name>SQL_TYPE</name>
        <param>
          <type>const long double &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/OneDrive/Project/Samchon/framework/cpp/samchon/library/SQLStatement.hpp" line="300" column="1" bodyfile="D:/OneDrive/Project/Samchon/framework/cpp/samchon/library/SQLStatement.cpp" bodystart="340" bodyend="343"/>
      </memberdef>
      <memberdef kind="function" id="de/def/classsamchon_1_1library_1_1SQLStatement_1a12e0be29446121d7e772b152490c9cc7" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>auto</type>
        <definition>auto SQL_TYPE</definition>
        <argsstring>(const std::string &amp;) const  -&gt; short</argsstring>
        <name>SQL_TYPE</name>
        <param>
          <type>const std::string &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/OneDrive/Project/Samchon/framework/cpp/samchon/library/SQLStatement.hpp" line="302" column="1"/>
      </memberdef>
      <memberdef kind="function" id="de/def/classsamchon_1_1library_1_1SQLStatement_1a3d7765ed5ab39fcf7203df82846c11fa" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>auto</type>
        <definition>auto SQL_TYPE</definition>
        <argsstring>(const std::wstring &amp;) const  -&gt; short</argsstring>
        <name>SQL_TYPE</name>
        <param>
          <type>const std::wstring &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/OneDrive/Project/Samchon/framework/cpp/samchon/library/SQLStatement.hpp" line="303" column="1"/>
      </memberdef>
      <memberdef kind="function" id="de/def/classsamchon_1_1library_1_1SQLStatement_1afe18e920993e692c91789f9db2a0124a" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>auto</type>
        <definition>auto SQL_TYPE</definition>
        <argsstring>(const ByteArray &amp;) const  -&gt; short</argsstring>
        <name>SQL_TYPE</name>
        <param>
          <type>const <ref refid="dc/d37/classsamchon_1_1ByteArray" kindref="compound">ByteArray</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/OneDrive/Project/Samchon/framework/cpp/samchon/library/SQLStatement.hpp" line="304" column="1" bodyfile="D:/OneDrive/Project/Samchon/framework/cpp/samchon/library/SQLStatement.cpp" bodystart="353" bodyend="356"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>A sql statement. </para>    </briefdescription>
    <detaileddescription>
<para>A <ref refid="de/def/classsamchon_1_1library_1_1SQLStatement" kindref="compound">SQLStatement</ref> instance is used to executing a SQL statement and returning the results it produces against a SQL database that is opened through a <ref refid="d9/d2f/classsamchon_1_1library_1_1SQLi" kindref="compound">SQLi</ref> instance. </para><para>Through the <ref refid="d9/d2f/classsamchon_1_1library_1_1SQLi" kindref="compound">SQLi</ref>, it&apos;s the reason why a principle of DBMS, DBMS system doesn&apos;t allow simultaneous query from a session (connection). Only a query (process) is allowed at a time. If you try to simultaneous query from a <ref refid="d9/d2f/classsamchon_1_1library_1_1SQLi" kindref="compound">SQLi</ref>, ODBC throws error. To avoid the error, an execute of query from <ref refid="de/def/classsamchon_1_1library_1_1SQLStatement" kindref="compound">SQLStatement</ref> will lock a mutex of <ref refid="d9/d2f/classsamchon_1_1library_1_1SQLi" kindref="compound">SQLi</ref> to ensure exclusiveness. </para><para><image type="html" name="library_sql.png"></image>
 <image type="latex" name="library_sql.png"></image>
</para><para><simplesect kind="note"><para></para></simplesect>
To ensure the exclusiveness, you&apos;ve to make <ref refid="de/def/classsamchon_1_1library_1_1SQLStatement" kindref="compound">SQLStatement</ref> from <ref refid="d9/d2f/classsamchon_1_1library_1_1SQLi" kindref="compound">SQLi</ref>. Do not make <ref refid="de/def/classsamchon_1_1library_1_1SQLStatement" kindref="compound">SQLStatement</ref> by yourself. call SQLi::createSQLStatement() instead. Even you make a derived class from <ref refid="de/def/classsamchon_1_1library_1_1SQLStatement" kindref="compound">SQLStatement</ref>, don&apos;t make its constructor to have public accessor. </para><para>Becuase execution of a sql statement causes lock on mutex in <ref refid="d9/d2f/classsamchon_1_1library_1_1SQLi" kindref="compound">SQLi</ref>, you&apos;ve to destruct the <ref refid="de/def/classsamchon_1_1library_1_1SQLStatement" kindref="compound">SQLStatement</ref> or call <ref refid="de/def/classsamchon_1_1library_1_1SQLStatement_1aafde19f7d36ca163a143579c1b125b6d" kindref="member">SQLStatement::free()</ref> method(). If you don&apos;t, the mutex will not be unlocked, thus you can&apos;t do anything by the <ref refid="d9/d2f/classsamchon_1_1library_1_1SQLi" kindref="compound">SQLi</ref>. </para><para><simplesect kind="see"><para><ref refid="d8/dd4/namespacesamchon_1_1library" kindref="compound">samchon::library</ref> </para></simplesect>
<simplesect kind="author"><para>Jeongho Nam </para></simplesect>
</para>    </detaileddescription>
    <inheritancegraph>
      <node id="2776">
        <label>SQLStatement</label>
        <link refid="de/def/classsamchon_1_1library_1_1SQLStatement"/>
      </node>
      <node id="2777">
        <label>TSQLStatement</label>
        <link refid="d3/d69/classsamchon_1_1library_1_1TSQLStatement"/>
        <childnode refid="2776" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2778">
        <label>SQLStatement</label>
        <link refid="de/def/classsamchon_1_1library_1_1SQLStatement"/>
        <childnode refid="2779" relation="usage">
          <edgelabel>bindParameterBASizeMap</edgelabel>
        </childnode>
        <childnode refid="2780" relation="usage">
          <edgelabel>sqli</edgelabel>
        </childnode>
      </node>
      <node id="2779">
        <label>Map&lt; size_t, SQL_SIZE_T &gt;</label>
        <link refid="d1/d4e/classsamchon_1_1Map"/>
      </node>
      <node id="2780">
        <label>SQLi</label>
        <link refid="d9/d2f/classsamchon_1_1library_1_1SQLi"/>
        <childnode refid="2778" relation="usage">
          <edgelabel>stmt</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="D:/OneDrive/Project/Samchon/framework/cpp/samchon/library/SQLStatement.hpp" line="45" column="1" bodyfile="D:/OneDrive/Project/Samchon/framework/cpp/samchon/library/SQLStatement.hpp" bodystart="44" bodyend="305"/>
    <listofallmembers>
      <member refid="de/def/classsamchon_1_1library_1_1SQLStatement_1a21b63a97abd0ea41486084ceca92c867" prot="public" virt="non-virtual"><scope>samchon::library::SQLStatement</scope><name>at</name></member>
      <member refid="de/def/classsamchon_1_1library_1_1SQLStatement_1aadc16d105a71fe0da988322779f61984" prot="public" virt="non-virtual"><scope>samchon::library::SQLStatement</scope><name>at</name></member>
      <member refid="de/def/classsamchon_1_1library_1_1SQLStatement_1acac936dc32184eb6ba73daa0d2dc40c0" prot="public" virt="non-virtual"><scope>samchon::library::SQLStatement</scope><name>at</name></member>
      <member refid="de/def/classsamchon_1_1library_1_1SQLStatement_1aecf1ea51b71ae8be4314f6b64f4adb85" prot="public" virt="non-virtual"><scope>samchon::library::SQLStatement</scope><name>at</name></member>
      <member refid="de/def/classsamchon_1_1library_1_1SQLStatement_1a5f5f00de85bc1c69a52df32af2d40822" prot="private" virt="non-virtual"><scope>samchon::library::SQLStatement</scope><name>bindParameter</name></member>
      <member refid="de/def/classsamchon_1_1library_1_1SQLStatement_1ab22caaa71373489711982af8c8564891" prot="private" virt="non-virtual"><scope>samchon::library::SQLStatement</scope><name>bindParameter</name></member>
      <member refid="de/def/classsamchon_1_1library_1_1SQLStatement_1a9df9222ba3aec3be74ddbbb5f31ed6ac" prot="private" virt="non-virtual"><scope>samchon::library::SQLStatement</scope><name>bindParameter</name></member>
      <member refid="de/def/classsamchon_1_1library_1_1SQLStatement_1ae5b11d601a29cd46d251b86995731d94" prot="private" virt="non-virtual"><scope>samchon::library::SQLStatement</scope><name>bindParameter</name></member>
      <member refid="de/def/classsamchon_1_1library_1_1SQLStatement_1a6539f3683af11584e72d0eeed86dc54b" prot="private" virt="non-virtual"><scope>samchon::library::SQLStatement</scope><name>bindParameter</name></member>
      <member refid="de/def/classsamchon_1_1library_1_1SQLStatement_1a257b3f294b5df4f48ec2bf39f122d6a6" prot="protected" virt="non-virtual"><scope>samchon::library::SQLStatement</scope><name>bindParameterBASizeMap</name></member>
      <member refid="de/def/classsamchon_1_1library_1_1SQLStatement_1a10c37673607a94c552835df9c76e17d4" prot="protected" virt="non-virtual"><scope>samchon::library::SQLStatement</scope><name>bindParameterCount</name></member>
      <member refid="de/def/classsamchon_1_1library_1_1SQLStatement_1ae5ab601a0d47174dc739126dd6e4a546" prot="private" virt="non-virtual"><scope>samchon::library::SQLStatement</scope><name>C_TYPE</name></member>
      <member refid="de/def/classsamchon_1_1library_1_1SQLStatement_1aba94b2182793a510bfc46ba1317b1a9a" prot="private" virt="non-virtual"><scope>samchon::library::SQLStatement</scope><name>C_TYPE</name></member>
      <member refid="de/def/classsamchon_1_1library_1_1SQLStatement_1a3aabc519b4488a085476ba74b0d5a1b7" prot="private" virt="non-virtual"><scope>samchon::library::SQLStatement</scope><name>C_TYPE</name></member>
      <member refid="de/def/classsamchon_1_1library_1_1SQLStatement_1ae94860ad2b779eecfc5f34e92e73649a" prot="private" virt="non-virtual"><scope>samchon::library::SQLStatement</scope><name>C_TYPE</name></member>
      <member refid="de/def/classsamchon_1_1library_1_1SQLStatement_1a2764444ca2e33e711d866be9ab43a7a4" prot="private" virt="non-virtual"><scope>samchon::library::SQLStatement</scope><name>C_TYPE</name></member>
      <member refid="de/def/classsamchon_1_1library_1_1SQLStatement_1a01b2457414c0e65939e949b082e6fbea" prot="private" virt="non-virtual"><scope>samchon::library::SQLStatement</scope><name>C_TYPE</name></member>
      <member refid="de/def/classsamchon_1_1library_1_1SQLStatement_1a985e739bf7ad8195f6bd3f45e17a3b97" prot="private" virt="non-virtual"><scope>samchon::library::SQLStatement</scope><name>C_TYPE</name></member>
      <member refid="de/def/classsamchon_1_1library_1_1SQLStatement_1a1ffd847ff028f058f4a5cc396c79979b" prot="private" virt="non-virtual"><scope>samchon::library::SQLStatement</scope><name>C_TYPE</name></member>
      <member refid="de/def/classsamchon_1_1library_1_1SQLStatement_1ab34a8862d6ae01842c2a32383cec6b02" prot="private" virt="non-virtual"><scope>samchon::library::SQLStatement</scope><name>C_TYPE</name></member>
      <member refid="de/def/classsamchon_1_1library_1_1SQLStatement_1a41b33c9d50b6eb691fdcf434808924a2" prot="private" virt="non-virtual"><scope>samchon::library::SQLStatement</scope><name>C_TYPE</name></member>
      <member refid="de/def/classsamchon_1_1library_1_1SQLStatement_1a94a57494fb5e169bd61c131a5a9629dc" prot="private" virt="non-virtual"><scope>samchon::library::SQLStatement</scope><name>C_TYPE</name></member>
      <member refid="de/def/classsamchon_1_1library_1_1SQLStatement_1acb679fca8819dc8e7f8b6ebf152d2dd9" prot="private" virt="non-virtual"><scope>samchon::library::SQLStatement</scope><name>C_TYPE</name></member>
      <member refid="de/def/classsamchon_1_1library_1_1SQLStatement_1a85e4f9015692fe359f6f7fd7100e7f8e" prot="private" virt="non-virtual"><scope>samchon::library::SQLStatement</scope><name>C_TYPE</name></member>
      <member refid="de/def/classsamchon_1_1library_1_1SQLStatement_1a9b2581af91082870af46b6d8498e16c5" prot="private" virt="non-virtual"><scope>samchon::library::SQLStatement</scope><name>C_TYPE</name></member>
      <member refid="de/def/classsamchon_1_1library_1_1SQLStatement_1a888ce8bb044a5026ed0ae838ceea4559" prot="private" virt="non-virtual"><scope>samchon::library::SQLStatement</scope><name>C_TYPE</name></member>
      <member refid="de/def/classsamchon_1_1library_1_1SQLStatement_1a73d32a287a0db5544d4e18726eec847b" prot="private" virt="non-virtual"><scope>samchon::library::SQLStatement</scope><name>C_TYPE</name></member>
      <member refid="de/def/classsamchon_1_1library_1_1SQLStatement_1a99ea82f49a1e2ddb6fbff9109619e59b" prot="private" virt="non-virtual"><scope>samchon::library::SQLStatement</scope><name>C_TYPE</name></member>
      <member refid="de/def/classsamchon_1_1library_1_1SQLStatement_1a1db21854ebbdc8e87971233a429c1a84" prot="private" virt="non-virtual"><scope>samchon::library::SQLStatement</scope><name>C_TYPE</name></member>
      <member refid="de/def/classsamchon_1_1library_1_1SQLStatement_1a332f32d76b4c5ad86b8d47860befbb04" prot="public" virt="non-virtual"><scope>samchon::library::SQLStatement</scope><name>C_TYPE</name></member>
      <member refid="de/def/classsamchon_1_1library_1_1SQLStatement_1a3e5106fadd061ee8c9735830b5968f6f" prot="public" virt="non-virtual"><scope>samchon::library::SQLStatement</scope><name>C_TYPE</name></member>
      <member refid="de/def/classsamchon_1_1library_1_1SQLStatement_1a61af3e60b94ae3e748f6fbac1e794af7" prot="public" virt="non-virtual"><scope>samchon::library::SQLStatement</scope><name>execute</name></member>
      <member refid="de/def/classsamchon_1_1library_1_1SQLStatement_1a0e0f8524084b9e6a17a3d6b53d5c0c21" prot="public" virt="non-virtual"><scope>samchon::library::SQLStatement</scope><name>executeDirectly</name></member>
      <member refid="de/def/classsamchon_1_1library_1_1SQLStatement_1ac40ce75123bf8135e599fb5385c93bc4" prot="public" virt="non-virtual"><scope>samchon::library::SQLStatement</scope><name>fetch</name></member>
      <member refid="de/def/classsamchon_1_1library_1_1SQLStatement_1aafde19f7d36ca163a143579c1b125b6d" prot="public" virt="non-virtual"><scope>samchon::library::SQLStatement</scope><name>free</name></member>
      <member refid="de/def/classsamchon_1_1library_1_1SQLStatement_1a1e1160e68b9d5a9ffc8651c2bdf7783b" prot="public" virt="non-virtual"><scope>samchon::library::SQLStatement</scope><name>get</name></member>
      <member refid="de/def/classsamchon_1_1library_1_1SQLStatement_1a07586fe73a1456ecc4cc9cd922dcf7fb" prot="protected" virt="non-virtual"><scope>samchon::library::SQLStatement</scope><name>hstmt</name></member>
      <member refid="de/def/classsamchon_1_1library_1_1SQLStatement_1a4aa958951f386e1c6754cb166772e456" prot="public" virt="non-virtual"><scope>samchon::library::SQLStatement</scope><name>next</name></member>
      <member refid="de/def/classsamchon_1_1library_1_1SQLStatement_1a142bbc3bf2ea6eb276b185d97f9e6bf4" prot="public" virt="non-virtual"><scope>samchon::library::SQLStatement</scope><name>prepare</name></member>
      <member refid="de/def/classsamchon_1_1library_1_1SQLStatement_1ade976b5340d6d170f7eff0dd643204a3" prot="public" virt="non-virtual"><scope>samchon::library::SQLStatement</scope><name>prepare</name></member>
      <member refid="de/def/classsamchon_1_1library_1_1SQLStatement_1a4fece1a9b988d01819be999779c4fc4e" prot="public" virt="non-virtual"><scope>samchon::library::SQLStatement</scope><name>prepare</name></member>
      <member refid="de/def/classsamchon_1_1library_1_1SQLStatement_1a5f2e190b8261a98c97c2ea4e86670d54" prot="public" virt="non-virtual"><scope>samchon::library::SQLStatement</scope><name>refresh</name></member>
      <member refid="de/def/classsamchon_1_1library_1_1SQLStatement_1af90912ea6348e6b54b4184b75d487228" prot="protected" virt="non-virtual"><scope>samchon::library::SQLStatement</scope><name>reset</name></member>
      <member refid="de/def/classsamchon_1_1library_1_1SQLStatement_1ac4dde158d6dd302ea028acb582e9b67a" prot="public" virt="non-virtual"><scope>samchon::library::SQLStatement</scope><name>size</name></member>
      <member refid="de/def/classsamchon_1_1library_1_1SQLStatement_1aa3e44f7aed49b29aa3ff93e7fc5af491" prot="private" virt="non-virtual"><scope>samchon::library::SQLStatement</scope><name>sql_bind_parameter</name></member>
      <member refid="de/def/classsamchon_1_1library_1_1SQLStatement_1a699dfdd3482daa8ccd60d19fb5c626b3" prot="private" virt="non-virtual"><scope>samchon::library::SQLStatement</scope><name>sql_get_data</name></member>
      <member refid="de/def/classsamchon_1_1library_1_1SQLStatement_1ac6286d18f6bb01561cffe1ba299e7611" prot="private" virt="non-virtual"><scope>samchon::library::SQLStatement</scope><name>SQL_SIZE_T</name></member>
      <member refid="de/def/classsamchon_1_1library_1_1SQLStatement_1a5bdb64c96d1cc96d99b5bf708e11ef0e" prot="private" virt="non-virtual"><scope>samchon::library::SQLStatement</scope><name>SQL_TYPE</name></member>
      <member refid="de/def/classsamchon_1_1library_1_1SQLStatement_1afa760f11c53b613cd743b5827e25c843" prot="private" virt="non-virtual"><scope>samchon::library::SQLStatement</scope><name>SQL_TYPE</name></member>
      <member refid="de/def/classsamchon_1_1library_1_1SQLStatement_1a5fe8ab42734552cb5791db636ebd572c" prot="private" virt="non-virtual"><scope>samchon::library::SQLStatement</scope><name>SQL_TYPE</name></member>
      <member refid="de/def/classsamchon_1_1library_1_1SQLStatement_1ad47d8e4769f0e6628e1e1cb3ff64cb78" prot="private" virt="non-virtual"><scope>samchon::library::SQLStatement</scope><name>SQL_TYPE</name></member>
      <member refid="de/def/classsamchon_1_1library_1_1SQLStatement_1a72046dbf8bebac23bb6bb15fbc0d8c39" prot="private" virt="non-virtual"><scope>samchon::library::SQLStatement</scope><name>SQL_TYPE</name></member>
      <member refid="de/def/classsamchon_1_1library_1_1SQLStatement_1a06a88fce3741431e60824b37023e2333" prot="private" virt="non-virtual"><scope>samchon::library::SQLStatement</scope><name>SQL_TYPE</name></member>
      <member refid="de/def/classsamchon_1_1library_1_1SQLStatement_1a70abf2859fa682c3fd032b5ee32e4cbb" prot="private" virt="non-virtual"><scope>samchon::library::SQLStatement</scope><name>SQL_TYPE</name></member>
      <member refid="de/def/classsamchon_1_1library_1_1SQLStatement_1a50f88bafe63b39b53cdf12cb2c0efc39" prot="private" virt="non-virtual"><scope>samchon::library::SQLStatement</scope><name>SQL_TYPE</name></member>
      <member refid="de/def/classsamchon_1_1library_1_1SQLStatement_1a263b8ee652e5cfe0a9d8c56f657b2581" prot="private" virt="non-virtual"><scope>samchon::library::SQLStatement</scope><name>SQL_TYPE</name></member>
      <member refid="de/def/classsamchon_1_1library_1_1SQLStatement_1a25e6d6eeb5cb8a2cc1c026c39dd296ab" prot="private" virt="non-virtual"><scope>samchon::library::SQLStatement</scope><name>SQL_TYPE</name></member>
      <member refid="de/def/classsamchon_1_1library_1_1SQLStatement_1ac630485164c2d264c3a70536285040e1" prot="private" virt="non-virtual"><scope>samchon::library::SQLStatement</scope><name>SQL_TYPE</name></member>
      <member refid="de/def/classsamchon_1_1library_1_1SQLStatement_1a997664e8aa0bec3cda528fa1ab52bf41" prot="private" virt="non-virtual"><scope>samchon::library::SQLStatement</scope><name>SQL_TYPE</name></member>
      <member refid="de/def/classsamchon_1_1library_1_1SQLStatement_1a7c828599459ba960538da399603a7e60" prot="private" virt="non-virtual"><scope>samchon::library::SQLStatement</scope><name>SQL_TYPE</name></member>
      <member refid="de/def/classsamchon_1_1library_1_1SQLStatement_1a710dc17ae4b0160994f0e97f4f5948bd" prot="private" virt="non-virtual"><scope>samchon::library::SQLStatement</scope><name>SQL_TYPE</name></member>
      <member refid="de/def/classsamchon_1_1library_1_1SQLStatement_1ac58d150ea043ad4bd1c60c5580c67c58" prot="private" virt="non-virtual"><scope>samchon::library::SQLStatement</scope><name>SQL_TYPE</name></member>
      <member refid="de/def/classsamchon_1_1library_1_1SQLStatement_1a12e0be29446121d7e772b152490c9cc7" prot="private" virt="non-virtual"><scope>samchon::library::SQLStatement</scope><name>SQL_TYPE</name></member>
      <member refid="de/def/classsamchon_1_1library_1_1SQLStatement_1a3d7765ed5ab39fcf7203df82846c11fa" prot="private" virt="non-virtual"><scope>samchon::library::SQLStatement</scope><name>SQL_TYPE</name></member>
      <member refid="de/def/classsamchon_1_1library_1_1SQLStatement_1afe18e920993e692c91789f9db2a0124a" prot="private" virt="non-virtual"><scope>samchon::library::SQLStatement</scope><name>SQL_TYPE</name></member>
      <member refid="de/def/classsamchon_1_1library_1_1SQLStatement_1a0dfc80b0dbca971ec14799505226e072" prot="public" virt="non-virtual"><scope>samchon::library::SQLStatement</scope><name>SQL_TYPE</name></member>
      <member refid="de/def/classsamchon_1_1library_1_1SQLStatement_1af9e6a0f6081ae21b63e962e14f8fcbe3" prot="public" virt="non-virtual"><scope>samchon::library::SQLStatement</scope><name>SQL_TYPE</name></member>
      <member refid="de/def/classsamchon_1_1library_1_1SQLStatement_1a13714007d02c778c7993d06a1010be95" prot="protected" virt="non-virtual"><scope>samchon::library::SQLStatement</scope><name>sqli</name></member>
      <member refid="de/def/classsamchon_1_1library_1_1SQLStatement_1a27fee800887428a73c9dd801e39aebd4" prot="protected" virt="non-virtual"><scope>samchon::library::SQLStatement</scope><name>SQLStatement</name></member>
      <member refid="de/def/classsamchon_1_1library_1_1SQLStatement_1ab18f224e3e9420e471c28a66bcaa909a" prot="public" virt="virtual"><scope>samchon::library::SQLStatement</scope><name>toXML</name></member>
      <member refid="de/def/classsamchon_1_1library_1_1SQLStatement_1a836476eea0f9a9416105f8aff5bcc8e7" prot="public" virt="virtual"><scope>samchon::library::SQLStatement</scope><name>~SQLStatement</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
