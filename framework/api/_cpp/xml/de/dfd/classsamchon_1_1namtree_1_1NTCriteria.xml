<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.10">
  <compounddef id="de/dfd/classsamchon_1_1namtree_1_1NTCriteria" kind="class" language="C++" prot="public">
    <compoundname>samchon::namtree::NTCriteria</compoundname>
    <basecompoundref refid="d4/deb/classsamchon_1_1protocol_1_1EntityGroup" prot="public" virt="virtual">samchon::protocol::EntityGroup&lt; NTCriteria &gt;</basecompoundref>
    <includes refid="d6/d72/NTCriteria_8hpp" local="no">NTCriteria.hpp</includes>
      <sectiondef kind="public-type">
      <memberdef kind="enum" id="de/dfd/classsamchon_1_1namtree_1_1NTCriteria_1a726ca809ffd3d67ab4b8476646f26635" prot="public" static="no">
        <name>@6</name>
        <enumvalue id="de/dfd/classsamchon_1_1namtree_1_1NTCriteria_1a726ca809ffd3d67ab4b8476646f26635a95c736070f99b99eb80d1eac1f4ca60f" prot="public">
          <name>LESS</name>
          <initializer>= -2</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="de/dfd/classsamchon_1_1namtree_1_1NTCriteria_1a726ca809ffd3d67ab4b8476646f26635ac7fcbbb467ef6d40ec686d894e26accd" prot="public">
          <name>LESS_EQUAL</name>
          <initializer>= -1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="de/dfd/classsamchon_1_1namtree_1_1NTCriteria_1a726ca809ffd3d67ab4b8476646f26635aa8fc0d41a55a8c27a933257e850defb0" prot="public">
          <name>EUQLA</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="de/dfd/classsamchon_1_1namtree_1_1NTCriteria_1a726ca809ffd3d67ab4b8476646f26635a07b1a809ffd1e6d725e67a51a60de3a6" prot="public">
          <name>LARGER_EQUAL</name>
          <initializer>= 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="de/dfd/classsamchon_1_1namtree_1_1NTCriteria_1a726ca809ffd3d67ab4b8476646f26635a98188776e7d896b4904fc7bea96af4ca" prot="public">
          <name>LARGER</name>
          <initializer>= 2</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/OneDrive/Project/Samchon/framework/cpp/samchon/namtree/NTCriteria.hpp" line="85" column="1" bodyfile="D:/OneDrive/Project/Samchon/framework/cpp/samchon/namtree/NTCriteria.hpp" bodystart="84" bodyend="91"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-type">
      <memberdef kind="typedef" id="de/dfd/classsamchon_1_1namtree_1_1NTCriteria_1aa3a98d9e6bda8b86b338d6949e83a019" prot="private" static="no">
        <type><ref refid="db/d64/namespacesamchon_1_1protocol_1aad78260d3d142da970db113839ab3e52" kindref="member">protocol::SharedEntityArray</ref>&lt; <ref refid="de/dfd/classsamchon_1_1namtree_1_1NTCriteria" kindref="compound">NTCriteria</ref> &gt;</type>
        <definition>typedef protocol::SharedEntityArray&lt;NTCriteria&gt; super</definition>
        <argsstring></argsstring>
        <name>super</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/OneDrive/Project/Samchon/framework/cpp/samchon/namtree/NTCriteria.hpp" line="81" column="1" bodyfile="D:/OneDrive/Project/Samchon/framework/cpp/samchon/namtree/NTCriteria.hpp" bodystart="81" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="de/dfd/classsamchon_1_1namtree_1_1NTCriteria_1a8b5d1ee59aae47f4a2e6ed0e09f184a2" prot="protected" static="no" mutable="no">
        <type><ref refid="d0/d7b/classsamchon_1_1namtree_1_1NTFactory" kindref="compound">NTFactory</ref> *</type>
        <definition>NTFactory* factory</definition>
        <argsstring></argsstring>
        <name>factory</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/OneDrive/Project/Samchon/framework/cpp/samchon/namtree/NTCriteria.hpp" line="94" column="1" bodyfile="D:/OneDrive/Project/Samchon/framework/cpp/samchon/namtree/NTCriteria.hpp" bodystart="94" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="de/dfd/classsamchon_1_1namtree_1_1NTCriteria_1aff84e7e6916e39358619f6cb55e51a33" prot="protected" static="no" mutable="no">
        <type><ref refid="de/dfd/classsamchon_1_1namtree_1_1NTCriteria" kindref="compound">NTCriteria</ref> *</type>
        <definition>NTCriteria* parent</definition>
        <argsstring></argsstring>
        <name>parent</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/OneDrive/Project/Samchon/framework/cpp/samchon/namtree/NTCriteria.hpp" line="95" column="1" bodyfile="D:/OneDrive/Project/Samchon/framework/cpp/samchon/namtree/NTCriteria.hpp" bodystart="95" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="de/dfd/classsamchon_1_1namtree_1_1NTCriteria_1a8589d7347581da4f77a8cbf430766e35" prot="protected" static="no" mutable="no">
        <type><ref refid="d4/df0/classsamchon_1_1namtree_1_1NTSide" kindref="compound">NTSide</ref> *</type>
        <definition>NTSide* leftSide</definition>
        <argsstring></argsstring>
        <name>leftSide</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/OneDrive/Project/Samchon/framework/cpp/samchon/namtree/NTCriteria.hpp" line="97" column="1" bodyfile="D:/OneDrive/Project/Samchon/framework/cpp/samchon/namtree/NTCriteria.hpp" bodystart="97" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="de/dfd/classsamchon_1_1namtree_1_1NTCriteria_1a9267050b3faead4b957cc7272bfe1ee9" prot="protected" static="no" mutable="no">
        <type><ref refid="d4/df0/classsamchon_1_1namtree_1_1NTSide" kindref="compound">NTSide</ref> *</type>
        <definition>NTSide* rightSide</definition>
        <argsstring></argsstring>
        <name>rightSide</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/OneDrive/Project/Samchon/framework/cpp/samchon/namtree/NTCriteria.hpp" line="98" column="1" bodyfile="D:/OneDrive/Project/Samchon/framework/cpp/samchon/namtree/NTCriteria.hpp" bodystart="98" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="de/dfd/classsamchon_1_1namtree_1_1NTCriteria_1a648ff8c073dab7ecce2991760544a59a" prot="protected" static="no" mutable="no">
        <type>int</type>
        <definition>int operator_</definition>
        <argsstring></argsstring>
        <name>operator_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/OneDrive/Project/Samchon/framework/cpp/samchon/namtree/NTCriteria.hpp" line="100" column="1" bodyfile="D:/OneDrive/Project/Samchon/framework/cpp/samchon/namtree/NTCriteria.hpp" bodystart="100" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="de/dfd/classsamchon_1_1namtree_1_1NTCriteria_1a99108733d00274978a4979dc072bd513" prot="protected" static="no" mutable="no">
        <type>double</type>
        <definition>double weight</definition>
        <argsstring></argsstring>
        <name>weight</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/OneDrive/Project/Samchon/framework/cpp/samchon/namtree/NTCriteria.hpp" line="101" column="1" bodyfile="D:/OneDrive/Project/Samchon/framework/cpp/samchon/namtree/NTCriteria.hpp" bodystart="101" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="de/dfd/classsamchon_1_1namtree_1_1NTCriteria_1a9e8eea2776e3916def2f5ef867452c53" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>NTCriteria</definition>
        <argsstring>(NTFactory *, NTCriteria *)</argsstring>
        <name>NTCriteria</name>
        <param>
          <type><ref refid="d0/d7b/classsamchon_1_1namtree_1_1NTFactory" kindref="compound">NTFactory</ref> *</type>
          <defname>factory</defname>
        </param>
        <param>
          <type><ref refid="de/dfd/classsamchon_1_1namtree_1_1NTCriteria" kindref="compound">NTCriteria</ref> *</type>
          <defname>parent</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/OneDrive/Project/Samchon/framework/cpp/samchon/namtree/NTCriteria.hpp" line="107" column="1" bodyfile="D:/OneDrive/Project/Samchon/framework/cpp/samchon/namtree/NTCriteria.cpp" bodystart="19" bodyend="27"/>
      </memberdef>
      <memberdef kind="function" id="de/dfd/classsamchon_1_1namtree_1_1NTCriteria_1ab14c06188e60598769ae49095813e688" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>~NTCriteria</definition>
        <argsstring>()</argsstring>
        <name>~NTCriteria</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/OneDrive/Project/Samchon/framework/cpp/samchon/namtree/NTCriteria.hpp" line="108" column="1" bodyfile="D:/OneDrive/Project/Samchon/framework/cpp/samchon/namtree/NTCriteria.cpp" bodystart="28" bodyend="32"/>
      </memberdef>
      <memberdef kind="function" id="de/dfd/classsamchon_1_1namtree_1_1NTCriteria_1a4c4b7d9441b10a734e8ce75e67d0375c" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void construct</definition>
        <argsstring>(std::shared_ptr&lt; library::XML &gt;) override</argsstring>
        <name>construct</name>
        <reimplements refid="d4/deb/classsamchon_1_1protocol_1_1EntityGroup_1a49bad12c4913a280d0249479ee08edc2">construct</reimplements>
        <param>
          <type>std::shared_ptr&lt; <ref refid="d5/d37/classsamchon_1_1library_1_1XML" kindref="compound">library::XML</ref> &gt;</type>
          <declname>xml</declname>
        </param>
        <briefdescription>
<para>Construct data of the Entity from an XML object. </para>        </briefdescription>
        <detaileddescription>
<para>Constructs the EntityGroup&apos;s own member variables only from the input XML object. </para><para>Do not consider about constructing children Entity objects&apos; data in EntityGroup::construct(). Those children Entity objects&apos; data will constructed by their own <ref refid="de/dfd/classsamchon_1_1namtree_1_1NTCriteria_1a4c4b7d9441b10a734e8ce75e67d0375c" kindref="member">construct()</ref> method. Even insertion of XML objects representing children are done by abstract method of EntityGroup::toXML(). </para><para>Constructs only data of EntityGroup&apos;s own. </para><para><simplesect kind="par"><title>[Inherited]</title><para></para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/OneDrive/Project/Samchon/framework/cpp/samchon/namtree/NTCriteria.hpp" line="110" column="1" bodyfile="D:/OneDrive/Project/Samchon/framework/cpp/samchon/namtree/NTCriteria.cpp" bodystart="34" bodyend="43"/>
      </memberdef>
      <memberdef kind="function" id="de/dfd/classsamchon_1_1namtree_1_1NTCriteria_1aff61abd6361a1b98fec66f0c7b03b3c1" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void initRetrieve</definition>
        <argsstring>()</argsstring>
        <name>initRetrieve</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/OneDrive/Project/Samchon/framework/cpp/samchon/namtree/NTCriteria.hpp" line="119" column="1" bodyfile="D:/OneDrive/Project/Samchon/framework/cpp/samchon/namtree/NTCriteria.cpp" bodystart="49" bodyend="56"/>
      </memberdef>
      <memberdef kind="function" id="de/dfd/classsamchon_1_1namtree_1_1NTCriteria_1a47647ab5f66983769a3949564144089e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>auto</type>
        <definition>auto calcRetrieved</definition>
        <argsstring>(NTIterator &amp;) const  -&gt; double</argsstring>
        <name>calcRetrieved</name>
        <param>
          <type><ref refid="d4/dd2/classsamchon_1_1namtree_1_1NTIterator" kindref="compound">NTIterator</ref> &amp;</type>
          <defname>iterator</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/OneDrive/Project/Samchon/framework/cpp/samchon/namtree/NTCriteria.hpp" line="120" column="1" bodyfile="D:/OneDrive/Project/Samchon/framework/cpp/samchon/namtree/NTCriteria.cpp" bodystart="57" bodyend="68"/>
      </memberdef>
      <memberdef kind="function" id="de/dfd/classsamchon_1_1namtree_1_1NTCriteria_1aa55bc231502ef8e0dd9a9c274d028ac9" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>auto</type>
        <definition>auto TAG</definition>
        <argsstring>() const  -&gt; std::string override</argsstring>
        <name>TAG</name>
        <reimplements refid="d0/d3e/classsamchon_1_1protocol_1_1Entity_1a974f48d92f0ef494a8d2c879f82c6426">TAG</reimplements>
        <briefdescription>
<para>A tag name when represented by XML. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>A tag name </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/OneDrive/Project/Samchon/framework/cpp/samchon/namtree/NTCriteria.hpp" line="126" column="1" bodyfile="D:/OneDrive/Project/Samchon/framework/cpp/samchon/namtree/NTCriteria.cpp" bodystart="16" bodyend="16"/>
      </memberdef>
      <memberdef kind="function" id="de/dfd/classsamchon_1_1namtree_1_1NTCriteria_1a5cb3666da8a6a0efe4014782bda20af0" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>auto</type>
        <definition>auto CHILD_TAG</definition>
        <argsstring>() const  -&gt; std::string override</argsstring>
        <name>CHILD_TAG</name>
        <reimplements refid="d9/d4c/classsamchon_1_1protocol_1_1IEntityGroup_1abcef66d1cd792f48c12c52ac52198c0f">CHILD_TAG</reimplements>
        <briefdescription>
<para>A tag name of children. </para>        </briefdescription>
        <detaileddescription>
<para>&lt; TAG&gt;<linebreak/>
 <nonbreakablespace/><nonbreakablespace/><nonbreakablespace/><nonbreakablespace/> &lt;CHILD_TAG /&gt;<linebreak/>
 <nonbreakablespace/><nonbreakablespace/><nonbreakablespace/><nonbreakablespace/> &lt;CHILD_TAG /&gt;<linebreak/>
 &lt;/TAG&gt; </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/OneDrive/Project/Samchon/framework/cpp/samchon/namtree/NTCriteria.hpp" line="127" column="1" bodyfile="D:/OneDrive/Project/Samchon/framework/cpp/samchon/namtree/NTCriteria.cpp" bodystart="17" bodyend="17"/>
      </memberdef>
      <memberdef kind="function" id="de/dfd/classsamchon_1_1namtree_1_1NTCriteria_1ac0248fcb25b3fa4f463d545005fdcbf3" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>auto</type>
        <definition>auto toXML</definition>
        <argsstring>() const  -&gt; std::shared_ptr&lt; library::XML &gt; override</argsstring>
        <name>toXML</name>
        <reimplements refid="d4/deb/classsamchon_1_1protocol_1_1EntityGroup_1a30dee0fe2044f2f88579935cc10fc753">toXML</reimplements>
        <briefdescription>
<para>Get an XML object represents the EntityGroup. </para>        </briefdescription>
        <detaileddescription>
<para>Archives the EntityGroup&apos;s own member variables only to the returned XML object. </para><para>Do not consider about archiving children Entity objects&apos; data in EntityGroup::toXML(). Those children Entity objects will converted to XML object by their own <ref refid="de/dfd/classsamchon_1_1namtree_1_1NTCriteria_1ac0248fcb25b3fa4f463d545005fdcbf3" kindref="member">toXML()</ref> method. The insertion of XML objects representing children are done by abstract method of EntityGroup::toXML(). </para><para>Archives only data of EntityGroup&apos;s own. </para><para><simplesect kind="par"><title>[Inherited]</title><para></para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/OneDrive/Project/Samchon/framework/cpp/samchon/namtree/NTCriteria.hpp" line="129" column="1" bodyfile="D:/OneDrive/Project/Samchon/framework/cpp/samchon/namtree/NTCriteria.cpp" bodystart="70" bodyend="80"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="de/dfd/classsamchon_1_1namtree_1_1NTCriteria_1a64ca473096ff67fd1d6cb4440267bda0" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>auto</type>
        <definition>auto createChild</definition>
        <argsstring>(std::shared_ptr&lt; library::XML &gt;) -&gt; NTCriteria *override</argsstring>
        <name>createChild</name>
        <reimplements refid="d4/deb/classsamchon_1_1protocol_1_1EntityGroup_1a554e0798083a38327f360c61a1ca716b">createChild</reimplements>
        <param>
          <type>std::shared_ptr&lt; <ref refid="d5/d37/classsamchon_1_1library_1_1XML" kindref="compound">library::XML</ref> &gt;</type>
        </param>
        <briefdescription>
<para>Factory method of a child Entity. </para>        </briefdescription>
        <detaileddescription>
<para>EntityGroup::createChild() is a factory method creating a new child Entity which is belonged to the EntityGroup. This method is called by EntityGroup::construct(). The children construction methods Entity::construct() will be called by abstract method of the EntityGroup::construct(). </para><para><simplesect kind="return"><para>A new child Entity belongs to EntityGroup. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/OneDrive/Project/Samchon/framework/cpp/samchon/namtree/NTCriteria.hpp" line="113" column="1" bodyfile="D:/OneDrive/Project/Samchon/framework/cpp/samchon/namtree/NTCriteria.cpp" bodystart="44" bodyend="47"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Criteria, a conditional expression with weight. </para>    </briefdescription>
    <detaileddescription>
<para><ref refid="de/dfd/classsamchon_1_1namtree_1_1NTCriteria" kindref="compound">NTCriteria</ref> is an object realizing ANN(Artificial Neural Network). </para><para>You can make the ANN model having weight and bias. </para><para><orderedlist>
<listitem>
<para>A conditional expression with weight  </para><para>F(x) = (<ref refid="d4/df0/classsamchon_1_1namtree_1_1NTSide" kindref="compound">NTSide</ref> &lt; <ref refid="d4/df0/classsamchon_1_1namtree_1_1NTSide" kindref="compound">NTSide</ref> ? 1: 0) X weight </para><para></para><para>NTCrietria is made up for conditional expression. </para><para><itemizedlist>
<listitem>
<para>When the expression is true, returns 1 * weight  </para></listitem>
<listitem>
<para>When the expression is false, returns 0  </para></listitem>
</itemizedlist>
</para></listitem>
<listitem>
<para>Hierarchical relationship  <itemizedlist>
<listitem>
<para>In vertical relationship: multiply (X)  </para></listitem>
<listitem>
<para>In horizontal relationship: plus (+)  </para></listitem>
</itemizedlist>
</para><para></para><para>With that rule, you can make enormous conditions. I can sure there&apos;s not any condition can&apos;be be expressed by the model. </para><para></para><para></para><para><image type="html" name="namtree_nt_criteria.png"></image>
 <image type="latex" name="namtree_nt_criteria.png"></image>
</para><para></para></listitem>
<listitem>
<para>Making bias  </para><para>Just make a <ref refid="de/dfd/classsamchon_1_1namtree_1_1NTCriteria" kindref="compound">NTCriteria</ref> returns only true. </para><para></para><para>It&apos;s the bias returns only weight. </para><para></para><para></para></listitem>
<listitem>
<para>Explore  <orderedlist>
<listitem>
<para>Exporing in a <ref refid="de/dfd/classsamchon_1_1namtree_1_1NTCriteria" kindref="compound">NTCriteria</ref> (optimize a side)  </para><para>Make a <ref refid="d4/df0/classsamchon_1_1namtree_1_1NTSide" kindref="compound">NTSide</ref> to be nullptr, then <ref refid="de/dfd/classsamchon_1_1namtree_1_1NTCriteria" kindref="compound">NTCriteria</ref> will explore the best value.</para><para></para><para>Nam-Tree will calculate the condtions from minimum to maximum in <ref refid="d5/d98/classsamchon_1_1namtree_1_1INTExplore" kindref="compound">INTExplore</ref> reach to the precision, by the method of multi-demensional grid. </para><para></para><para></para></listitem>
<listitem>
<para>Exploring parameter in <ref refid="d4/df0/classsamchon_1_1namtree_1_1NTSide" kindref="compound">NTSide</ref>  </para><para>If you set the parameterMNap to be empty, Nam-Tree will explore the best parameter until reach to the precision in INTExploreParameter from minimum to maximum. </para><para></para><para></para><para><image type="html" name="namtree_grid_method.png"></image>
 <image type="latex" name="namtree_grid_method.png"></image>
</para><para></para></listitem>
<listitem>
<para>Exploring by creating <ref refid="de/dfd/classsamchon_1_1namtree_1_1NTCriteria" kindref="compound">NTCriteria</ref>  </para><para>(Creates lots of hierarchical conditions and tests them) </para><para></para><para>If all the side (left and right) in a <ref refid="de/dfd/classsamchon_1_1namtree_1_1NTCriteria" kindref="compound">NTCriteria</ref> are nullptr, the <ref refid="de/dfd/classsamchon_1_1namtree_1_1NTCriteria" kindref="compound">NTCriteria</ref> will make a lot of children NTCriteria(s) to test lots of cases, so that derives the best condition set will be made up. </para><para></para><para>This process will ride on same routines of 4-1 and 4-2, for each created cases. Of course, this process needs too much time, so that you may need to be patient. </para><para></para></listitem>
</orderedlist>
</para></listitem>
</orderedlist>
</para><para><image type="html" name="namtree_criteria.png"></image>
 <image type="latex" name="namtree_criteria.png"></image>
</para><para><simplesect kind="see"><para><ref refid="d4/d05/namespacesamchon_1_1namtree" kindref="compound">samchon::namtree</ref> </para></simplesect>
<simplesect kind="author"><para>Jeongho Nam </para></simplesect>
</para>    </detaileddescription>
    <inheritancegraph>
      <node id="2078">
        <label>NTCriteria</label>
        <link refid="de/dfd/classsamchon_1_1namtree_1_1NTCriteria"/>
        <childnode refid="2079" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2080">
        <label>Entity</label>
        <link refid="d0/d3e/classsamchon_1_1protocol_1_1Entity"/>
      </node>
      <node id="2079">
        <label>SharedEntityArray&lt; NTCriteria &gt;</label>
        <link refid="d4/deb/classsamchon_1_1protocol_1_1EntityGroup"/>
        <childnode refid="2080" relation="public-inheritance">
        </childnode>
        <childnode refid="2081" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2081">
        <label>IEntityGroup</label>
        <link refid="d9/d4c/classsamchon_1_1protocol_1_1IEntityGroup"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2094">
        <label>INTExplore</label>
        <link refid="d5/d98/classsamchon_1_1namtree_1_1INTExplore"/>
        <childnode refid="2084" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2092">
        <label>FTFactory</label>
        <link refid="d6/d60/classsamchon_1_1library_1_1FTFactory"/>
        <childnode refid="2093" relation="usage">
          <edgelabel>instanceMap</edgelabel>
        </childnode>
      </node>
      <node id="2093">
        <label>Map&lt; int, samchon::library::FTInstance * &gt;</label>
        <link refid="d1/d4e/classsamchon_1_1Map"/>
      </node>
      <node id="2097">
        <label>NTFactory</label>
        <link refid="d0/d7b/classsamchon_1_1namtree_1_1NTFactory"/>
        <childnode refid="2092" relation="public-inheritance">
        </childnode>
        <childnode refid="2098" relation="usage">
          <edgelabel>data</edgelabel>
        </childnode>
        <childnode refid="2099" relation="usage">
          <edgelabel>sideFunctionMap</edgelabel>
        </childnode>
      </node>
      <node id="2088">
        <label>FTFile</label>
        <link refid="d2/d27/classsamchon_1_1library_1_1FTFile"/>
        <childnode refid="2089" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2099">
        <label>Map&lt; SideFunction &gt;</label>
        <link refid="d1/d4e/classsamchon_1_1Map"/>
      </node>
      <node id="2082">
        <label>NTCriteria</label>
        <link refid="de/dfd/classsamchon_1_1namtree_1_1NTCriteria"/>
        <childnode refid="2083" relation="public-inheritance">
        </childnode>
        <childnode refid="2082" relation="usage">
          <edgelabel>parent</edgelabel>
        </childnode>
        <childnode refid="2086" relation="usage">
          <edgelabel>rightSide</edgelabel>
          <edgelabel>leftSide</edgelabel>
        </childnode>
        <childnode refid="2097" relation="usage">
          <edgelabel>factory</edgelabel>
        </childnode>
      </node>
      <node id="2096">
        <label>SharedEntityArray&lt; NTParameter &gt;</label>
        <link refid="d4/deb/classsamchon_1_1protocol_1_1EntityGroup"/>
        <childnode refid="2084" relation="public-inheritance">
        </childnode>
        <childnode refid="2085" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2084">
        <label>Entity</label>
        <link refid="d0/d3e/classsamchon_1_1protocol_1_1Entity"/>
      </node>
      <node id="2086">
        <label>NTSide</label>
        <link refid="d4/df0/classsamchon_1_1namtree_1_1NTSide"/>
        <childnode refid="2084" relation="public-inheritance">
        </childnode>
        <childnode refid="2087" relation="usage">
          <edgelabel>file</edgelabel>
        </childnode>
        <childnode refid="2097" relation="usage">
          <edgelabel>factory</edgelabel>
        </childnode>
      </node>
      <node id="2089">
        <label>FTInstance</label>
        <link refid="d7/d0a/classsamchon_1_1library_1_1FTInstance"/>
        <childnode refid="2084" relation="public-inheritance">
        </childnode>
        <childnode refid="2090" relation="usage">
          <edgelabel>parent</edgelabel>
        </childnode>
      </node>
      <node id="2083">
        <label>SharedEntityArray&lt; NTCriteria &gt;</label>
        <link refid="d4/deb/classsamchon_1_1protocol_1_1EntityGroup"/>
        <childnode refid="2084" relation="public-inheritance">
        </childnode>
        <childnode refid="2085" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2091">
        <label>SharedEntityArray&lt; FTInstance &gt;</label>
        <link refid="d4/deb/classsamchon_1_1protocol_1_1EntityGroup"/>
        <childnode refid="2084" relation="public-inheritance">
        </childnode>
        <childnode refid="2085" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2085">
        <label>IEntityGroup</label>
        <link refid="d9/d4c/classsamchon_1_1protocol_1_1IEntityGroup"/>
      </node>
      <node id="2095">
        <label>NTParameterArray</label>
        <link refid="de/d08/classsamchon_1_1namtree_1_1NTParameterArray"/>
        <childnode refid="2096" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2098">
        <label>NTEntityGroup</label>
        <link refid="dd/d26/classsamchon_1_1namtree_1_1NTEntityGroup"/>
      </node>
      <node id="2087">
        <label>NTFile</label>
        <link refid="d2/da2/classsamchon_1_1namtree_1_1NTFile"/>
        <childnode refid="2088" relation="public-inheritance">
        </childnode>
        <childnode refid="2094" relation="public-inheritance">
        </childnode>
        <childnode refid="2095" relation="usage">
          <edgelabel>parameterArray</edgelabel>
        </childnode>
        <childnode refid="2087" relation="usage">
          <edgelabel>otherside</edgelabel>
        </childnode>
        <childnode refid="2097" relation="usage">
          <edgelabel>factory</edgelabel>
        </childnode>
      </node>
      <node id="2090">
        <label>FTFolder</label>
        <link refid="d2/db1/classsamchon_1_1library_1_1FTFolder"/>
        <childnode refid="2091" relation="public-inheritance">
        </childnode>
        <childnode refid="2089" relation="public-inheritance">
        </childnode>
        <childnode refid="2092" relation="usage">
          <edgelabel>factory</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="D:/OneDrive/Project/Samchon/framework/cpp/samchon/namtree/NTCriteria.hpp" line="79" column="1" bodyfile="D:/OneDrive/Project/Samchon/framework/cpp/samchon/namtree/NTCriteria.hpp" bodystart="77" bodyend="130"/>
    <listofallmembers>
      <member refid="de/dfd/classsamchon_1_1namtree_1_1NTCriteria_1a47647ab5f66983769a3949564144089e" prot="public" virt="non-virtual"><scope>samchon::namtree::NTCriteria</scope><name>calcRetrieved</name></member>
      <member refid="de/dfd/classsamchon_1_1namtree_1_1NTCriteria_1a5cb3666da8a6a0efe4014782bda20af0" prot="public" virt="virtual"><scope>samchon::namtree::NTCriteria</scope><name>CHILD_TAG</name></member>
      <member refid="de/dfd/classsamchon_1_1namtree_1_1NTCriteria_1a4c4b7d9441b10a734e8ce75e67d0375c" prot="public" virt="virtual"><scope>samchon::namtree::NTCriteria</scope><name>construct</name></member>
      <member refid="d4/deb/classsamchon_1_1protocol_1_1EntityGroup_1aac5cb7c267e3cf067657ca5a73363728" prot="protected" virt="non-virtual"><scope>samchon::namtree::NTCriteria</scope><name>container_type</name></member>
      <member refid="de/dfd/classsamchon_1_1namtree_1_1NTCriteria_1a64ca473096ff67fd1d6cb4440267bda0" prot="protected" virt="virtual"><scope>samchon::namtree::NTCriteria</scope><name>createChild</name></member>
      <member refid="d0/d3e/classsamchon_1_1protocol_1_1Entity_1afb4718a8ca5b822cf88129ae04240489" prot="public" virt="non-virtual"><scope>samchon::namtree::NTCriteria</scope><name>Entity</name></member>
      <member refid="d4/deb/classsamchon_1_1protocol_1_1EntityGroup_1a8e82af015377749a76c1839466abb676" prot="protected" virt="non-virtual"><scope>samchon::namtree::NTCriteria</scope><name>entity_type</name></member>
      <member refid="d4/deb/classsamchon_1_1protocol_1_1EntityGroup_1a14f6ca078bbeb51a6f6bc153f7384a7c" prot="public" virt="non-virtual"><scope>samchon::namtree::NTCriteria</scope><name>EntityGroup</name></member>
      <member refid="de/dfd/classsamchon_1_1namtree_1_1NTCriteria_1a726ca809ffd3d67ab4b8476646f26635aa8fc0d41a55a8c27a933257e850defb0" prot="public" virt="non-virtual"><scope>samchon::namtree::NTCriteria</scope><name>EUQLA</name></member>
      <member refid="de/dfd/classsamchon_1_1namtree_1_1NTCriteria_1a8b5d1ee59aae47f4a2e6ed0e09f184a2" prot="protected" virt="non-virtual"><scope>samchon::namtree::NTCriteria</scope><name>factory</name></member>
      <member refid="d4/deb/classsamchon_1_1protocol_1_1EntityGroup_1af318f1e62268b7e178fdc2a9669444b8" prot="public" virt="non-virtual"><scope>samchon::namtree::NTCriteria</scope><name>get</name></member>
      <member refid="d4/deb/classsamchon_1_1protocol_1_1EntityGroup_1af5c2fb617197f93e98ec6c4b547d9bdd" prot="public" virt="non-virtual"><scope>samchon::namtree::NTCriteria</scope><name>get</name></member>
      <member refid="d4/deb/classsamchon_1_1protocol_1_1EntityGroup_1a531cae9e9c8b395f8cde3f2ca243cc79" prot="public" virt="non-virtual"><scope>samchon::namtree::NTCriteria</scope><name>has</name></member>
      <member refid="d9/d4c/classsamchon_1_1protocol_1_1IEntityGroup_1a613d2b691653c86d5f900c8ba33ba30b" prot="public" virt="non-virtual"><scope>samchon::namtree::NTCriteria</scope><name>IEntityGroup</name></member>
      <member refid="de/dfd/classsamchon_1_1namtree_1_1NTCriteria_1aff61abd6361a1b98fec66f0c7b03b3c1" prot="public" virt="virtual"><scope>samchon::namtree::NTCriteria</scope><name>initRetrieve</name></member>
      <member refid="d0/d3e/classsamchon_1_1protocol_1_1Entity_1a5f7b0261859ce45be6fc2cef64026183" prot="public" virt="virtual"><scope>samchon::namtree::NTCriteria</scope><name>key</name></member>
      <member refid="de/dfd/classsamchon_1_1namtree_1_1NTCriteria_1a726ca809ffd3d67ab4b8476646f26635a98188776e7d896b4904fc7bea96af4ca" prot="public" virt="non-virtual"><scope>samchon::namtree::NTCriteria</scope><name>LARGER</name></member>
      <member refid="de/dfd/classsamchon_1_1namtree_1_1NTCriteria_1a726ca809ffd3d67ab4b8476646f26635a07b1a809ffd1e6d725e67a51a60de3a6" prot="public" virt="non-virtual"><scope>samchon::namtree::NTCriteria</scope><name>LARGER_EQUAL</name></member>
      <member refid="de/dfd/classsamchon_1_1namtree_1_1NTCriteria_1a8589d7347581da4f77a8cbf430766e35" prot="protected" virt="non-virtual"><scope>samchon::namtree::NTCriteria</scope><name>leftSide</name></member>
      <member refid="de/dfd/classsamchon_1_1namtree_1_1NTCriteria_1a726ca809ffd3d67ab4b8476646f26635a95c736070f99b99eb80d1eac1f4ca60f" prot="public" virt="non-virtual"><scope>samchon::namtree::NTCriteria</scope><name>LESS</name></member>
      <member refid="de/dfd/classsamchon_1_1namtree_1_1NTCriteria_1a726ca809ffd3d67ab4b8476646f26635ac7fcbbb467ef6d40ec686d894e26accd" prot="public" virt="non-virtual"><scope>samchon::namtree::NTCriteria</scope><name>LESS_EQUAL</name></member>
      <member refid="de/dfd/classsamchon_1_1namtree_1_1NTCriteria_1a9e8eea2776e3916def2f5ef867452c53" prot="public" virt="non-virtual"><scope>samchon::namtree::NTCriteria</scope><name>NTCriteria</name></member>
      <member refid="de/dfd/classsamchon_1_1namtree_1_1NTCriteria_1a648ff8c073dab7ecce2991760544a59a" prot="protected" virt="non-virtual"><scope>samchon::namtree::NTCriteria</scope><name>operator_</name></member>
      <member refid="de/dfd/classsamchon_1_1namtree_1_1NTCriteria_1aff84e7e6916e39358619f6cb55e51a33" prot="protected" virt="non-virtual"><scope>samchon::namtree::NTCriteria</scope><name>parent</name></member>
      <member refid="de/dfd/classsamchon_1_1namtree_1_1NTCriteria_1a9267050b3faead4b957cc7272bfe1ee9" prot="protected" virt="non-virtual"><scope>samchon::namtree::NTCriteria</scope><name>rightSide</name></member>
      <member refid="de/dfd/classsamchon_1_1namtree_1_1NTCriteria_1aa3a98d9e6bda8b86b338d6949e83a019" prot="private" virt="non-virtual"><scope>samchon::namtree::NTCriteria</scope><name>super</name></member>
      <member refid="de/dfd/classsamchon_1_1namtree_1_1NTCriteria_1aa55bc231502ef8e0dd9a9c274d028ac9" prot="public" virt="virtual"><scope>samchon::namtree::NTCriteria</scope><name>TAG</name></member>
      <member refid="de/dfd/classsamchon_1_1namtree_1_1NTCriteria_1ac0248fcb25b3fa4f463d545005fdcbf3" prot="public" virt="virtual"><scope>samchon::namtree::NTCriteria</scope><name>toXML</name></member>
      <member refid="d4/deb/classsamchon_1_1protocol_1_1EntityGroup_1aa03d6edd1546642516652a481c0bf8db" prot="protected" virt="non-virtual"><scope>samchon::namtree::NTCriteria</scope><name>value_type</name></member>
      <member refid="de/dfd/classsamchon_1_1namtree_1_1NTCriteria_1a99108733d00274978a4979dc072bd513" prot="protected" virt="non-virtual"><scope>samchon::namtree::NTCriteria</scope><name>weight</name></member>
      <member refid="d0/d3e/classsamchon_1_1protocol_1_1Entity_1a07d18d40fa0c4b4f1341cfddc0b600dd" prot="public" virt="virtual"><scope>samchon::namtree::NTCriteria</scope><name>~Entity</name></member>
      <member refid="d4/deb/classsamchon_1_1protocol_1_1EntityGroup_1a0dd6821308dca7395965242148146aae" prot="public" virt="virtual"><scope>samchon::namtree::NTCriteria</scope><name>~EntityGroup</name></member>
      <member refid="d9/d4c/classsamchon_1_1protocol_1_1IEntityGroup_1ae41524ffa5ca16d3160dfd0b00e7800f" prot="public" virt="virtual"><scope>samchon::namtree::NTCriteria</scope><name>~IEntityGroup</name></member>
      <member refid="de/dfd/classsamchon_1_1namtree_1_1NTCriteria_1ab14c06188e60598769ae49095813e688" prot="public" virt="virtual"><scope>samchon::namtree::NTCriteria</scope><name>~NTCriteria</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
