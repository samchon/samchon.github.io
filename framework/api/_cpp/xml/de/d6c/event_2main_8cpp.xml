<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.10">
  <compounddef id="de/d6c/event_2main_8cpp" kind="file" language="C++">
    <compoundname>main.cpp</compoundname>
    <includes local="no">iostream</includes>
    <includes local="no">thread</includes>
    <includes local="no">chrono</includes>
    <includes refid="d3/d60/EventDispatcher_8hpp" local="no">samchon/library/EventDispatcher.hpp</includes>
    <includes refid="df/d7d/Event_8hpp" local="no">samchon/library/Event.hpp</includes>
    <includes refid="d8/d67/ProgressEvent_8hpp" local="no">samchon/library/ProgressEvent.hpp</includes>
    <incdepgraph>
      <node id="644">
        <label>atomic</label>
      </node>
      <node id="646">
        <label>samchon/library/Semaphore.hpp</label>
        <link refid="d1/da0/Semaphore_8hpp_source"/>
        <childnode refid="635" relation="include">
        </childnode>
        <childnode refid="647" relation="include">
        </childnode>
        <childnode refid="648" relation="include">
        </childnode>
      </node>
      <node id="630">
        <label>D:/OneDrive/Project/Samchon/framework/cpp/samchon/examples/event/main.cpp</label>
        <link refid="event/main.cpp"/>
        <childnode refid="631" relation="include">
        </childnode>
        <childnode refid="632" relation="include">
        </childnode>
        <childnode refid="633" relation="include">
        </childnode>
        <childnode refid="634" relation="include">
        </childnode>
        <childnode refid="649" relation="include">
        </childnode>
        <childnode refid="650" relation="include">
        </childnode>
      </node>
      <node id="642">
        <label>samchon/library/UniqueWriteLock.hpp</label>
        <link refid="d5/dcd/UniqueWriteLock_8hpp_source"/>
        <childnode refid="635" relation="include">
        </childnode>
      </node>
      <node id="637">
        <label>map</label>
      </node>
      <node id="645">
        <label>samchon/library/SharedWriteLock.hpp</label>
        <link refid="d8/d53/SharedWriteLock_8hpp_source"/>
        <childnode refid="635" relation="include">
        </childnode>
        <childnode refid="644" relation="include">
        </childnode>
      </node>
      <node id="635">
        <label>samchon/API.hpp</label>
        <link refid="d9/d8f/API_8hpp_source"/>
      </node>
      <node id="647">
        <label>samchon/library/UniqueAcquire.hpp</label>
        <link refid="d6/d66/UniqueAcquire_8hpp_source"/>
        <childnode refid="635" relation="include">
        </childnode>
      </node>
      <node id="638">
        <label>samchon/Set.hpp</label>
        <link refid="d2/d42/Set_8hpp_source"/>
        <childnode refid="639" relation="include">
        </childnode>
      </node>
      <node id="634">
        <label>samchon/library/EventDispatcher.hpp</label>
        <link refid="d3/d60/EventDispatcher_8hpp_source"/>
        <childnode refid="635" relation="include">
        </childnode>
        <childnode refid="636" relation="include">
        </childnode>
        <childnode refid="637" relation="include">
        </childnode>
        <childnode refid="638" relation="include">
        </childnode>
        <childnode refid="640" relation="include">
        </childnode>
        <childnode refid="646" relation="include">
        </childnode>
      </node>
      <node id="650">
        <label>samchon/library/ProgressEvent.hpp</label>
        <link refid="d8/d67/ProgressEvent_8hpp_source"/>
        <childnode refid="635" relation="include">
        </childnode>
        <childnode refid="649" relation="include">
        </childnode>
      </node>
      <node id="643">
        <label>samchon/library/SharedReadLock.hpp</label>
        <link refid="d0/df1/SharedReadLock_8hpp_source"/>
        <childnode refid="635" relation="include">
        </childnode>
        <childnode refid="644" relation="include">
        </childnode>
      </node>
      <node id="640">
        <label>samchon/library/RWMutex.hpp</label>
        <link refid="dd/d85/RWMutex_8hpp_source"/>
        <childnode refid="635" relation="include">
        </childnode>
        <childnode refid="641" relation="include">
        </childnode>
        <childnode refid="642" relation="include">
        </childnode>
        <childnode refid="643" relation="include">
        </childnode>
        <childnode refid="645" relation="include">
        </childnode>
      </node>
      <node id="649">
        <label>samchon/library/Event.hpp</label>
        <link refid="df/d7d/Event_8hpp_source"/>
        <childnode refid="635" relation="include">
        </childnode>
      </node>
      <node id="631">
        <label>iostream</label>
      </node>
      <node id="633">
        <label>chrono</label>
      </node>
      <node id="648">
        <label>samchon/library/SharedAcquire.hpp</label>
        <link refid="d5/ddb/SharedAcquire_8hpp_source"/>
        <childnode refid="635" relation="include">
        </childnode>
        <childnode refid="644" relation="include">
        </childnode>
      </node>
      <node id="632">
        <label>thread</label>
      </node>
      <node id="639">
        <label>set</label>
      </node>
      <node id="641">
        <label>samchon/library/UniqueReadLock.hpp</label>
        <link refid="d5/da5/UniqueReadLock_8hpp_source"/>
        <childnode refid="635" relation="include">
        </childnode>
      </node>
      <node id="636">
        <label>memory</label>
      </node>
    </incdepgraph>
    <innerclass refid="df/d30/classProcess" prot="public">Process</innerclass>
      <sectiondef kind="func">
      <memberdef kind="function" id="de/d6c/event_2main_8cpp_1ac56a53da630127a0fdc7eef8732dc26e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void handleActivate</definition>
        <argsstring>(shared_ptr&lt; Event &gt; event)</argsstring>
        <name>handleActivate</name>
        <param>
          <type>shared_ptr&lt; <ref refid="d2/d56/classsamchon_1_1library_1_1Event" kindref="compound">Event</ref> &gt;</type>
          <declname>event</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/OneDrive/Project/Samchon/framework/cpp/samchon/examples/event/main.cpp" line="49" column="1" bodyfile="D:/OneDrive/Project/Samchon/framework/cpp/samchon/examples/event/main.cpp" bodystart="49" bodyend="52"/>
      </memberdef>
      <memberdef kind="function" id="de/d6c/event_2main_8cpp_1af1bdec4bcb8ad377a5801398cb43eb9e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void handleComplete</definition>
        <argsstring>(shared_ptr&lt; Event &gt; event)</argsstring>
        <name>handleComplete</name>
        <param>
          <type>shared_ptr&lt; <ref refid="d2/d56/classsamchon_1_1library_1_1Event" kindref="compound">Event</ref> &gt;</type>
          <declname>event</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/OneDrive/Project/Samchon/framework/cpp/samchon/examples/event/main.cpp" line="53" column="1" bodyfile="D:/OneDrive/Project/Samchon/framework/cpp/samchon/examples/event/main.cpp" bodystart="53" bodyend="56"/>
      </memberdef>
      <memberdef kind="function" id="de/d6c/event_2main_8cpp_1acb443d85b4a17d8a573c9d642f701f84" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void handleProgress</definition>
        <argsstring>(shared_ptr&lt; Event &gt; event)</argsstring>
        <name>handleProgress</name>
        <param>
          <type>shared_ptr&lt; <ref refid="d2/d56/classsamchon_1_1library_1_1Event" kindref="compound">Event</ref> &gt;</type>
          <declname>event</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/OneDrive/Project/Samchon/framework/cpp/samchon/examples/event/main.cpp" line="57" column="1" bodyfile="D:/OneDrive/Project/Samchon/framework/cpp/samchon/examples/event/main.cpp" bodystart="57" bodyend="60"/>
      </memberdef>
      <memberdef kind="function" id="de/d6c/event_2main_8cpp_1acdef7a1fd863a6d3770c1268cb06add3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void main</definition>
        <argsstring>()</argsstring>
        <name>main</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/OneDrive/Project/Samchon/framework/cpp/samchon/examples/event/main.cpp" line="62" column="1" bodyfile="D:/OneDrive/Project/Samchon/framework/cpp/samchon/examples/event/main.cpp" bodystart="62" bodyend="72"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&lt;iostream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;thread&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;chrono&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;samchon/library/EventDispatcher.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;samchon/library/Event.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;samchon/library/ProgressEvent.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>_WIN64</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>ifdef<sp/>_DEBUG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/>pragma<sp/>comment(lib,<sp/>&quot;x64/Debug/SamchonFramework.lib&quot;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/>pragma<sp/>comment(lib,<sp/>&quot;x64/Release/SamchonFramework.lib&quot;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>ifdef<sp/>_DEBUG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/>pragma<sp/>comment(lib,<sp/>&quot;Debug/SamchonFramework.lib&quot;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/>pragma<sp/>comment(lib,<sp/>&quot;Release/SamchonFramework.lib&quot;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal"><ref refid="d8/dcc/namespacestd" kindref="compound">std</ref>;</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal"><ref refid="d8/dd4/namespacesamchon_1_1library" kindref="compound">samchon::library</ref>;</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">Process</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="d3/d9b/classsamchon_1_1library_1_1EventDispatcher" kindref="compound">EventDispatcher</ref></highlight></codeline>
<codeline lineno="28"><highlight class="normal">{</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/>Process()</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>run()</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dispatchEvent(shared_ptr&lt;Event&gt;(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="d2/d56/classsamchon_1_1library_1_1Event" kindref="compound">Event</ref>(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>Event::ACTIVATE)));</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>100;<sp/>i++)</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this_thread::sleep_for(chrono::seconds(1));</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dispatchEvent(shared_ptr&lt;Event&gt;(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="de/d4a/classsamchon_1_1library_1_1ProgressEvent" kindref="compound">ProgressEvent</ref>(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>i<sp/>+<sp/>1,<sp/>100)));</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dispatchEvent(shared_ptr&lt;Event&gt;(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="d2/d56/classsamchon_1_1library_1_1Event" kindref="compound">Event</ref>(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>Event::COMPLETE)));</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="47"><highlight class="normal">};</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>handleActivate(shared_ptr&lt;Event&gt;<sp/>event)</highlight></codeline>
<codeline lineno="50"><highlight class="normal">{</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Activated&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="52"><highlight class="normal">}</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>handleComplete(shared_ptr&lt;Event&gt;<sp/>event)</highlight></codeline>
<codeline lineno="54"><highlight class="normal">{</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Completed&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="56"><highlight class="normal">}</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>handleProgress(shared_ptr&lt;Event&gt;<sp/>event)</highlight></codeline>
<codeline lineno="58"><highlight class="normal">{</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/>dynamic_pointer_cast&lt;ProgressEvent&gt;(event)-&gt;getPercent()<sp/>*<sp/>100.0<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;%&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="60"><highlight class="normal">}</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>main()</highlight></codeline>
<codeline lineno="63"><highlight class="normal">{</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/>Process<sp/>process;</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/>process.addEventListener(Event::ACTIVATE,<sp/>handleActivate);</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/>process.addEventListener(Event::COMPLETE,<sp/>handleComplete);</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/>process.addEventListener(ProgressEvent::PROGRESS,<sp/>handleProgress);</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/>process.run();</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/>system(</highlight><highlight class="stringliteral">&quot;pause&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="72"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="D:/OneDrive/Project/Samchon/framework/cpp/samchon/examples/event/main.cpp"/>
  </compounddef>
</doxygen>
