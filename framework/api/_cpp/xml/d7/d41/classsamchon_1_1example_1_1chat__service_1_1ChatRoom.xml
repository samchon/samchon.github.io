<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.10">
  <compounddef id="d7/d41/classsamchon_1_1example_1_1chat__service_1_1ChatRoom" kind="class" language="C++" prot="public">
    <compoundname>samchon::example::chat_service::ChatRoom</compoundname>
    <basecompoundref refid="d0/d3e/classsamchon_1_1protocol_1_1Entity" prot="public" virt="non-virtual">Entity</basecompoundref>
    <basecompoundref refid="d4/dcf/classsamchon_1_1protocol_1_1IProtocol" prot="public" virt="non-virtual">IProtocol</basecompoundref>
    <includes refid="d3/df4/ChatRoom_8hpp" local="no">ChatRoom.hpp</includes>
      <sectiondef kind="protected-type">
      <memberdef kind="typedef" id="d7/d41/classsamchon_1_1example_1_1chat__service_1_1ChatRoom_1ad39e9e1084298d459f378d1d4ab340e3" prot="protected" static="no">
        <type><ref refid="d0/d3e/classsamchon_1_1protocol_1_1Entity" kindref="compound">protocol::Entity</ref></type>
        <definition>typedef protocol::Entity super</definition>
        <argsstring></argsstring>
        <name>super</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/OneDrive/Project/Samchon/framework/cpp/samchon/examples/chat_service/ChatRoom.hpp" line="38" column="1" bodyfile="D:/OneDrive/Project/Samchon/framework/cpp/samchon/examples/chat_service/ChatRoom.hpp" bodystart="38" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="d7/d41/classsamchon_1_1example_1_1chat__service_1_1ChatRoom_1a9112a855a9abf508f56452d7470ef9bb" prot="private" static="no" mutable="no">
        <type><ref refid="d2/d9a/classsamchon_1_1example_1_1chat__service_1_1ChatRoomArray" kindref="compound">ChatRoomArray</ref> *</type>
        <definition>ChatRoomArray* roomArray</definition>
        <argsstring></argsstring>
        <name>roomArray</name>
        <briefdescription>
<para>All rooms that the room is belonged to. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/OneDrive/Project/Samchon/framework/cpp/samchon/examples/chat_service/ChatRoom.hpp" line="46" column="1" bodyfile="D:/OneDrive/Project/Samchon/framework/cpp/samchon/examples/chat_service/ChatRoom.hpp" bodystart="40" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d7/d41/classsamchon_1_1example_1_1chat__service_1_1ChatRoom_1a9b45b3e13bd9167aab02e17e08916231" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string name</definition>
        <argsstring></argsstring>
        <name>name</name>
        <briefdescription>
<para>Name of the room. </para>        </briefdescription>
        <detaileddescription>
<para>The name is the identifier of the <ref refid="d7/d41/classsamchon_1_1example_1_1chat__service_1_1ChatRoom" kindref="compound">ChatRoom</ref>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/OneDrive/Project/Samchon/framework/cpp/samchon/examples/chat_service/ChatRoom.hpp" line="52" column="1" bodyfile="D:/OneDrive/Project/Samchon/framework/cpp/samchon/examples/chat_service/ChatRoom.hpp" bodystart="52" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d7/d41/classsamchon_1_1example_1_1chat__service_1_1ChatRoom_1a2b545d2d8dc7bc2e8931c9fa47dc41dc" prot="private" static="no" mutable="no">
        <type><ref refid="d7/df1/classsamchon_1_1example_1_1chat__service_1_1ChatUser" kindref="compound">ChatUser</ref> *</type>
        <definition>ChatUser* host</definition>
        <argsstring></argsstring>
        <name>host</name>
        <briefdescription>
<para>A host, who established the room. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/OneDrive/Project/Samchon/framework/cpp/samchon/examples/chat_service/ChatRoom.hpp" line="57" column="1" bodyfile="D:/OneDrive/Project/Samchon/framework/cpp/samchon/examples/chat_service/ChatRoom.hpp" bodystart="57" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d7/d41/classsamchon_1_1example_1_1chat__service_1_1ChatRoom_1a1960ee93b6e09d5e43059b85db438394" prot="private" static="no" mutable="no">
        <type><ref refid="d8/dd4/namespacesamchon_1_1library_1aea31f3119ce260a5601db057d6f514ab" kindref="member">library::CriticalSet</ref>&lt; <ref refid="df/de2/classsamchon_1_1example_1_1chat__service_1_1ChatService" kindref="compound">ChatService</ref> * &gt;</type>
        <definition>library::CriticalSet&lt;ChatService*&gt; participants</definition>
        <argsstring></argsstring>
        <name>participants</name>
        <briefdescription>
<para>Participants, ChatUser(s) in the room. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/OneDrive/Project/Samchon/framework/cpp/samchon/examples/chat_service/ChatRoom.hpp" line="62" column="1" bodyfile="D:/OneDrive/Project/Samchon/framework/cpp/samchon/examples/chat_service/ChatRoom.hpp" bodystart="62" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="d7/d41/classsamchon_1_1example_1_1chat__service_1_1ChatRoom_1a0d32bf5b31cc10a3ea17ae79215f2c35" prot="protected" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>auto</type>
        <definition>virtual auto TAG</definition>
        <argsstring>() const  -&gt; std::string</argsstring>
        <name>TAG</name>
        <reimplements refid="d0/d3e/classsamchon_1_1protocol_1_1Entity_1a974f48d92f0ef494a8d2c879f82c6426">TAG</reimplements>
        <briefdescription>
<para>A tag name when represented by XML. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>A tag name </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/OneDrive/Project/Samchon/framework/cpp/samchon/examples/chat_service/ChatRoom.hpp" line="40" column="1" bodyfile="D:/OneDrive/Project/Samchon/framework/cpp/samchon/examples/chat_service/ChatRoom.hpp" bodystart="40" bodyend="40"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="d7/d41/classsamchon_1_1example_1_1chat__service_1_1ChatRoom_1af9ff8fb2306dc27c6e4a6b7104d91828" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>ChatRoom</definition>
        <argsstring>(ChatRoomArray *, const std::string &amp;, ChatUser *)</argsstring>
        <name>ChatRoom</name>
        <param>
          <type><ref refid="d2/d9a/classsamchon_1_1example_1_1chat__service_1_1ChatRoomArray" kindref="compound">ChatRoomArray</ref> *</type>
        </param>
        <param>
          <type>const std::string &amp;</type>
        </param>
        <param>
          <type><ref refid="d7/df1/classsamchon_1_1example_1_1chat__service_1_1ChatUser" kindref="compound">ChatUser</ref> *</type>
        </param>
        <briefdescription>
<para>Construct from rooms, name and host. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>rooms</parametername>
</parameternamelist>
<parameterdescription>
<para>Rooms managing ChatRoom(s). </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>Name of the room, the identifier. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>host</parametername>
</parameternamelist>
<parameterdescription>
<para>A host who established the room. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/OneDrive/Project/Samchon/framework/cpp/samchon/examples/chat_service/ChatRoom.hpp" line="75" column="1" bodyfile="D:/OneDrive/Project/Samchon/framework/cpp/samchon/examples/chat_service/ChatRoom.cpp" bodystart="20" bodyend="28"/>
      </memberdef>
      <memberdef kind="function" id="d7/d41/classsamchon_1_1example_1_1chat__service_1_1ChatRoom_1a715fcbd58485aa38a60607fbf217dc88" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>virtual ~ChatRoom</definition>
        <argsstring>()=default</argsstring>
        <name>~ChatRoom</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/OneDrive/Project/Samchon/framework/cpp/samchon/examples/chat_service/ChatRoom.hpp" line="76" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d7/d41/classsamchon_1_1example_1_1chat__service_1_1ChatRoom_1a8a700657717304d539af15d8b63a0343" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void registerClient</definition>
        <argsstring>(ChatService *)</argsstring>
        <name>registerClient</name>
        <param>
          <type><ref refid="df/de2/classsamchon_1_1example_1_1chat__service_1_1ChatService" kindref="compound">ChatService</ref> *</type>
          <defname>service</defname>
        </param>
        <briefdescription>
<para>Register a participant client. </para>        </briefdescription>
        <detaileddescription>
<para>Registers a participant and notify the participation to another clients. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/OneDrive/Project/Samchon/framework/cpp/samchon/examples/chat_service/ChatRoom.hpp" line="82" column="1" bodyfile="D:/OneDrive/Project/Samchon/framework/cpp/samchon/examples/chat_service/ChatRoom.cpp" bodystart="30" bodyend="36"/>
      </memberdef>
      <memberdef kind="function" id="d7/d41/classsamchon_1_1example_1_1chat__service_1_1ChatRoom_1ae42cc7637e68024a5b82de702f63ddd8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void eraseClient</definition>
        <argsstring>(ChatService *)</argsstring>
        <name>eraseClient</name>
        <param>
          <type><ref refid="df/de2/classsamchon_1_1example_1_1chat__service_1_1ChatService" kindref="compound">ChatService</ref> *</type>
          <defname>service</defname>
        </param>
        <briefdescription>
<para>Erase a participant client. </para>        </briefdescription>
        <detaileddescription>
<para>Erases a participant and notify others about the exiting. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/OneDrive/Project/Samchon/framework/cpp/samchon/examples/chat_service/ChatRoom.hpp" line="88" column="1" bodyfile="D:/OneDrive/Project/Samchon/framework/cpp/samchon/examples/chat_service/ChatRoom.cpp" bodystart="37" bodyend="45"/>
      </memberdef>
      <memberdef kind="function" id="d7/d41/classsamchon_1_1example_1_1chat__service_1_1ChatRoom_1a9ffd4676a78b6120f6f7c464f6cd41c2" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void replyData</definition>
        <argsstring>(std::shared_ptr&lt; protocol::Invoke &gt;) override</argsstring>
        <name>replyData</name>
        <param>
          <type>std::shared_ptr&lt; <ref refid="d8/d82/classsamchon_1_1protocol_1_1Invoke" kindref="compound">protocol::Invoke</ref> &gt;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/OneDrive/Project/Samchon/framework/cpp/samchon/examples/chat_service/ChatRoom.hpp" line="93" column="1" bodyfile="D:/OneDrive/Project/Samchon/framework/cpp/samchon/examples/chat_service/ChatRoom.cpp" bodystart="50" bodyend="59"/>
      </memberdef>
      <memberdef kind="function" id="d7/d41/classsamchon_1_1example_1_1chat__service_1_1ChatRoom_1a17eab70a0db6bcfd8d1966f8100bcbb7" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void sendData</definition>
        <argsstring>(std::shared_ptr&lt; protocol::Invoke &gt;) override</argsstring>
        <name>sendData</name>
        <param>
          <type>std::shared_ptr&lt; <ref refid="d8/d82/classsamchon_1_1protocol_1_1Invoke" kindref="compound">protocol::Invoke</ref> &gt;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/OneDrive/Project/Samchon/framework/cpp/samchon/examples/chat_service/ChatRoom.hpp" line="94" column="1" bodyfile="D:/OneDrive/Project/Samchon/framework/cpp/samchon/examples/chat_service/ChatRoom.cpp" bodystart="60" bodyend="80"/>
      </memberdef>
      <memberdef kind="function" id="d7/d41/classsamchon_1_1example_1_1chat__service_1_1ChatRoom_1ac0248fcb25b3fa4f463d545005fdcbf3" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>auto</type>
        <definition>auto toXML</definition>
        <argsstring>() const  -&gt; std::shared_ptr&lt; library::XML &gt; override</argsstring>
        <name>toXML</name>
        <reimplements refid="d0/d3e/classsamchon_1_1protocol_1_1Entity_1ae1c1e56eb0b3e41f12170628475a7d2a">toXML</reimplements>
        <briefdescription>
<para>Get an XML object represents the Entity. </para>        </briefdescription>
        <detaileddescription>
<para>Returns an XML object that can represents the Entity containing member variables into properties. </para><para>A member variable (not object, but atomic value like number, string or date) is categorized as a property within the framework of entity side. Thus, when overriding a <ref refid="d7/d41/classsamchon_1_1example_1_1chat__service_1_1ChatRoom_1ac0248fcb25b3fa4f463d545005fdcbf3" kindref="member">toXML()</ref> method and archiving member variables to an XML object to return, puts each variable to be a property belongs to only an XML object. </para><para>Don&apos;t archive the member variable of atomic value to XML::value causing enormouse creation of XML objects to number of member variables. An Entity must be represented by only an XML instance (tag). </para><para><table rows="2" cols="2"><row>
<entry thead="yes"><para>Standard Usage  </para></entry><entry thead="yes"><para>Non-standard usage abusing value   </para></entry></row>
<row>
<entry thead="no"><para>&lt;memberList&gt;<linebreak/>
 <nonbreakablespace/><nonbreakablespace/><nonbreakablespace/><nonbreakablespace/> &lt;member id=&apos;jhnam88&apos; name=&apos;Jeongho+Nam&apos; birthdate=&apos;1988-03-11&apos; /&gt;<linebreak/>
 <nonbreakablespace/><nonbreakablespace/><nonbreakablespace/><nonbreakablespace/> &lt;member id=&apos;master&apos; name=&apos;Administartor&apos; birthdate=&apos;2011-07-28&apos; /&gt;<linebreak/>
 &lt;/memberList&gt;  </para></entry><entry thead="no"><para>&lt;member&gt;<linebreak/>
 <nonbreakablespace/><nonbreakablespace/><nonbreakablespace/><nonbreakablespace/> &lt;id&gt;jhnam88&lt;/id&gt;<linebreak/>
 <nonbreakablespace/><nonbreakablespace/><nonbreakablespace/><nonbreakablespace/> &lt;name&gt;Jeongho+Nam&lt;/name&gt;<linebreak/>
 <nonbreakablespace/><nonbreakablespace/><nonbreakablespace/><nonbreakablespace/> &lt;birthdate&gt;1988-03-11&lt;/birthdate&gt;<linebreak/>
 &lt;/member&gt;   </para></entry></row>
</table>
</para><para><simplesect kind="return"><para>An XML object representing the Entity. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/OneDrive/Project/Samchon/framework/cpp/samchon/examples/chat_service/ChatRoom.hpp" line="100" column="1" bodyfile="D:/OneDrive/Project/Samchon/framework/cpp/samchon/examples/chat_service/ChatRoom.cpp" bodystart="85" bodyend="100"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>A chat room. </para>    </briefdescription>
    <detaileddescription>
<para>An entity class representing a chat room containing participants. The <ref refid="d7/d41/classsamchon_1_1example_1_1chat__service_1_1ChatRoom" kindref="compound">ChatRoom</ref> class takes a responsibility of Invoke message chain between clients (participating ChatUser(s)) objects. </para><para><image type="html" name="example_chat_service.png"></image>
 <image type="latex" name="example_chat_service.png"></image>
</para><para><simplesect kind="author"><para>Jeongho Nam </para></simplesect>
</para>    </detaileddescription>
    <inheritancegraph>
      <node id="988">
        <label>IProtocol</label>
        <link refid="d4/dcf/classsamchon_1_1protocol_1_1IProtocol"/>
      </node>
      <node id="987">
        <label>Entity</label>
        <link refid="d0/d3e/classsamchon_1_1protocol_1_1Entity"/>
      </node>
      <node id="986">
        <label>ChatRoom</label>
        <link refid="d7/d41/classsamchon_1_1example_1_1chat__service_1_1ChatRoom"/>
        <childnode refid="987" relation="public-inheritance">
        </childnode>
        <childnode refid="988" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1001">
        <label>SQLStatement</label>
        <link refid="de/def/classsamchon_1_1library_1_1SQLStatement"/>
        <childnode refid="1002" relation="usage">
          <edgelabel>bindParameterBASizeMap</edgelabel>
        </childnode>
        <childnode refid="1000" relation="usage">
          <edgelabel>sqli</edgelabel>
        </childnode>
      </node>
      <node id="995">
        <label>Server</label>
        <link refid="d9/d35/classsamchon_1_1protocol_1_1service_1_1Server"/>
        <childnode refid="996" relation="private-inheritance">
        </childnode>
        <childnode refid="997" relation="public-inheritance">
        </childnode>
        <childnode refid="998" relation="usage">
          <edgelabel>mtx</edgelabel>
        </childnode>
        <childnode refid="999" relation="usage">
          <edgelabel>ipMap</edgelabel>
        </childnode>
        <childnode refid="1000" relation="usage">
          <edgelabel>sqli</edgelabel>
        </childnode>
      </node>
      <node id="1002">
        <label>Map&lt; size_t, SQL_SIZE_T &gt;</label>
        <link refid="d1/d4e/classsamchon_1_1Map"/>
      </node>
      <node id="991">
        <label>IProtocol</label>
        <link refid="d4/dcf/classsamchon_1_1protocol_1_1IProtocol"/>
      </node>
      <node id="1003">
        <label>IPUserPair</label>
        <link refid="df/dc6/classsamchon_1_1protocol_1_1service_1_1IPUserPair"/>
        <childnode refid="995" relation="usage">
          <edgelabel>server</edgelabel>
        </childnode>
      </node>
      <node id="997">
        <label>IServer</label>
        <link refid="d4/de8/classsamchon_1_1protocol_1_1IServer"/>
      </node>
      <node id="1005">
        <label>ChatRoomArray</label>
        <link refid="d2/d9a/classsamchon_1_1example_1_1chat__service_1_1ChatRoomArray"/>
        <childnode refid="1006" relation="public-inheritance">
        </childnode>
        <childnode refid="1007" relation="usage">
          <edgelabel>server</edgelabel>
        </childnode>
      </node>
      <node id="996">
        <label>Dictionary&lt; SmartPointer&lt; User &gt; &gt;</label>
        <link refid="d1/d4e/classsamchon_1_1Map"/>
      </node>
      <node id="1007">
        <label>ChatServer</label>
        <link refid="da/d56/classsamchon_1_1example_1_1chat__service_1_1ChatServer"/>
        <childnode refid="995" relation="public-inheritance">
        </childnode>
        <childnode refid="1005" relation="usage">
          <edgelabel>roomArray</edgelabel>
        </childnode>
      </node>
      <node id="992">
        <label>ChatUser</label>
        <link refid="d7/df1/classsamchon_1_1example_1_1chat__service_1_1ChatUser"/>
        <childnode refid="993" relation="public-inheritance">
        </childnode>
      </node>
      <node id="994">
        <label>Map&lt; size_t, SmartPointer&lt; Client &gt; &gt;</label>
        <link refid="d1/d4e/classsamchon_1_1Map"/>
      </node>
      <node id="990">
        <label>Entity</label>
        <link refid="d0/d3e/classsamchon_1_1protocol_1_1Entity"/>
      </node>
      <node id="989">
        <label>ChatRoom</label>
        <link refid="d7/d41/classsamchon_1_1example_1_1chat__service_1_1ChatRoom"/>
        <childnode refid="990" relation="public-inheritance">
        </childnode>
        <childnode refid="991" relation="public-inheritance">
        </childnode>
        <childnode refid="992" relation="usage">
          <edgelabel>host</edgelabel>
        </childnode>
        <childnode refid="1005" relation="usage">
          <edgelabel>roomArray</edgelabel>
        </childnode>
      </node>
      <node id="1006">
        <label>IEntityGroup</label>
        <link refid="d9/d4c/classsamchon_1_1protocol_1_1IEntityGroup"/>
      </node>
      <node id="1004">
        <label>Semaphore</label>
        <link refid="d9/d88/classsamchon_1_1library_1_1Semaphore"/>
      </node>
      <node id="999">
        <label>Map&lt; std::shared_ptr&lt; samchon::protocol::service::IPUserPair &gt; &gt;</label>
        <link refid="d1/d4e/classsamchon_1_1Map"/>
      </node>
      <node id="1000">
        <label>SQLi</label>
        <link refid="d9/d2f/classsamchon_1_1library_1_1SQLi"/>
        <childnode refid="1001" relation="usage">
          <edgelabel>stmt</edgelabel>
        </childnode>
      </node>
      <node id="998">
        <label>RWMutex</label>
        <link refid="df/d85/classsamchon_1_1library_1_1RWMutex"/>
      </node>
      <node id="993">
        <label>User</label>
        <link refid="df/d87/classsamchon_1_1protocol_1_1service_1_1User"/>
        <childnode refid="994" relation="private-inheritance">
        </childnode>
        <childnode refid="991" relation="public-inheritance">
        </childnode>
        <childnode refid="995" relation="usage">
          <edgelabel>server</edgelabel>
        </childnode>
        <childnode refid="1003" relation="usage">
          <edgelabel>ipPair</edgelabel>
        </childnode>
        <childnode refid="1004" relation="usage">
          <edgelabel>semaphore</edgelabel>
        </childnode>
        <childnode refid="998" relation="usage">
          <edgelabel>mtx</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="D:/OneDrive/Project/Samchon/framework/cpp/samchon/examples/chat_service/ChatRoom.hpp" line="36" column="1" bodyfile="D:/OneDrive/Project/Samchon/framework/cpp/samchon/examples/chat_service/ChatRoom.hpp" bodystart="33" bodyend="101"/>
    <listofallmembers>
      <member refid="d7/d41/classsamchon_1_1example_1_1chat__service_1_1ChatRoom_1af9ff8fb2306dc27c6e4a6b7104d91828" prot="public" virt="non-virtual"><scope>samchon::example::chat_service::ChatRoom</scope><name>ChatRoom</name></member>
      <member refid="d0/d3e/classsamchon_1_1protocol_1_1Entity_1ac1489c595f4d9e9ceb6fb91463ae195c" prot="public" virt="pure-virtual"><scope>samchon::example::chat_service::ChatRoom</scope><name>construct</name></member>
      <member refid="d0/d3e/classsamchon_1_1protocol_1_1Entity_1afb4718a8ca5b822cf88129ae04240489" prot="public" virt="non-virtual"><scope>samchon::example::chat_service::ChatRoom</scope><name>Entity</name></member>
      <member refid="d7/d41/classsamchon_1_1example_1_1chat__service_1_1ChatRoom_1ae42cc7637e68024a5b82de702f63ddd8" prot="public" virt="non-virtual"><scope>samchon::example::chat_service::ChatRoom</scope><name>eraseClient</name></member>
      <member refid="d7/d41/classsamchon_1_1example_1_1chat__service_1_1ChatRoom_1a2b545d2d8dc7bc2e8931c9fa47dc41dc" prot="private" virt="non-virtual"><scope>samchon::example::chat_service::ChatRoom</scope><name>host</name></member>
      <member refid="d4/dcf/classsamchon_1_1protocol_1_1IProtocol_1a6258c530c328dc119e698bb7e7fe222a" prot="public" virt="non-virtual"><scope>samchon::example::chat_service::ChatRoom</scope><name>IProtocol</name></member>
      <member refid="d0/d3e/classsamchon_1_1protocol_1_1Entity_1a5f7b0261859ce45be6fc2cef64026183" prot="public" virt="virtual"><scope>samchon::example::chat_service::ChatRoom</scope><name>key</name></member>
      <member refid="d7/d41/classsamchon_1_1example_1_1chat__service_1_1ChatRoom_1a9b45b3e13bd9167aab02e17e08916231" prot="private" virt="non-virtual"><scope>samchon::example::chat_service::ChatRoom</scope><name>name</name></member>
      <member refid="d7/d41/classsamchon_1_1example_1_1chat__service_1_1ChatRoom_1a1960ee93b6e09d5e43059b85db438394" prot="private" virt="non-virtual"><scope>samchon::example::chat_service::ChatRoom</scope><name>participants</name></member>
      <member refid="d7/d41/classsamchon_1_1example_1_1chat__service_1_1ChatRoom_1a8a700657717304d539af15d8b63a0343" prot="public" virt="non-virtual"><scope>samchon::example::chat_service::ChatRoom</scope><name>registerClient</name></member>
      <member refid="d7/d41/classsamchon_1_1example_1_1chat__service_1_1ChatRoom_1a9ffd4676a78b6120f6f7c464f6cd41c2" prot="public" virt="virtual"><scope>samchon::example::chat_service::ChatRoom</scope><name>replyData</name></member>
      <member refid="d4/dcf/classsamchon_1_1protocol_1_1IProtocol_1a8debd8a0f208dbf9778fe66248443317" prot="public" virt="virtual" ambiguityscope="samchon::protocol::IProtocol::"><scope>samchon::example::chat_service::ChatRoom</scope><name>replyData</name></member>
      <member refid="d7/d41/classsamchon_1_1example_1_1chat__service_1_1ChatRoom_1a9112a855a9abf508f56452d7470ef9bb" prot="private" virt="non-virtual"><scope>samchon::example::chat_service::ChatRoom</scope><name>roomArray</name></member>
      <member refid="d7/d41/classsamchon_1_1example_1_1chat__service_1_1ChatRoom_1a17eab70a0db6bcfd8d1966f8100bcbb7" prot="public" virt="virtual"><scope>samchon::example::chat_service::ChatRoom</scope><name>sendData</name></member>
      <member refid="d4/dcf/classsamchon_1_1protocol_1_1IProtocol_1ac531693224b79ece2762da1e52bec0b6" prot="public" virt="virtual" ambiguityscope="samchon::protocol::IProtocol::"><scope>samchon::example::chat_service::ChatRoom</scope><name>sendData</name></member>
      <member refid="d7/d41/classsamchon_1_1example_1_1chat__service_1_1ChatRoom_1ad39e9e1084298d459f378d1d4ab340e3" prot="protected" virt="non-virtual"><scope>samchon::example::chat_service::ChatRoom</scope><name>super</name></member>
      <member refid="d7/d41/classsamchon_1_1example_1_1chat__service_1_1ChatRoom_1a0d32bf5b31cc10a3ea17ae79215f2c35" prot="protected" virt="virtual"><scope>samchon::example::chat_service::ChatRoom</scope><name>TAG</name></member>
      <member refid="d7/d41/classsamchon_1_1example_1_1chat__service_1_1ChatRoom_1ac0248fcb25b3fa4f463d545005fdcbf3" prot="public" virt="virtual"><scope>samchon::example::chat_service::ChatRoom</scope><name>toXML</name></member>
      <member refid="d7/d41/classsamchon_1_1example_1_1chat__service_1_1ChatRoom_1a715fcbd58485aa38a60607fbf217dc88" prot="public" virt="virtual"><scope>samchon::example::chat_service::ChatRoom</scope><name>~ChatRoom</name></member>
      <member refid="d0/d3e/classsamchon_1_1protocol_1_1Entity_1a07d18d40fa0c4b4f1341cfddc0b600dd" prot="public" virt="virtual"><scope>samchon::example::chat_service::ChatRoom</scope><name>~Entity</name></member>
      <member refid="d4/dcf/classsamchon_1_1protocol_1_1IProtocol_1a51a537c2b3a6ff5eb7b5ed859cc062ad" prot="public" virt="virtual"><scope>samchon::example::chat_service::ChatRoom</scope><name>~IProtocol</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
