<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.10">
  <compounddef id="d7/d51/classsamchon_1_1protocol_1_1IWebClient" kind="class" language="C++" prot="public">
    <compoundname>samchon::protocol::IWebClient</compoundname>
    <basecompoundref refid="d3/dc8/classsamchon_1_1protocol_1_1IClient" prot="public" virt="virtual">IClient</basecompoundref>
    <derivedcompoundref refid="d8/dc2/classsamchon_1_1protocol_1_1WebServerConnector" prot="public" virt="virtual">WebServerConnector</derivedcompoundref>
    <includes refid="d0/d77/IWebClient_8hpp" local="no">IWebClient.hpp</includes>
      <sectiondef kind="protected-type">
      <memberdef kind="typedef" id="d7/d51/classsamchon_1_1protocol_1_1IWebClient_1a20f20ccd18667a334f2b58d1996c7f2c" prot="protected" static="no">
        <type><ref refid="d3/dc8/classsamchon_1_1protocol_1_1IClient" kindref="compound">IClient</ref></type>
        <definition>typedef IClient super</definition>
        <argsstring></argsstring>
        <name>super</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/OneDrive/Project/Samchon/framework/cpp/samchon/protocol/IWebClient.hpp" line="23" column="1" bodyfile="D:/OneDrive/Project/Samchon/framework/cpp/samchon/protocol/IWebClient.hpp" bodystart="23" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="d7/d51/classsamchon_1_1protocol_1_1IWebClient_1a2dc334d0bccca202809b9215a6390533" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>IWebClient</definition>
        <argsstring>()</argsstring>
        <name>IWebClient</name>
        <briefdescription>
<para>Default Constructor. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/OneDrive/Project/Samchon/framework/cpp/samchon/protocol/IWebClient.hpp" line="29" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d7/d51/classsamchon_1_1protocol_1_1IWebClient_1a33c44f08e2326cc3bfeae19fc2f4b1c9" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>virtual ~IWebClient</definition>
        <argsstring>()=default</argsstring>
        <name>~IWebClient</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/OneDrive/Project/Samchon/framework/cpp/samchon/protocol/IWebClient.hpp" line="30" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d7/d51/classsamchon_1_1protocol_1_1IWebClient_1ad07c8fef1588c3764bdcf1c12f7c0dae" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void listen</definition>
        <argsstring>() override</argsstring>
        <name>listen</name>
        <reimplements refid="d3/dc8/classsamchon_1_1protocol_1_1IClient_1a458bbe4cf81360301586b2e62a7f9dd2">listen</reimplements>
        <briefdescription>
<para>Listens message from a related system. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>It holds (monopolies) a thread. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/OneDrive/Project/Samchon/framework/cpp/samchon/protocol/IWebClient.hpp" line="32" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d7/d51/classsamchon_1_1protocol_1_1IWebClient_1ae1f443b90ed04fff9af40c8e7015e314" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void sendData</definition>
        <argsstring>(std::shared_ptr&lt; Invoke &gt;) override</argsstring>
        <name>sendData</name>
        <reimplements refid="d3/dc8/classsamchon_1_1protocol_1_1IClient_1a7e9e36d7847d933abbf3b1eda35aab0d">sendData</reimplements>
        <param>
          <type>std::shared_ptr&lt; <ref refid="d8/d82/classsamchon_1_1protocol_1_1Invoke" kindref="compound">Invoke</ref> &gt;</type>
        </param>
        <briefdescription>
<para>Send <ref refid="d8/d82/classsamchon_1_1protocol_1_1Invoke" kindref="compound">Invoke</ref> message following web-socket protocol. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>invoke</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="d8/d82/classsamchon_1_1protocol_1_1Invoke" kindref="compound">Invoke</ref> message to send associated network system. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/OneDrive/Project/Samchon/framework/cpp/samchon/protocol/IWebClient.hpp" line="39" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>An interface for a web-client. </para>    </briefdescription>
    <detaileddescription>
<para><ref refid="d7/d51/classsamchon_1_1protocol_1_1IWebClient" kindref="compound">IWebClient</ref> is a <ref refid="d3/dc8/classsamchon_1_1protocol_1_1IClient" kindref="compound">IClient</ref> following web-socket protocol. </para><para><simplesect kind="par"><title>[Inherited]</title><para></para></simplesect>
<ref refid="d3/dc8/classsamchon_1_1protocol_1_1IClient" kindref="compound">IClient</ref> is an interface not only for a physical client, but also a driver for a client in a physical server. </para><para><itemizedlist>
<listitem>
<para><ref refid="d4/de8/classsamchon_1_1protocol_1_1IServer" kindref="compound">IServer</ref>:addClient()  <itemizedlist>
<listitem>
<para><ref refid="d9/d35/classsamchon_1_1protocol_1_1service_1_1Server" kindref="compound">service::Server</ref> -&gt; <ref refid="df/d87/classsamchon_1_1protocol_1_1service_1_1User" kindref="compound">service::User</ref> -&gt; <ref refid="df/d31/classsamchon_1_1protocol_1_1service_1_1Client" kindref="compound">service::Client</ref>  </para></listitem>
<listitem>
<para><ref refid="d8/d47/classsamchon_1_1protocol_1_1ExternalClientArray" kindref="compound">ExternalClientArray</ref> (A physical server) -&gt; <ref refid="dc/dfd/classsamchon_1_1protocol_1_1ExternalClient" kindref="compound">ExternalClient</ref> (A driver of a client)  </para></listitem>
</itemizedlist>
</para></listitem>
</itemizedlist>
</para><para><ref refid="d3/dc8/classsamchon_1_1protocol_1_1IClient" kindref="compound">IClient</ref> is one of the basic 3 + 1 components that can make any type of network system in Samchon Framework with <ref refid="d4/dcf/classsamchon_1_1protocol_1_1IProtocol" kindref="compound">IProtocol</ref> and <ref refid="d4/de8/classsamchon_1_1protocol_1_1IServer" kindref="compound">IServer</ref>. Looking around classes in Samchon Framework, you can see all classes related with client are implemented from the <ref refid="d3/dc8/classsamchon_1_1protocol_1_1IClient" kindref="compound">IClient</ref>. </para><para><ref refid="d3/dc8/classsamchon_1_1protocol_1_1IClient" kindref="compound">IClient</ref> takes a role of real network I/O. <ref refid="d3/dc8/classsamchon_1_1protocol_1_1IClient" kindref="compound">IClient</ref> sends data to otherside network system from <ref refid="d4/dcf/classsamchon_1_1protocol_1_1IProtocol_1ac531693224b79ece2762da1e52bec0b6" kindref="member">IProtocol::sendData()</ref>. <ref refid="d3/dc8/classsamchon_1_1protocol_1_1IClient" kindref="compound">IClient</ref> also gets data from otherside network system, generates standard <ref refid="d8/d82/classsamchon_1_1protocol_1_1Invoke" kindref="compound">Invoke</ref> message from parsing the replied data and shift the <ref refid="d8/d82/classsamchon_1_1protocol_1_1Invoke" kindref="compound">Invoke</ref> message to <ref refid="d4/dcf/classsamchon_1_1protocol_1_1IProtocol_1a8debd8a0f208dbf9778fe66248443317" kindref="member">IProtocol::replyData()</ref>. </para><para><image type="html" name="protocol_interface.png"></image>
 <image type="latex" name="protocol_interface.png"></image>
</para><para><simplesect kind="author"><para>Jeongho Nam </para></simplesect>
</para>    </detaileddescription>
    <inheritancegraph>
      <node id="2022">
        <label>IProtocol</label>
        <link refid="d4/dcf/classsamchon_1_1protocol_1_1IProtocol"/>
      </node>
      <node id="2020">
        <label>IWebClient</label>
        <link refid="d7/d51/classsamchon_1_1protocol_1_1IWebClient"/>
        <childnode refid="2021" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2021">
        <label>IClient</label>
        <link refid="d3/dc8/classsamchon_1_1protocol_1_1IClient"/>
        <childnode refid="2022" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2023">
        <label>WebServerConnector</label>
        <link refid="d8/dc2/classsamchon_1_1protocol_1_1WebServerConnector"/>
        <childnode refid="2020" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2026">
        <label>IProtocol</label>
        <link refid="d4/dcf/classsamchon_1_1protocol_1_1IProtocol"/>
      </node>
      <node id="2024">
        <label>IWebClient</label>
        <link refid="d7/d51/classsamchon_1_1protocol_1_1IWebClient"/>
        <childnode refid="2025" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2025">
        <label>IClient</label>
        <link refid="d3/dc8/classsamchon_1_1protocol_1_1IClient"/>
        <childnode refid="2026" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="D:/OneDrive/Project/Samchon/framework/cpp/samchon/protocol/IWebClient.hpp" line="21" column="1" bodyfile="D:/OneDrive/Project/Samchon/framework/cpp/samchon/protocol/IWebClient.hpp" bodystart="19" bodyend="40"/>
    <listofallmembers>
      <member refid="d3/dc8/classsamchon_1_1protocol_1_1IClient_1aa3ceab5738d3d60e963bb177d5847f14" prot="protected" virt="virtual"><scope>samchon::protocol::IWebClient</scope><name>_replyData</name></member>
      <member refid="d3/dc8/classsamchon_1_1protocol_1_1IClient_1a68ee198dd9bae714dab92bb6374f8d95" prot="protected" virt="virtual"><scope>samchon::protocol::IWebClient</scope><name>BUFFER_SIZE</name></member>
      <member refid="d3/dc8/classsamchon_1_1protocol_1_1IClient_1a7d9b7003a224b6050168eede30b914a4" prot="public" virt="non-virtual"><scope>samchon::protocol::IWebClient</scope><name>IClient</name></member>
      <member refid="d4/dcf/classsamchon_1_1protocol_1_1IProtocol_1a6258c530c328dc119e698bb7e7fe222a" prot="public" virt="non-virtual"><scope>samchon::protocol::IWebClient</scope><name>IProtocol</name></member>
      <member refid="d7/d51/classsamchon_1_1protocol_1_1IWebClient_1a2dc334d0bccca202809b9215a6390533" prot="public" virt="non-virtual"><scope>samchon::protocol::IWebClient</scope><name>IWebClient</name></member>
      <member refid="d7/d51/classsamchon_1_1protocol_1_1IWebClient_1ad07c8fef1588c3764bdcf1c12f7c0dae" prot="public" virt="virtual"><scope>samchon::protocol::IWebClient</scope><name>listen</name></member>
      <member refid="d4/dcf/classsamchon_1_1protocol_1_1IProtocol_1a8debd8a0f208dbf9778fe66248443317" prot="public" virt="virtual"><scope>samchon::protocol::IWebClient</scope><name>replyData</name></member>
      <member refid="d7/d51/classsamchon_1_1protocol_1_1IWebClient_1ae1f443b90ed04fff9af40c8e7015e314" prot="public" virt="virtual"><scope>samchon::protocol::IWebClient</scope><name>sendData</name></member>
      <member refid="d3/dc8/classsamchon_1_1protocol_1_1IClient_1a4d6d58450d4b275cd6200bdcfb05403f" prot="protected" virt="non-virtual"><scope>samchon::protocol::IWebClient</scope><name>sendMtx</name></member>
      <member refid="d3/dc8/classsamchon_1_1protocol_1_1IClient_1ac7cf6524b1019c7fbaa210c68c05726e" prot="protected" virt="non-virtual"><scope>samchon::protocol::IWebClient</scope><name>socket</name></member>
      <member refid="d7/d51/classsamchon_1_1protocol_1_1IWebClient_1a20f20ccd18667a334f2b58d1996c7f2c" prot="protected" virt="non-virtual"><scope>samchon::protocol::IWebClient</scope><name>super</name></member>
      <member refid="d3/dc8/classsamchon_1_1protocol_1_1IClient_1ae8742ef162f2aee85a2e7b4b7ef1357f" prot="public" virt="virtual"><scope>samchon::protocol::IWebClient</scope><name>~IClient</name></member>
      <member refid="d4/dcf/classsamchon_1_1protocol_1_1IProtocol_1a51a537c2b3a6ff5eb7b5ed859cc062ad" prot="public" virt="virtual"><scope>samchon::protocol::IWebClient</scope><name>~IProtocol</name></member>
      <member refid="d7/d51/classsamchon_1_1protocol_1_1IWebClient_1a33c44f08e2326cc3bfeae19fc2f4b1c9" prot="public" virt="virtual"><scope>samchon::protocol::IWebClient</scope><name>~IWebClient</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
