<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.10">
  <compounddef id="d7/da8/classsamchon_1_1protocol_1_1master_1_1DistributedServer" kind="class" language="C++" prot="public">
    <compoundname>samchon::protocol::master::DistributedServer</compoundname>
    <basecompoundref refid="db/d2d/classsamchon_1_1protocol_1_1master_1_1DistributedSystem" prot="public" virt="virtual">DistributedSystem</basecompoundref>
    <basecompoundref refid="df/d4a/classsamchon_1_1protocol_1_1ExternalServer" prot="public" virt="virtual">ExternalServer</basecompoundref>
    <includes refid="d8/df4/DistributedServer_8hpp" local="no">DistributedServer.hpp</includes>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="d7/da8/classsamchon_1_1protocol_1_1master_1_1DistributedServer_1a98ab0c4ebfbc60955716f0944819f6e0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>DistributedServer</definition>
        <argsstring>()</argsstring>
        <name>DistributedServer</name>
        <briefdescription>
<para>Default Constructor. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/OneDrive/Project/Samchon/framework/cpp/samchon/protocol/master/DistributedServer.hpp" line="30" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d7/da8/classsamchon_1_1protocol_1_1master_1_1DistributedServer_1ae5da73638adb016cee5ea36a8fc92810" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>virtual ~DistributedServer</definition>
        <argsstring>()=default</argsstring>
        <name>~DistributedServer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/OneDrive/Project/Samchon/framework/cpp/samchon/protocol/master/DistributedServer.hpp" line="31" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d7/da8/classsamchon_1_1protocol_1_1master_1_1DistributedServer_1a4ca1bd41b274e7cc42e80b90de4794bc" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void construct</definition>
        <argsstring>(std::shared_ptr&lt; library::XML &gt;) override</argsstring>
        <name>construct</name>
        <reimplements refid="df/d4a/classsamchon_1_1protocol_1_1ExternalServer_1a4c4b7d9441b10a734e8ce75e67d0375c">construct</reimplements>
        <param>
          <type>std::shared_ptr&lt; <ref refid="d5/d37/classsamchon_1_1library_1_1XML" kindref="compound">library::XML</ref> &gt;</type>
          <declname>xml</declname>
        </param>
        <briefdescription>
<para>Construct data of the <ref refid="d0/d3e/classsamchon_1_1protocol_1_1Entity" kindref="compound">Entity</ref> from an XML object. </para>        </briefdescription>
        <detaileddescription>
<para>Constructs the <ref refid="d4/deb/classsamchon_1_1protocol_1_1EntityGroup" kindref="compound">EntityGroup</ref>&apos;s own member variables only from the input XML object. </para><para>Do not consider about constructing children <ref refid="d0/d3e/classsamchon_1_1protocol_1_1Entity" kindref="compound">Entity</ref> objects&apos; data in <ref refid="d4/deb/classsamchon_1_1protocol_1_1EntityGroup_1a49bad12c4913a280d0249479ee08edc2" kindref="member">EntityGroup::construct()</ref>. Those children <ref refid="d0/d3e/classsamchon_1_1protocol_1_1Entity" kindref="compound">Entity</ref> objects&apos; data will constructed by their own <ref refid="d7/da8/classsamchon_1_1protocol_1_1master_1_1DistributedServer_1a4ca1bd41b274e7cc42e80b90de4794bc" kindref="member">construct()</ref> method. Even insertion of XML objects representing children are done by abstract method of <ref refid="d4/deb/classsamchon_1_1protocol_1_1EntityGroup_1a30dee0fe2044f2f88579935cc10fc753" kindref="member">EntityGroup::toXML()</ref>. </para><para>Constructs only data of <ref refid="d4/deb/classsamchon_1_1protocol_1_1EntityGroup" kindref="compound">EntityGroup</ref>&apos;s own. </para><para><simplesect kind="par"><title>[Inherited]</title><para>Construct data of the <ref refid="d0/d3e/classsamchon_1_1protocol_1_1Entity" kindref="compound">Entity</ref> from an XML object. </para></simplesect>
Overrides the <ref refid="d7/da8/classsamchon_1_1protocol_1_1master_1_1DistributedServer_1a4ca1bd41b274e7cc42e80b90de4794bc" kindref="member">construct()</ref> method and fetch data of member variables from the XML. </para><para>By recommended guidance, data representing member variables are contained in properties of the put XML object. </para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>xml</parametername>
</parameternamelist>
<parameterdescription>
<para>An xml used to construct data of entity </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/OneDrive/Project/Samchon/framework/cpp/samchon/protocol/master/DistributedServer.hpp" line="33" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d7/da8/classsamchon_1_1protocol_1_1master_1_1DistributedServer_1aad9fbd4de53a3243bd213e7158ed2e48" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>auto</type>
        <definition>virtual auto toXML</definition>
        <argsstring>() const  -&gt; std::shared_ptr&lt; library::XML &gt; override</argsstring>
        <name>toXML</name>
        <reimplements refid="df/d4a/classsamchon_1_1protocol_1_1ExternalServer_1ac0248fcb25b3fa4f463d545005fdcbf3">toXML</reimplements>
        <briefdescription>
<para>Get an XML object represents the <ref refid="d4/deb/classsamchon_1_1protocol_1_1EntityGroup" kindref="compound">EntityGroup</ref>. </para>        </briefdescription>
        <detaileddescription>
<para>Archives the <ref refid="d4/deb/classsamchon_1_1protocol_1_1EntityGroup" kindref="compound">EntityGroup</ref>&apos;s own member variables only to the returned XML object. </para><para>Do not consider about archiving children <ref refid="d0/d3e/classsamchon_1_1protocol_1_1Entity" kindref="compound">Entity</ref> objects&apos; data in <ref refid="d4/deb/classsamchon_1_1protocol_1_1EntityGroup_1a30dee0fe2044f2f88579935cc10fc753" kindref="member">EntityGroup::toXML()</ref>. Those children <ref refid="d0/d3e/classsamchon_1_1protocol_1_1Entity" kindref="compound">Entity</ref> objects will converted to XML object by their own <ref refid="d7/da8/classsamchon_1_1protocol_1_1master_1_1DistributedServer_1aad9fbd4de53a3243bd213e7158ed2e48" kindref="member">toXML()</ref> method. The insertion of XML objects representing children are done by abstract method of <ref refid="d4/deb/classsamchon_1_1protocol_1_1EntityGroup_1a30dee0fe2044f2f88579935cc10fc753" kindref="member">EntityGroup::toXML()</ref>. </para><para>Archives only data of <ref refid="d4/deb/classsamchon_1_1protocol_1_1EntityGroup" kindref="compound">EntityGroup</ref>&apos;s own. </para><para><simplesect kind="par"><title>[Inherited]</title><para>Get an XML object represents the <ref refid="d0/d3e/classsamchon_1_1protocol_1_1Entity" kindref="compound">Entity</ref>. </para></simplesect>
Returns an XML object that can represents the <ref refid="d0/d3e/classsamchon_1_1protocol_1_1Entity" kindref="compound">Entity</ref> containing member variables into properties. </para><para>A member variable (not object, but atomic value like number, string or date) is categorized as a property within the framework of entity side. Thus, when overriding a <ref refid="d7/da8/classsamchon_1_1protocol_1_1master_1_1DistributedServer_1aad9fbd4de53a3243bd213e7158ed2e48" kindref="member">toXML()</ref> method and archiving member variables to an XML object to return, puts each variable to be a property belongs to only an XML object. </para><para>Don&apos;t archive the member variable of atomic value to XML::value causing enormouse creation of XML objects to number of member variables. An <ref refid="d0/d3e/classsamchon_1_1protocol_1_1Entity" kindref="compound">Entity</ref> must be represented by only an XML instance (tag). </para><para><table rows="2" cols="2"><row>
<entry thead="yes"><para>Standard Usage  </para></entry><entry thead="yes"><para>Non-standard usage abusing value   </para></entry></row>
<row>
<entry thead="no"><para>&lt;memberList&gt;<linebreak/>
 <nonbreakablespace/><nonbreakablespace/><nonbreakablespace/><nonbreakablespace/> &lt;member id=&apos;jhnam88&apos; name=&apos;Jeongho+Nam&apos; birthdate=&apos;1988-03-11&apos; /&gt;<linebreak/>
 <nonbreakablespace/><nonbreakablespace/><nonbreakablespace/><nonbreakablespace/> &lt;member id=&apos;master&apos; name=&apos;Administartor&apos; birthdate=&apos;2011-07-28&apos; /&gt;<linebreak/>
 &lt;/memberList&gt;  </para></entry><entry thead="no"><para>&lt;member&gt;<linebreak/>
 <nonbreakablespace/><nonbreakablespace/><nonbreakablespace/><nonbreakablespace/> &lt;id&gt;jhnam88&lt;/id&gt;<linebreak/>
 <nonbreakablespace/><nonbreakablespace/><nonbreakablespace/><nonbreakablespace/> &lt;name&gt;Jeongho+Nam&lt;/name&gt;<linebreak/>
 <nonbreakablespace/><nonbreakablespace/><nonbreakablespace/><nonbreakablespace/> &lt;birthdate&gt;1988-03-11&lt;/birthdate&gt;<linebreak/>
 &lt;/member&gt;   </para></entry></row>
</table>
</para><para><simplesect kind="return"><para>An XML object representing the <ref refid="d0/d3e/classsamchon_1_1protocol_1_1Entity" kindref="compound">Entity</ref>. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/OneDrive/Project/Samchon/framework/cpp/samchon/protocol/master/DistributedServer.hpp" line="34" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>A network driver for a distributed server. </para>    </briefdescription>
    <detaileddescription>
<para><ref refid="d7/da8/classsamchon_1_1protocol_1_1master_1_1DistributedServer" kindref="compound">DistributedServer</ref> is an <ref refid="db/d2d/classsamchon_1_1protocol_1_1master_1_1DistributedSystem" kindref="compound">DistributedSystem</ref> specialized in server driver. </para><para><simplesect kind="par"><title>[Inherited]</title><para></para></simplesect>
<ref refid="db/d2d/classsamchon_1_1protocol_1_1master_1_1DistributedSystem" kindref="compound">DistributedSystem</ref> class is an <ref refid="df/d42/classsamchon_1_1protocol_1_1ExternalSystem" kindref="compound">ExternalSystem</ref> having role as <ref refid="d1/d16/classsamchon_1_1protocol_1_1master_1_1DistributedSystemRole" kindref="compound">DistributedSystemRole</ref> objects with performance index and history log allocation of <ref refid="d1/d16/classsamchon_1_1protocol_1_1master_1_1DistributedSystemRole" kindref="compound">DistributedSystemRole</ref> objects and have requsted <ref refid="d8/d82/classsamchon_1_1protocol_1_1Invoke" kindref="compound">Invoke</ref> message to related external system. </para><para>The greatest difference between <ref refid="db/d2d/classsamchon_1_1protocol_1_1master_1_1DistributedSystem" kindref="compound">DistributedSystem</ref> and <ref refid="df/d42/classsamchon_1_1protocol_1_1ExternalSystem" kindref="compound">ExternalSystem</ref> is, unlike the <ref refid="df/d42/classsamchon_1_1protocol_1_1ExternalSystem" kindref="compound">ExternalSystem</ref> class which having is <ref refid="d4/db7/classsamchon_1_1protocol_1_1ExternalSystemRole" kindref="compound">ExternalSystemRole</ref> objects exclusively, <ref refid="db/d2d/classsamchon_1_1protocol_1_1master_1_1DistributedSystem" kindref="compound">DistributedSystem</ref> does not monopoly a <ref refid="d1/d16/classsamchon_1_1protocol_1_1master_1_1DistributedSystemRole" kindref="compound">DistributedSystemRole</ref>. The <ref refid="d1/d16/classsamchon_1_1protocol_1_1master_1_1DistributedSystemRole" kindref="compound">DistributedSystemRole</ref> can allocatedto multiple <ref refid="db/d2d/classsamchon_1_1protocol_1_1master_1_1DistributedSystem" kindref="compound">DistributedSystem</ref>.</para><para><ref refid="db/d2d/classsamchon_1_1protocol_1_1master_1_1DistributedSystem" kindref="compound">DistributedSystem</ref> and <ref refid="d1/d16/classsamchon_1_1protocol_1_1master_1_1DistributedSystemRole" kindref="compound">DistributedSystemRole</ref> classes have performance index and history log archiving what they&apos;ve requested to the related distributed system. Allocating <ref refid="d1/d16/classsamchon_1_1protocol_1_1master_1_1DistributedSystemRole" kindref="compound">DistributedSystemRole</ref> objects to DistributedSyste will be determined those performance index and history log for optimize distribution of elasped time about each <ref refid="d8/d82/classsamchon_1_1protocol_1_1Invoke" kindref="compound">Invoke</ref> message processing. </para><para><image type="html" name="protocol_master_distributed_system.png"></image>
 <image type="latex" name="protocol_master_distributed_system.png"></image>
</para><para><simplesect kind="par"><title>[Inherited]</title><para></para></simplesect>
<ref refid="df/d42/classsamchon_1_1protocol_1_1ExternalSystem" kindref="compound">ExternalSystem</ref> is a boundary class interacting with an external system by network communication. Also, <ref refid="df/d42/classsamchon_1_1protocol_1_1ExternalSystem" kindref="compound">ExternalSystem</ref> is an abstract class that a network role, which one is server and which one is client, is not determined yet. </para><para>The <ref refid="df/d42/classsamchon_1_1protocol_1_1ExternalSystem" kindref="compound">ExternalSystem</ref> has ExternalSystemRole(s) groupped methods, handling <ref refid="d8/d82/classsamchon_1_1protocol_1_1Invoke" kindref="compound">Invoke</ref> message interacting with the external system, by subject or unit of a moudle. The <ref refid="d4/db7/classsamchon_1_1protocol_1_1ExternalSystemRole" kindref="compound">ExternalSystemRole</ref> is categorized in a &apos;control&apos;. </para><para><image type="html" name="protocol_external_system.png"></image>
 <image type="latex" name="protocol_external_system.png"></image>
</para><para><simplesect kind="note"><para></para></simplesect>
The <ref refid="df/d42/classsamchon_1_1protocol_1_1ExternalSystem" kindref="compound">ExternalSystem</ref> class takes a role of interaction with external system in network level. However, within a framework of Samchon Framework, a boundary class like the <ref refid="df/d42/classsamchon_1_1protocol_1_1ExternalSystem" kindref="compound">ExternalSystem</ref> is not such important. You can find some evidence in a relationship between <ref refid="d9/dc6/classsamchon_1_1protocol_1_1ExternalSystemArray" kindref="compound">ExternalSystemArray</ref>, <ref refid="df/d42/classsamchon_1_1protocol_1_1ExternalSystem" kindref="compound">ExternalSystem</ref> and <ref refid="d4/db7/classsamchon_1_1protocol_1_1ExternalSystemRole" kindref="compound">ExternalSystemRole</ref>. </para><para>Of course, the <ref refid="d4/db7/classsamchon_1_1protocol_1_1ExternalSystemRole" kindref="compound">ExternalSystemRole</ref> is belonged to an <ref refid="df/d42/classsamchon_1_1protocol_1_1ExternalSystem" kindref="compound">ExternalSystem</ref>. However, if you access an <ref refid="d4/db7/classsamchon_1_1protocol_1_1ExternalSystemRole" kindref="compound">ExternalSystemRole</ref> from an <ref refid="d9/dc6/classsamchon_1_1protocol_1_1ExternalSystemArray" kindref="compound">ExternalSystemArray</ref> directly, not passing by a belonged <ref refid="df/d42/classsamchon_1_1protocol_1_1ExternalSystem" kindref="compound">ExternalSystem</ref>, and send an <ref refid="d8/d82/classsamchon_1_1protocol_1_1Invoke" kindref="compound">Invoke</ref> message even you&apos;re not knowing which <ref refid="df/d42/classsamchon_1_1protocol_1_1ExternalSystem" kindref="compound">ExternalSystem</ref> is related in, it&apos;s called &quot;Proxy pattern&quot;.</para><para>Like the explanation of &quot;Proxy pattern&quot;, you can utilize an <ref refid="d4/db7/classsamchon_1_1protocol_1_1ExternalSystemRole" kindref="compound">ExternalSystemRole</ref> as a proxy of an <ref refid="df/d42/classsamchon_1_1protocol_1_1ExternalSystem" kindref="compound">ExternalSystem</ref>. With the pattern, you can only concentrate on <ref refid="d4/db7/classsamchon_1_1protocol_1_1ExternalSystemRole" kindref="compound">ExternalSystemRole</ref> itself, what to do with <ref refid="d8/d82/classsamchon_1_1protocol_1_1Invoke" kindref="compound">Invoke</ref> message, irrespective of the <ref refid="d4/db7/classsamchon_1_1protocol_1_1ExternalSystemRole" kindref="compound">ExternalSystemRole</ref> is belonged to which <ref refid="df/d42/classsamchon_1_1protocol_1_1ExternalSystem" kindref="compound">ExternalSystem</ref>. </para><para><simplesect kind="see"><para><ref refid="db/d64/namespacesamchon_1_1protocol" kindref="compound">samchon::protocol</ref> </para></simplesect>
<simplesect kind="author"><para>Jeongho Nam </para></simplesect>
</para>    </detaileddescription>
    <inheritancegraph>
      <node id="1226">
        <label>IProtocol</label>
        <link refid="d4/dcf/classsamchon_1_1protocol_1_1IProtocol"/>
      </node>
      <node id="1228">
        <label>ServerConnector</label>
        <link refid="db/d72/classsamchon_1_1protocol_1_1ServerConnector"/>
        <childnode refid="1225" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1222">
        <label>SharedEntityArray&lt; ExternalSystemRole &gt;</label>
        <link refid="d4/deb/classsamchon_1_1protocol_1_1EntityGroup"/>
        <childnode refid="1223" relation="public-inheritance">
        </childnode>
        <childnode refid="1224" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1221">
        <label>ExternalSystem</label>
        <link refid="df/d42/classsamchon_1_1protocol_1_1ExternalSystem"/>
        <childnode refid="1222" relation="public-inheritance">
        </childnode>
        <childnode refid="1225" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1225">
        <label>IClient</label>
        <link refid="d3/dc8/classsamchon_1_1protocol_1_1IClient"/>
        <childnode refid="1226" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1223">
        <label>Entity</label>
        <link refid="d0/d3e/classsamchon_1_1protocol_1_1Entity"/>
      </node>
      <node id="1227">
        <label>ExternalServer</label>
        <link refid="df/d4a/classsamchon_1_1protocol_1_1ExternalServer"/>
        <childnode refid="1221" relation="public-inheritance">
        </childnode>
        <childnode refid="1228" relation="private-inheritance">
        </childnode>
      </node>
      <node id="1224">
        <label>IEntityGroup</label>
        <link refid="d9/d4c/classsamchon_1_1protocol_1_1IEntityGroup"/>
      </node>
      <node id="1219">
        <label>DistributedServer</label>
        <link refid="d7/da8/classsamchon_1_1protocol_1_1master_1_1DistributedServer"/>
        <childnode refid="1220" relation="public-inheritance">
        </childnode>
        <childnode refid="1227" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1220">
        <label>DistributedSystem</label>
        <link refid="db/d2d/classsamchon_1_1protocol_1_1master_1_1DistributedSystem"/>
        <childnode refid="1221" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1236">
        <label>IProtocol</label>
        <link refid="d4/dcf/classsamchon_1_1protocol_1_1IProtocol"/>
      </node>
      <node id="1240">
        <label>ServerConnector</label>
        <link refid="db/d72/classsamchon_1_1protocol_1_1ServerConnector"/>
        <childnode refid="1235" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1238">
        <label>SharedEntityList&lt; DSInvokeHistory &gt;</label>
        <link refid="d4/deb/classsamchon_1_1protocol_1_1EntityGroup"/>
        <childnode refid="1233" relation="public-inheritance">
        </childnode>
        <childnode refid="1234" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1232">
        <label>SharedEntityArray&lt; ExternalSystemRole &gt;</label>
        <link refid="d4/deb/classsamchon_1_1protocol_1_1EntityGroup"/>
        <childnode refid="1233" relation="public-inheritance">
        </childnode>
        <childnode refid="1234" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1231">
        <label>ExternalSystem</label>
        <link refid="df/d42/classsamchon_1_1protocol_1_1ExternalSystem"/>
        <childnode refid="1232" relation="public-inheritance">
        </childnode>
        <childnode refid="1235" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1235">
        <label>IClient</label>
        <link refid="d3/dc8/classsamchon_1_1protocol_1_1IClient"/>
        <childnode refid="1236" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1233">
        <label>Entity</label>
        <link refid="d0/d3e/classsamchon_1_1protocol_1_1Entity"/>
      </node>
      <node id="1239">
        <label>ExternalServer</label>
        <link refid="df/d4a/classsamchon_1_1protocol_1_1ExternalServer"/>
        <childnode refid="1231" relation="public-inheritance">
        </childnode>
        <childnode refid="1240" relation="private-inheritance">
        </childnode>
      </node>
      <node id="1234">
        <label>IEntityGroup</label>
        <link refid="d9/d4c/classsamchon_1_1protocol_1_1IEntityGroup"/>
      </node>
      <node id="1229">
        <label>DistributedServer</label>
        <link refid="d7/da8/classsamchon_1_1protocol_1_1master_1_1DistributedServer"/>
        <childnode refid="1230" relation="public-inheritance">
        </childnode>
        <childnode refid="1239" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1237">
        <label>DSInvokeHistoryList</label>
        <link refid="d8/d75/classsamchon_1_1protocol_1_1master_1_1DSInvokeHistoryList"/>
        <childnode refid="1238" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1230">
        <label>DistributedSystem</label>
        <link refid="db/d2d/classsamchon_1_1protocol_1_1master_1_1DistributedSystem"/>
        <childnode refid="1231" relation="public-inheritance">
        </childnode>
        <childnode refid="1237" relation="usage">
          <edgelabel>invokeHistoryList</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="D:/OneDrive/Project/Samchon/framework/cpp/samchon/protocol/master/DistributedServer.hpp" line="25" column="1" bodyfile="D:/OneDrive/Project/Samchon/framework/cpp/samchon/protocol/master/DistributedServer.hpp" bodystart="22" bodyend="35"/>
    <listofallmembers>
      <member refid="d3/dc8/classsamchon_1_1protocol_1_1IClient_1aa3ceab5738d3d60e963bb177d5847f14" prot="protected" virt="virtual"><scope>samchon::protocol::master::DistributedServer</scope><name>_replyData</name></member>
      <member refid="db/d2d/classsamchon_1_1protocol_1_1master_1_1DistributedSystem_1a3dae351b88c0b2077d83541bb5357308" prot="protected" virt="non-virtual"><scope>samchon::protocol::master::DistributedServer</scope><name>avgElapsedTime</name></member>
      <member refid="d3/dc8/classsamchon_1_1protocol_1_1IClient_1a68ee198dd9bae714dab92bb6374f8d95" prot="protected" virt="virtual"><scope>samchon::protocol::master::DistributedServer</scope><name>BUFFER_SIZE</name></member>
      <member refid="df/d42/classsamchon_1_1protocol_1_1ExternalSystem_1a5cb3666da8a6a0efe4014782bda20af0" prot="public" virt="virtual"><scope>samchon::protocol::master::DistributedServer</scope><name>CHILD_TAG</name></member>
      <member refid="d7/da8/classsamchon_1_1protocol_1_1master_1_1DistributedServer_1a4ca1bd41b274e7cc42e80b90de4794bc" prot="public" virt="virtual"><scope>samchon::protocol::master::DistributedServer</scope><name>construct</name></member>
      <member refid="d4/deb/classsamchon_1_1protocol_1_1EntityGroup_1aac5cb7c267e3cf067657ca5a73363728" prot="protected" virt="non-virtual"><scope>samchon::protocol::master::DistributedServer</scope><name>container_type</name></member>
      <member refid="d4/deb/classsamchon_1_1protocol_1_1EntityGroup_1a554e0798083a38327f360c61a1ca716b" prot="protected" virt="pure-virtual"><scope>samchon::protocol::master::DistributedServer</scope><name>createChild</name></member>
      <member refid="d7/da8/classsamchon_1_1protocol_1_1master_1_1DistributedServer_1a98ab0c4ebfbc60955716f0944819f6e0" prot="public" virt="non-virtual"><scope>samchon::protocol::master::DistributedServer</scope><name>DistributedServer</name></member>
      <member refid="db/d2d/classsamchon_1_1protocol_1_1master_1_1DistributedSystem_1a1bf3961a95b27a5fcdddb8ffa8fec413" prot="public" virt="non-virtual"><scope>samchon::protocol::master::DistributedServer</scope><name>DistributedSystem</name></member>
      <member refid="d0/d3e/classsamchon_1_1protocol_1_1Entity_1afb4718a8ca5b822cf88129ae04240489" prot="public" virt="non-virtual"><scope>samchon::protocol::master::DistributedServer</scope><name>Entity</name></member>
      <member refid="d4/deb/classsamchon_1_1protocol_1_1EntityGroup_1a8e82af015377749a76c1839466abb676" prot="protected" virt="non-virtual"><scope>samchon::protocol::master::DistributedServer</scope><name>entity_type</name></member>
      <member refid="d4/deb/classsamchon_1_1protocol_1_1EntityGroup_1a14f6ca078bbeb51a6f6bc153f7384a7c" prot="public" virt="non-virtual"><scope>samchon::protocol::master::DistributedServer</scope><name>EntityGroup</name></member>
      <member refid="df/d4a/classsamchon_1_1protocol_1_1ExternalServer_1acda7eac740491b5ff33693a3ef2e1537" prot="public" virt="non-virtual"><scope>samchon::protocol::master::DistributedServer</scope><name>ExternalServer</name></member>
      <member refid="df/d42/classsamchon_1_1protocol_1_1ExternalSystem_1a6e60022a9f417171874972fda77f6b42" prot="public" virt="non-virtual"><scope>samchon::protocol::master::DistributedServer</scope><name>ExternalSystem</name></member>
      <member refid="d4/deb/classsamchon_1_1protocol_1_1EntityGroup_1af318f1e62268b7e178fdc2a9669444b8" prot="public" virt="non-virtual"><scope>samchon::protocol::master::DistributedServer</scope><name>get</name></member>
      <member refid="d4/deb/classsamchon_1_1protocol_1_1EntityGroup_1af5c2fb617197f93e98ec6c4b547d9bdd" prot="public" virt="non-virtual"><scope>samchon::protocol::master::DistributedServer</scope><name>get</name></member>
      <member refid="df/d4a/classsamchon_1_1protocol_1_1ExternalServer_1a39e687dbb407a2d1cc1ba8b2b9299663" prot="public" virt="virtual"><scope>samchon::protocol::master::DistributedServer</scope><name>getIP</name></member>
      <member refid="df/d4a/classsamchon_1_1protocol_1_1ExternalServer_1a2da1e4ba421fb34e8d711b41d76a9ddf" prot="public" virt="virtual"><scope>samchon::protocol::master::DistributedServer</scope><name>getMyIP</name></member>
      <member refid="df/d4a/classsamchon_1_1protocol_1_1ExternalServer_1acd57c743eeecd39a8f5fe6e299a1b42d" prot="public" virt="virtual"><scope>samchon::protocol::master::DistributedServer</scope><name>getPort</name></member>
      <member refid="d4/deb/classsamchon_1_1protocol_1_1EntityGroup_1a531cae9e9c8b395f8cde3f2ca243cc79" prot="public" virt="non-virtual"><scope>samchon::protocol::master::DistributedServer</scope><name>has</name></member>
      <member refid="d3/dc8/classsamchon_1_1protocol_1_1IClient_1a7d9b7003a224b6050168eede30b914a4" prot="public" virt="non-virtual"><scope>samchon::protocol::master::DistributedServer</scope><name>IClient</name></member>
      <member refid="d9/d4c/classsamchon_1_1protocol_1_1IEntityGroup_1a613d2b691653c86d5f900c8ba33ba30b" prot="public" virt="non-virtual"><scope>samchon::protocol::master::DistributedServer</scope><name>IEntityGroup</name></member>
      <member refid="db/d2d/classsamchon_1_1protocol_1_1master_1_1DistributedSystem_1ab3b5e145a4095f2a4e41580cd82e5579" prot="protected" virt="non-virtual"><scope>samchon::protocol::master::DistributedServer</scope><name>inProgress</name></member>
      <member refid="db/d2d/classsamchon_1_1protocol_1_1master_1_1DistributedSystem_1a76fa1b64beb1b003a59dda47293dadd2" prot="protected" virt="non-virtual"><scope>samchon::protocol::master::DistributedServer</scope><name>invokeHistoryList</name></member>
      <member refid="df/d42/classsamchon_1_1protocol_1_1ExternalSystem_1a319b95015f17a3dc8b4b43a65c541571" prot="protected" virt="non-virtual"><scope>samchon::protocol::master::DistributedServer</scope><name>ip</name></member>
      <member refid="d4/dcf/classsamchon_1_1protocol_1_1IProtocol_1a6258c530c328dc119e698bb7e7fe222a" prot="public" virt="non-virtual"><scope>samchon::protocol::master::DistributedServer</scope><name>IProtocol</name></member>
      <member refid="df/d42/classsamchon_1_1protocol_1_1ExternalSystem_1a8083eb5e1b4528069982a49abe45205f" prot="public" virt="virtual"><scope>samchon::protocol::master::DistributedServer</scope><name>key</name></member>
      <member refid="d3/dc8/classsamchon_1_1protocol_1_1IClient_1a458bbe4cf81360301586b2e62a7f9dd2" prot="public" virt="virtual"><scope>samchon::protocol::master::DistributedServer</scope><name>listen</name></member>
      <member refid="df/d4a/classsamchon_1_1protocol_1_1ExternalServer_1a44adb27db8882b3fa685710516c6c120" prot="protected" virt="non-virtual"><scope>samchon::protocol::master::DistributedServer</scope><name>myIP</name></member>
      <member refid="df/d42/classsamchon_1_1protocol_1_1ExternalSystem_1a9b45b3e13bd9167aab02e17e08916231" prot="protected" virt="non-virtual"><scope>samchon::protocol::master::DistributedServer</scope><name>name</name></member>
      <member refid="db/d2d/classsamchon_1_1protocol_1_1master_1_1DistributedSystem_1a7c23ee470820689433cd5d79249c4fbf" prot="protected" virt="non-virtual"><scope>samchon::protocol::master::DistributedServer</scope><name>performance</name></member>
      <member refid="df/d42/classsamchon_1_1protocol_1_1ExternalSystem_1a63c89c04d1feae07ca35558055155ffb" prot="protected" virt="non-virtual"><scope>samchon::protocol::master::DistributedServer</scope><name>port</name></member>
      <member refid="db/d2d/classsamchon_1_1protocol_1_1master_1_1DistributedSystem_1a4f5e2a77c03d6867d49cf047173e7f2e" prot="protected" virt="non-virtual"><scope>samchon::protocol::master::DistributedServer</scope><name>processed</name></member>
      <member refid="db/d2d/classsamchon_1_1protocol_1_1master_1_1DistributedSystem_1a5c675c019fe4a91aee5dd8649e550e93" prot="public" virt="virtual"><scope>samchon::protocol::master::DistributedServer</scope><name>replyData</name></member>
      <member refid="db/d2d/classsamchon_1_1protocol_1_1master_1_1DistributedSystem_1af272c445ee65e7eced6203baa012a424" prot="protected" virt="non-virtual"><scope>samchon::protocol::master::DistributedServer</scope><name>roleHistoryList</name></member>
      <member refid="db/d2d/classsamchon_1_1protocol_1_1master_1_1DistributedSystem_1ae1f443b90ed04fff9af40c8e7015e314" prot="public" virt="virtual"><scope>samchon::protocol::master::DistributedServer</scope><name>sendData</name></member>
      <member refid="d3/dc8/classsamchon_1_1protocol_1_1IClient_1a4d6d58450d4b275cd6200bdcfb05403f" prot="protected" virt="non-virtual"><scope>samchon::protocol::master::DistributedServer</scope><name>sendMtx</name></member>
      <member refid="d3/dc8/classsamchon_1_1protocol_1_1IClient_1ac7cf6524b1019c7fbaa210c68c05726e" prot="protected" virt="non-virtual"><scope>samchon::protocol::master::DistributedServer</scope><name>socket</name></member>
      <member refid="df/d42/classsamchon_1_1protocol_1_1ExternalSystem_1ac0ae5f26cd2001d772aed9d2ea97d41c" prot="public" virt="pure-virtual" ambiguityscope="samchon::"><scope>samchon::protocol::master::DistributedServer</scope><name>start</name></member>
      <member refid="df/d4a/classsamchon_1_1protocol_1_1ExternalServer_1a5d5d9ebd12cd3a7d268bc98a3fc7bf97" prot="public" virt="virtual" ambiguityscope="samchon::protocol::ExternalServer::"><scope>samchon::protocol::master::DistributedServer</scope><name>start</name></member>
      <member refid="db/d2d/classsamchon_1_1protocol_1_1master_1_1DistributedSystem_1ae27fdebe11e3ba794a2e53b938e8b596" prot="protected" virt="non-virtual" ambiguityscope="samchon::"><scope>samchon::protocol::master::DistributedServer</scope><name>super</name></member>
      <member refid="df/d42/classsamchon_1_1protocol_1_1ExternalSystem_1aa55bc231502ef8e0dd9a9c274d028ac9" prot="public" virt="virtual"><scope>samchon::protocol::master::DistributedServer</scope><name>TAG</name></member>
      <member refid="d7/da8/classsamchon_1_1protocol_1_1master_1_1DistributedServer_1aad9fbd4de53a3243bd213e7158ed2e48" prot="public" virt="virtual"><scope>samchon::protocol::master::DistributedServer</scope><name>toXML</name></member>
      <member refid="d4/deb/classsamchon_1_1protocol_1_1EntityGroup_1aa03d6edd1546642516652a481c0bf8db" prot="protected" virt="non-virtual"><scope>samchon::protocol::master::DistributedServer</scope><name>value_type</name></member>
      <member refid="d7/da8/classsamchon_1_1protocol_1_1master_1_1DistributedServer_1ae5da73638adb016cee5ea36a8fc92810" prot="public" virt="virtual"><scope>samchon::protocol::master::DistributedServer</scope><name>~DistributedServer</name></member>
      <member refid="db/d2d/classsamchon_1_1protocol_1_1master_1_1DistributedSystem_1a734736b5240b3e98c4f77d34c033a3e0" prot="public" virt="virtual"><scope>samchon::protocol::master::DistributedServer</scope><name>~DistributedSystem</name></member>
      <member refid="d0/d3e/classsamchon_1_1protocol_1_1Entity_1a07d18d40fa0c4b4f1341cfddc0b600dd" prot="public" virt="virtual"><scope>samchon::protocol::master::DistributedServer</scope><name>~Entity</name></member>
      <member refid="d4/deb/classsamchon_1_1protocol_1_1EntityGroup_1a0dd6821308dca7395965242148146aae" prot="public" virt="virtual"><scope>samchon::protocol::master::DistributedServer</scope><name>~EntityGroup</name></member>
      <member refid="df/d4a/classsamchon_1_1protocol_1_1ExternalServer_1acdabf59e4ff7bbf420d4d94700a4d772" prot="public" virt="virtual"><scope>samchon::protocol::master::DistributedServer</scope><name>~ExternalServer</name></member>
      <member refid="df/d42/classsamchon_1_1protocol_1_1ExternalSystem_1ace3eaec0a1864ab10a9a6e815c0eba58" prot="public" virt="virtual"><scope>samchon::protocol::master::DistributedServer</scope><name>~ExternalSystem</name></member>
      <member refid="d3/dc8/classsamchon_1_1protocol_1_1IClient_1ae8742ef162f2aee85a2e7b4b7ef1357f" prot="public" virt="virtual"><scope>samchon::protocol::master::DistributedServer</scope><name>~IClient</name></member>
      <member refid="d9/d4c/classsamchon_1_1protocol_1_1IEntityGroup_1ae41524ffa5ca16d3160dfd0b00e7800f" prot="public" virt="virtual"><scope>samchon::protocol::master::DistributedServer</scope><name>~IEntityGroup</name></member>
      <member refid="d4/dcf/classsamchon_1_1protocol_1_1IProtocol_1a51a537c2b3a6ff5eb7b5ed859cc062ad" prot="public" virt="virtual"><scope>samchon::protocol::master::DistributedServer</scope><name>~IProtocol</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
