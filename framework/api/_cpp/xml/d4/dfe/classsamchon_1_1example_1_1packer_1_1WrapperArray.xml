<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.10">
  <compounddef id="d4/dfe/classsamchon_1_1example_1_1packer_1_1WrapperArray" kind="class" language="C++" prot="public">
    <compoundname>samchon::example::packer::WrapperArray</compoundname>
    <basecompoundref prot="private" virt="non-virtual">std::vector&lt; std::shared_ptr&lt; Wrapper &gt; &gt;</basecompoundref>
    <includes refid="da/df1/WrapperArray_8hpp" local="no">WrapperArray.hpp</includes>
      <sectiondef kind="private-type">
      <memberdef kind="typedef" id="d4/dfe/classsamchon_1_1example_1_1packer_1_1WrapperArray_1a23650d0aeb3039551cfed3b455403e05" prot="private" static="no">
        <type>std::vector&lt; std::shared_ptr&lt; <ref refid="dc/d06/classsamchon_1_1example_1_1packer_1_1Wrapper" kindref="compound">Wrapper</ref> &gt; &gt;</type>
        <definition>typedef std::vector&lt;std::shared_ptr&lt;Wrapper&gt; &gt; super</definition>
        <argsstring></argsstring>
        <name>super</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/OneDrive/Project/Samchon/framework/cpp/samchon/examples/packer/WrapperArray.hpp" line="30" column="1" bodyfile="D:/OneDrive/Project/Samchon/framework/cpp/samchon/examples/packer/WrapperArray.hpp" bodystart="30" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="d4/dfe/classsamchon_1_1example_1_1packer_1_1WrapperArray_1a7c8f40e2d129fded5d08eae1741e8840" prot="private" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="df/d73/classsamchon_1_1example_1_1packer_1_1Product" kindref="compound">Product</ref> * &gt;</type>
        <definition>std::vector&lt;Product*&gt; reserved</definition>
        <argsstring></argsstring>
        <name>reserved</name>
        <briefdescription>
<para>A list for reserved Product(s). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/OneDrive/Project/Samchon/framework/cpp/samchon/examples/packer/WrapperArray.hpp" line="35" column="1" bodyfile="D:/OneDrive/Project/Samchon/framework/cpp/samchon/examples/packer/WrapperArray.hpp" bodystart="35" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d4/dfe/classsamchon_1_1example_1_1packer_1_1WrapperArray_1aeaa4ca22b0db2d1121a70332693a4bda" prot="private" static="no" mutable="no">
        <type><ref refid="dc/d06/classsamchon_1_1example_1_1packer_1_1Wrapper" kindref="compound">Wrapper</ref> *</type>
        <definition>Wrapper* sample</definition>
        <argsstring></argsstring>
        <name>sample</name>
        <briefdescription>
<para>A sample wrapper used to copy. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/OneDrive/Project/Samchon/framework/cpp/samchon/examples/packer/WrapperArray.hpp" line="40" column="1" bodyfile="D:/OneDrive/Project/Samchon/framework/cpp/samchon/examples/packer/WrapperArray.hpp" bodystart="40" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="d4/dfe/classsamchon_1_1example_1_1packer_1_1WrapperArray_1a2c6a262c06b4f3f76fa01c151efc5be5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>WrapperArray</definition>
        <argsstring>(Wrapper *)</argsstring>
        <name>WrapperArray</name>
        <param>
          <type><ref refid="dc/d06/classsamchon_1_1example_1_1packer_1_1Wrapper" kindref="compound">Wrapper</ref> *</type>
          <defname>sample</defname>
        </param>
        <briefdescription>
<para>Construct from a sample wrapper. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>sample</parametername>
</parameternamelist>
<parameterdescription>
<para>A sample wrapper used to copy wrappers. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/OneDrive/Project/Samchon/framework/cpp/samchon/examples/packer/WrapperArray.hpp" line="51" column="1" bodyfile="D:/OneDrive/Project/Samchon/framework/cpp/samchon/examples/packer/WrapperArray.cpp" bodystart="15" bodyend="19"/>
      </memberdef>
      <memberdef kind="function" id="d4/dfe/classsamchon_1_1example_1_1packer_1_1WrapperArray_1a76bfeb339b591946879ad0292579b141" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>auto</type>
        <definition>auto tryInsert</definition>
        <argsstring>(Product *) -&gt; bool</argsstring>
        <name>tryInsert</name>
        <param>
          <type><ref refid="df/d73/classsamchon_1_1example_1_1packer_1_1Product" kindref="compound">Product</ref> *</type>
          <defname>product</defname>
        </param>
        <briefdescription>
<para>Try to insert a product into reserved list. </para>        </briefdescription>
        <detaileddescription>
<para>If the <ref refid="df/d73/classsamchon_1_1example_1_1packer_1_1Product" kindref="compound">Product</ref>&apos;s volume and weight is equal or less than the <ref refid="dc/d06/classsamchon_1_1example_1_1packer_1_1Wrapper" kindref="compound">Wrapper</ref> categorized so that enable to insert in a <ref refid="dc/d06/classsamchon_1_1example_1_1packer_1_1Wrapper" kindref="compound">Wrapper</ref>, reserve the <ref refid="df/d73/classsamchon_1_1example_1_1packer_1_1Product" kindref="compound">Product</ref> and returns <emphasis>true</emphasis>. If not, does not reserve and just return <emphasis>false</emphasis>.</para><para><simplesect kind="return"><para>Whether the <ref refid="df/d73/classsamchon_1_1example_1_1packer_1_1Product" kindref="compound">Product</ref>&apos;s volume and weight is equal or less than the <ref refid="dc/d06/classsamchon_1_1example_1_1packer_1_1Wrapper" kindref="compound">Wrapper</ref>. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/OneDrive/Project/Samchon/framework/cpp/samchon/examples/packer/WrapperArray.hpp" line="63" column="1" bodyfile="D:/OneDrive/Project/Samchon/framework/cpp/samchon/examples/packer/WrapperArray.cpp" bodystart="24" bodyend="34"/>
      </memberdef>
      <memberdef kind="function" id="d4/dfe/classsamchon_1_1example_1_1packer_1_1WrapperArray_1aa5f96dceae0a01376ab1001f038abf9f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void optimize</definition>
        <argsstring>()</argsstring>
        <name>optimize</name>
        <briefdescription>
<para>Optimize to retrieve the best solution. </para>        </briefdescription>
        <detaileddescription>
<para>Retrieve the best solution of packaging in level of <ref refid="d4/dfe/classsamchon_1_1example_1_1packer_1_1WrapperArray" kindref="compound">WrapperArray</ref>. </para><para>Shuffles sequence of reserved Product(s) by <ref refid="dd/d7b/classsamchon_1_1library_1_1FactorialGenerator" kindref="compound">samchon::library::FactorialGenerator</ref> and insert the reserved Products(s) following the sequence creating Wrapper(s) as needed. Between the sequences from FactorialGenerator, retrieve and determine the best solution. </para><para><simplesect kind="note"><para></para></simplesect>
Sequence of inserting <ref refid="df/d73/classsamchon_1_1example_1_1packer_1_1Product" kindref="compound">Product</ref> can affeact to numbers of Wrapper(s) to be used. </para><para>It&apos;s the reason why even <ref refid="d4/dfe/classsamchon_1_1example_1_1packer_1_1WrapperArray" kindref="compound">WrapperArray</ref> has the <ref refid="d4/dfe/classsamchon_1_1example_1_1packer_1_1WrapperArray_1aa5f96dceae0a01376ab1001f038abf9f" kindref="member">optimize()</ref> method. </para><para><simplesect kind="see"><para><ref refid="dd/d7b/classsamchon_1_1library_1_1FactorialGenerator" kindref="compound">samchon::library::FactorialGenerator</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/OneDrive/Project/Samchon/framework/cpp/samchon/examples/packer/WrapperArray.hpp" line="83" column="1" bodyfile="D:/OneDrive/Project/Samchon/framework/cpp/samchon/examples/packer/WrapperArray.cpp" bodystart="35" bodyend="74"/>
      </memberdef>
      <memberdef kind="function" id="d4/dfe/classsamchon_1_1example_1_1packer_1_1WrapperArray_1a53cb7f8d98234bd90072bf504f318301" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>auto</type>
        <definition>auto calcPrice</definition>
        <argsstring>() const  -&gt; int</argsstring>
        <name>calcPrice</name>
        <briefdescription>
<para>Calculate price of the Wrapper(s) </para>        </briefdescription>
        <detaileddescription>
<para>Calculate price of all wrapppers&apos;. The price does not contain inserted products&apos; </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/OneDrive/Project/Samchon/framework/cpp/samchon/examples/packer/WrapperArray.hpp" line="89" column="1" bodyfile="D:/OneDrive/Project/Samchon/framework/cpp/samchon/examples/packer/WrapperArray.cpp" bodystart="75" bodyend="78"/>
      </memberdef>
      <memberdef kind="function" id="d4/dfe/classsamchon_1_1example_1_1packer_1_1WrapperArray_1a22a175a3f828497e884c688f7a9aaadb" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>auto</type>
        <definition>auto toString</definition>
        <argsstring>() const  -&gt; std::string</argsstring>
        <name>toString</name>
        <briefdescription>
<para>Return a string represents Wrapper(s) of same type. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/OneDrive/Project/Samchon/framework/cpp/samchon/examples/packer/WrapperArray.hpp" line="97" column="1" bodyfile="D:/OneDrive/Project/Samchon/framework/cpp/samchon/examples/packer/WrapperArray.cpp" bodystart="83" bodyend="90"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>An array of wrapper with same category (name). </para>    </briefdescription>
    <detaileddescription>
<para><ref refid="d4/dfe/classsamchon_1_1example_1_1packer_1_1WrapperArray" kindref="compound">WrapperArray</ref> reserves Product(s) and generates enough number of Wrapper(s). </para><para><ref refid="d4/dfe/classsamchon_1_1example_1_1packer_1_1WrapperArray" kindref="compound">WrapperArray</ref> will retrieve the best arrange and packaging method for reserved Product(s). </para><para><image type="html" name="example_packer.png"></image>
 <image type="latex" name="example_packer.png"></image>
</para><para><simplesect kind="author"><para>Jeongho Nam </para></simplesect>
</para>    </detaileddescription>
    <collaborationgraph>
      <node id="2853">
        <label>Wrapper</label>
        <link refid="dc/d06/classsamchon_1_1example_1_1packer_1_1Wrapper"/>
        <childnode refid="2854" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2854">
        <label>Instance</label>
        <link refid="dc/d54/classsamchon_1_1example_1_1packer_1_1Instance"/>
      </node>
      <node id="2852">
        <label>WrapperArray</label>
        <link refid="d4/dfe/classsamchon_1_1example_1_1packer_1_1WrapperArray"/>
        <childnode refid="2853" relation="usage">
          <edgelabel>sample</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="D:/OneDrive/Project/Samchon/framework/cpp/samchon/examples/packer/WrapperArray.hpp" line="28" column="1" bodyfile="D:/OneDrive/Project/Samchon/framework/cpp/samchon/examples/packer/WrapperArray.hpp" bodystart="26" bodyend="98"/>
    <listofallmembers>
      <member refid="d4/dfe/classsamchon_1_1example_1_1packer_1_1WrapperArray_1a53cb7f8d98234bd90072bf504f318301" prot="public" virt="non-virtual"><scope>samchon::example::packer::WrapperArray</scope><name>calcPrice</name></member>
      <member refid="d4/dfe/classsamchon_1_1example_1_1packer_1_1WrapperArray_1aa5f96dceae0a01376ab1001f038abf9f" prot="public" virt="non-virtual"><scope>samchon::example::packer::WrapperArray</scope><name>optimize</name></member>
      <member refid="d4/dfe/classsamchon_1_1example_1_1packer_1_1WrapperArray_1a7c8f40e2d129fded5d08eae1741e8840" prot="private" virt="non-virtual"><scope>samchon::example::packer::WrapperArray</scope><name>reserved</name></member>
      <member refid="d4/dfe/classsamchon_1_1example_1_1packer_1_1WrapperArray_1aeaa4ca22b0db2d1121a70332693a4bda" prot="private" virt="non-virtual"><scope>samchon::example::packer::WrapperArray</scope><name>sample</name></member>
      <member refid="d4/dfe/classsamchon_1_1example_1_1packer_1_1WrapperArray_1a23650d0aeb3039551cfed3b455403e05" prot="private" virt="non-virtual"><scope>samchon::example::packer::WrapperArray</scope><name>super</name></member>
      <member refid="d4/dfe/classsamchon_1_1example_1_1packer_1_1WrapperArray_1a22a175a3f828497e884c688f7a9aaadb" prot="public" virt="non-virtual"><scope>samchon::example::packer::WrapperArray</scope><name>toString</name></member>
      <member refid="d4/dfe/classsamchon_1_1example_1_1packer_1_1WrapperArray_1a76bfeb339b591946879ad0292579b141" prot="public" virt="non-virtual"><scope>samchon::example::packer::WrapperArray</scope><name>tryInsert</name></member>
      <member refid="d4/dfe/classsamchon_1_1example_1_1packer_1_1WrapperArray_1a2c6a262c06b4f3f76fa01c151efc5be5" prot="public" virt="non-virtual"><scope>samchon::example::packer::WrapperArray</scope><name>WrapperArray</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
