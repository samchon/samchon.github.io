<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.10">
  <compounddef id="d4/deb/classsamchon_1_1protocol_1_1EntityGroup" kind="class" language="C++" prot="public" abstract="yes">
    <compoundname>samchon::protocol::EntityGroup</compoundname>
    <basecompoundref prot="public" virt="non-virtual">_Container</basecompoundref>
    <basecompoundref refid="d0/d3e/classsamchon_1_1protocol_1_1Entity" prot="public" virt="virtual">Entity</basecompoundref>
    <basecompoundref refid="d9/d4c/classsamchon_1_1protocol_1_1IEntityGroup" prot="public" virt="virtual">IEntityGroup</basecompoundref>
    <derivedcompoundref refid="dc/daa/classMemberArray" prot="public" virt="non-virtual">MemberArray</derivedcompoundref>
    <derivedcompoundref refid="d2/db1/classsamchon_1_1library_1_1FTFolder" prot="public" virt="non-virtual">FTFolder</derivedcompoundref>
    <derivedcompoundref refid="de/dfd/classsamchon_1_1namtree_1_1NTCriteria" prot="public" virt="virtual">NTCriteria</derivedcompoundref>
    <derivedcompoundref refid="db/d29/classsamchon_1_1namtree_1_1NTParameter" prot="public" virt="virtual">NTParameter</derivedcompoundref>
    <derivedcompoundref refid="de/d08/classsamchon_1_1namtree_1_1NTParameterArray" prot="public" virt="virtual">NTParameterArray</derivedcompoundref>
    <derivedcompoundref refid="df/d42/classsamchon_1_1protocol_1_1ExternalSystem" prot="public" virt="virtual">ExternalSystem</derivedcompoundref>
    <derivedcompoundref refid="d9/dc6/classsamchon_1_1protocol_1_1ExternalSystemArray" prot="public" virt="virtual">ExternalSystemArray</derivedcompoundref>
    <derivedcompoundref refid="d8/d82/classsamchon_1_1protocol_1_1Invoke" prot="public" virt="non-virtual">Invoke</derivedcompoundref>
    <derivedcompoundref refid="d1/d7b/classsamchon_1_1protocol_1_1InvokeHistoryArray" prot="public" virt="non-virtual">InvokeHistoryArray</derivedcompoundref>
    <derivedcompoundref refid="d8/d75/classsamchon_1_1protocol_1_1master_1_1DSInvokeHistoryList" prot="public" virt="non-virtual">DSInvokeHistoryList</derivedcompoundref>
    <includes refid="d1/d61/EntityGroup_8hpp" local="no">EntityGroup.hpp</includes>
    <templateparamlist>
      <param>
        <type>typename</type>
        <declname>_Container</declname>
        <defname>_Container</defname>
      </param>
      <param>
        <type>typename</type>
        <declname>_ETy</declname>
        <defname>_ETy</defname>
        <defval><ref refid="d0/d3e/classsamchon_1_1protocol_1_1Entity" kindref="compound">Entity</ref></defval>
      </param>
      <param>
        <type>typename</type>
        <declname>_Ty</declname>
        <defname>_Ty</defname>
        <defval>_Container::value_type</defval>
      </param>
    </templateparamlist>
      <sectiondef kind="protected-type">
      <memberdef kind="typedef" id="d4/deb/classsamchon_1_1protocol_1_1EntityGroup_1aac5cb7c267e3cf067657ca5a73363728" prot="protected" static="no">
        <type>_Container</type>
        <definition>typedef _Container container_type</definition>
        <argsstring></argsstring>
        <name>container_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/OneDrive/Project/Samchon/framework/cpp/samchon/protocol/EntityGroup.hpp" line="60" column="1" bodyfile="D:/OneDrive/Project/Samchon/framework/cpp/samchon/protocol/EntityGroup.hpp" bodystart="60" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="d4/deb/classsamchon_1_1protocol_1_1EntityGroup_1aa03d6edd1546642516652a481c0bf8db" prot="protected" static="no">
        <type>_Ty</type>
        <definition>typedef _Ty value_type</definition>
        <argsstring></argsstring>
        <name>value_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/OneDrive/Project/Samchon/framework/cpp/samchon/protocol/EntityGroup.hpp" line="61" column="1" bodyfile="D:/OneDrive/Project/Samchon/framework/cpp/samchon/protocol/EntityGroup.hpp" bodystart="61" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="d4/deb/classsamchon_1_1protocol_1_1EntityGroup_1a8e82af015377749a76c1839466abb676" prot="protected" static="no">
        <type>_ETy</type>
        <definition>typedef _ETy entity_type</definition>
        <argsstring></argsstring>
        <name>entity_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/OneDrive/Project/Samchon/framework/cpp/samchon/protocol/EntityGroup.hpp" line="62" column="1" bodyfile="D:/OneDrive/Project/Samchon/framework/cpp/samchon/protocol/EntityGroup.hpp" bodystart="62" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="d4/deb/classsamchon_1_1protocol_1_1EntityGroup_1a14f6ca078bbeb51a6f6bc153f7384a7c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>EntityGroup</definition>
        <argsstring>()</argsstring>
        <name>EntityGroup</name>
        <briefdescription>
<para>Default Constructor. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/OneDrive/Project/Samchon/framework/cpp/samchon/protocol/EntityGroup.hpp" line="71" column="1" bodyfile="D:/OneDrive/Project/Samchon/framework/cpp/samchon/protocol/EntityGroup.hpp" bodystart="71" bodyend="75"/>
      </memberdef>
      <memberdef kind="function" id="d4/deb/classsamchon_1_1protocol_1_1EntityGroup_1a0dd6821308dca7395965242148146aae" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>virtual ~EntityGroup</definition>
        <argsstring>()=default</argsstring>
        <name>~EntityGroup</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/OneDrive/Project/Samchon/framework/cpp/samchon/protocol/EntityGroup.hpp" line="76" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d4/deb/classsamchon_1_1protocol_1_1EntityGroup_1a49bad12c4913a280d0249479ee08edc2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void construct</definition>
        <argsstring>(std::shared_ptr&lt; library::XML &gt; xml)</argsstring>
        <name>construct</name>
        <reimplements refid="d0/d3e/classsamchon_1_1protocol_1_1Entity_1ac1489c595f4d9e9ceb6fb91463ae195c">construct</reimplements>
        <reimplementedby refid="d7/da8/classsamchon_1_1protocol_1_1master_1_1DistributedServer_1a4ca1bd41b274e7cc42e80b90de4794bc">construct</reimplementedby>
        <reimplementedby refid="d1/da1/classsamchon_1_1protocol_1_1master_1_1ParallelServer_1a4ca1bd41b274e7cc42e80b90de4794bc">construct</reimplementedby>
        <reimplementedby refid="d3/db6/classsamchon_1_1protocol_1_1master_1_1DistributedClientArray_1a4ca1bd41b274e7cc42e80b90de4794bc">construct</reimplementedby>
        <reimplementedby refid="d4/d53/classsamchon_1_1protocol_1_1master_1_1ParallelClientArrayMediator_1a4ca1bd41b274e7cc42e80b90de4794bc">construct</reimplementedby>
        <reimplementedby refid="d9/ddf/classsamchon_1_1protocol_1_1master_1_1DistributedClientArrayMediator_1a4ca1bd41b274e7cc42e80b90de4794bc">construct</reimplementedby>
        <reimplementedby refid="df/d4a/classsamchon_1_1protocol_1_1ExternalServer_1a4c4b7d9441b10a734e8ce75e67d0375c">construct</reimplementedby>
        <reimplementedby refid="d8/d47/classsamchon_1_1protocol_1_1ExternalClientArray_1a4c4b7d9441b10a734e8ce75e67d0375c">construct</reimplementedby>
        <reimplementedby refid="db/d29/classsamchon_1_1namtree_1_1NTParameter_1a4c4b7d9441b10a734e8ce75e67d0375c">construct</reimplementedby>
        <reimplementedby refid="d3/d18/classsamchon_1_1protocol_1_1master_1_1ParallelSystemArrayMediator_1a4ca1bd41b274e7cc42e80b90de4794bc">construct</reimplementedby>
        <reimplementedby refid="dc/d8b/classsamchon_1_1protocol_1_1master_1_1DistributedSystemArrayMediator_1a4ca1bd41b274e7cc42e80b90de4794bc">construct</reimplementedby>
        <reimplementedby refid="d3/d88/classsamchon_1_1protocol_1_1master_1_1DistributedSystemArray_1a4ca1bd41b274e7cc42e80b90de4794bc">construct</reimplementedby>
        <reimplementedby refid="d8/d82/classsamchon_1_1protocol_1_1Invoke_1a4c4b7d9441b10a734e8ce75e67d0375c">construct</reimplementedby>
        <reimplementedby refid="d9/d6b/classsamchon_1_1protocol_1_1master_1_1ParallelSystem_1a4c4b7d9441b10a734e8ce75e67d0375c">construct</reimplementedby>
        <reimplementedby refid="df/d42/classsamchon_1_1protocol_1_1ExternalSystem_1a4c4b7d9441b10a734e8ce75e67d0375c">construct</reimplementedby>
        <reimplementedby refid="de/dfd/classsamchon_1_1namtree_1_1NTCriteria_1a4c4b7d9441b10a734e8ce75e67d0375c">construct</reimplementedby>
        <reimplementedby refid="db/d2d/classsamchon_1_1protocol_1_1master_1_1DistributedSystem_1a4ca1bd41b274e7cc42e80b90de4794bc">construct</reimplementedby>
        <param>
          <type>std::shared_ptr&lt; <ref refid="d5/d37/classsamchon_1_1library_1_1XML" kindref="compound">library::XML</ref> &gt;</type>
          <declname>xml</declname>
        </param>
        <briefdescription>
<para>Construct data of the <ref refid="d0/d3e/classsamchon_1_1protocol_1_1Entity" kindref="compound">Entity</ref> from an XML object. </para>        </briefdescription>
        <detaileddescription>
<para>Constructs the <ref refid="d4/deb/classsamchon_1_1protocol_1_1EntityGroup" kindref="compound">EntityGroup</ref>&apos;s own member variables only from the input XML object. </para><para>Do not consider about constructing children <ref refid="d0/d3e/classsamchon_1_1protocol_1_1Entity" kindref="compound">Entity</ref> objects&apos; data in <ref refid="d4/deb/classsamchon_1_1protocol_1_1EntityGroup_1a49bad12c4913a280d0249479ee08edc2" kindref="member">EntityGroup::construct()</ref>. Those children <ref refid="d0/d3e/classsamchon_1_1protocol_1_1Entity" kindref="compound">Entity</ref> objects&apos; data will constructed by their own <ref refid="d4/deb/classsamchon_1_1protocol_1_1EntityGroup_1a49bad12c4913a280d0249479ee08edc2" kindref="member">construct()</ref> method. Even insertion of XML objects representing children are done by abstract method of <ref refid="d4/deb/classsamchon_1_1protocol_1_1EntityGroup_1a30dee0fe2044f2f88579935cc10fc753" kindref="member">EntityGroup::toXML()</ref>. </para><para>Constructs only data of <ref refid="d4/deb/classsamchon_1_1protocol_1_1EntityGroup" kindref="compound">EntityGroup</ref>&apos;s own. </para><para><simplesect kind="par"><title>[Inherited]</title><para>Construct data of the <ref refid="d0/d3e/classsamchon_1_1protocol_1_1Entity" kindref="compound">Entity</ref> from an XML object. </para></simplesect>
Overrides the <ref refid="d4/deb/classsamchon_1_1protocol_1_1EntityGroup_1a49bad12c4913a280d0249479ee08edc2" kindref="member">construct()</ref> method and fetch data of member variables from the XML. </para><para>By recommended guidance, data representing member variables are contained in properties of the put XML object. </para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>xml</parametername>
</parameternamelist>
<parameterdescription>
<para>An xml used to construct data of entity </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/OneDrive/Project/Samchon/framework/cpp/samchon/protocol/EntityGroup.hpp" line="92" column="1" bodyfile="D:/OneDrive/Project/Samchon/framework/cpp/samchon/protocol/EntityGroup.hpp" bodystart="92" bodyend="118"/>
      </memberdef>
      <memberdef kind="function" id="d4/deb/classsamchon_1_1protocol_1_1EntityGroup_1a531cae9e9c8b395f8cde3f2ca243cc79" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>auto</type>
        <definition>auto has</definition>
        <argsstring>(const std::string &amp;key) const  -&gt; bool</argsstring>
        <name>has</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>key</declname>
        </param>
        <briefdescription>
<para>Indicates whether a container has an object having the specified identifier. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>key</parametername>
</parameternamelist>
<parameterdescription>
<para>An identifier of an <ref refid="d0/d3e/classsamchon_1_1protocol_1_1Entity" kindref="compound">Entity</ref> </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>If there&apos;s the object then true, otherwise false </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/OneDrive/Project/Samchon/framework/cpp/samchon/protocol/EntityGroup.hpp" line="143" column="1" bodyfile="D:/OneDrive/Project/Samchon/framework/cpp/samchon/protocol/EntityGroup.hpp" bodystart="143" bodyend="150"/>
      </memberdef>
      <memberdef kind="function" id="d4/deb/classsamchon_1_1protocol_1_1EntityGroup_1af318f1e62268b7e178fdc2a9669444b8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>auto</type>
        <definition>auto get</definition>
        <argsstring>(const std::string &amp;key) -&gt; value_type &amp;</argsstring>
        <name>get</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>key</declname>
        </param>
        <briefdescription>
<para>Access the element by specified identifier(key). </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>key</parametername>
</parameternamelist>
<parameterdescription>
<para>the identifier of the element wants to access </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The element having the key, or throw exception if there is none. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/OneDrive/Project/Samchon/framework/cpp/samchon/protocol/EntityGroup.hpp" line="158" column="1" bodyfile="D:/OneDrive/Project/Samchon/framework/cpp/samchon/protocol/EntityGroup.hpp" bodystart="158" bodyend="165"/>
      </memberdef>
      <memberdef kind="function" id="d4/deb/classsamchon_1_1protocol_1_1EntityGroup_1af5c2fb617197f93e98ec6c4b547d9bdd" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>auto</type>
        <definition>auto get</definition>
        <argsstring>(const std::string &amp;key) const  -&gt; const value_type &amp;</argsstring>
        <name>get</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>key</declname>
        </param>
        <briefdescription>
<para>Access the const element by specified identifier(key). </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>key</parametername>
</parameternamelist>
<parameterdescription>
<para>the identifier of the element wants to access </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The const element having the key, or throw exception if there is none. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/OneDrive/Project/Samchon/framework/cpp/samchon/protocol/EntityGroup.hpp" line="173" column="1" bodyfile="D:/OneDrive/Project/Samchon/framework/cpp/samchon/protocol/EntityGroup.hpp" bodystart="173" bodyend="180"/>
      </memberdef>
      <memberdef kind="function" id="d4/deb/classsamchon_1_1protocol_1_1EntityGroup_1a30dee0fe2044f2f88579935cc10fc753" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>auto</type>
        <definition>virtual auto toXML</definition>
        <argsstring>() const  -&gt; std::shared_ptr&lt; library::XML &gt;</argsstring>
        <name>toXML</name>
        <reimplements refid="d0/d3e/classsamchon_1_1protocol_1_1Entity_1ae1c1e56eb0b3e41f12170628475a7d2a">toXML</reimplements>
        <reimplementedby refid="d7/da8/classsamchon_1_1protocol_1_1master_1_1DistributedServer_1aad9fbd4de53a3243bd213e7158ed2e48">toXML</reimplementedby>
        <reimplementedby refid="d1/da1/classsamchon_1_1protocol_1_1master_1_1ParallelServer_1aad9fbd4de53a3243bd213e7158ed2e48">toXML</reimplementedby>
        <reimplementedby refid="d3/db6/classsamchon_1_1protocol_1_1master_1_1DistributedClientArray_1aad9fbd4de53a3243bd213e7158ed2e48">toXML</reimplementedby>
        <reimplementedby refid="d4/d53/classsamchon_1_1protocol_1_1master_1_1ParallelClientArrayMediator_1aad9fbd4de53a3243bd213e7158ed2e48">toXML</reimplementedby>
        <reimplementedby refid="d9/ddf/classsamchon_1_1protocol_1_1master_1_1DistributedClientArrayMediator_1aad9fbd4de53a3243bd213e7158ed2e48">toXML</reimplementedby>
        <reimplementedby refid="d2/db1/classsamchon_1_1library_1_1FTFolder_1ac0248fcb25b3fa4f463d545005fdcbf3">toXML</reimplementedby>
        <reimplementedby refid="df/d4a/classsamchon_1_1protocol_1_1ExternalServer_1ac0248fcb25b3fa4f463d545005fdcbf3">toXML</reimplementedby>
        <reimplementedby refid="d8/d47/classsamchon_1_1protocol_1_1ExternalClientArray_1ac0248fcb25b3fa4f463d545005fdcbf3">toXML</reimplementedby>
        <reimplementedby refid="d3/d18/classsamchon_1_1protocol_1_1master_1_1ParallelSystemArrayMediator_1aad9fbd4de53a3243bd213e7158ed2e48">toXML</reimplementedby>
        <reimplementedby refid="dc/d8b/classsamchon_1_1protocol_1_1master_1_1DistributedSystemArrayMediator_1aad9fbd4de53a3243bd213e7158ed2e48">toXML</reimplementedby>
        <reimplementedby refid="db/d29/classsamchon_1_1namtree_1_1NTParameter_1ac0248fcb25b3fa4f463d545005fdcbf3">toXML</reimplementedby>
        <reimplementedby refid="d9/d6b/classsamchon_1_1protocol_1_1master_1_1ParallelSystem_1ac0248fcb25b3fa4f463d545005fdcbf3">toXML</reimplementedby>
        <reimplementedby refid="d3/d88/classsamchon_1_1protocol_1_1master_1_1DistributedSystemArray_1aad9fbd4de53a3243bd213e7158ed2e48">toXML</reimplementedby>
        <reimplementedby refid="df/d42/classsamchon_1_1protocol_1_1ExternalSystem_1ac0248fcb25b3fa4f463d545005fdcbf3">toXML</reimplementedby>
        <reimplementedby refid="de/dfd/classsamchon_1_1namtree_1_1NTCriteria_1ac0248fcb25b3fa4f463d545005fdcbf3">toXML</reimplementedby>
        <reimplementedby refid="db/d2d/classsamchon_1_1protocol_1_1master_1_1DistributedSystem_1aad9fbd4de53a3243bd213e7158ed2e48">toXML</reimplementedby>
        <reimplementedby refid="d8/d82/classsamchon_1_1protocol_1_1Invoke_1ac0248fcb25b3fa4f463d545005fdcbf3">toXML</reimplementedby>
        <briefdescription>
<para>Get an XML object represents the <ref refid="d4/deb/classsamchon_1_1protocol_1_1EntityGroup" kindref="compound">EntityGroup</ref>. </para>        </briefdescription>
        <detaileddescription>
<para>Archives the <ref refid="d4/deb/classsamchon_1_1protocol_1_1EntityGroup" kindref="compound">EntityGroup</ref>&apos;s own member variables only to the returned XML object. </para><para>Do not consider about archiving children <ref refid="d0/d3e/classsamchon_1_1protocol_1_1Entity" kindref="compound">Entity</ref> objects&apos; data in <ref refid="d4/deb/classsamchon_1_1protocol_1_1EntityGroup_1a30dee0fe2044f2f88579935cc10fc753" kindref="member">EntityGroup::toXML()</ref>. Those children <ref refid="d0/d3e/classsamchon_1_1protocol_1_1Entity" kindref="compound">Entity</ref> objects will converted to XML object by their own <ref refid="d4/deb/classsamchon_1_1protocol_1_1EntityGroup_1a30dee0fe2044f2f88579935cc10fc753" kindref="member">toXML()</ref> method. The insertion of XML objects representing children are done by abstract method of <ref refid="d4/deb/classsamchon_1_1protocol_1_1EntityGroup_1a30dee0fe2044f2f88579935cc10fc753" kindref="member">EntityGroup::toXML()</ref>. </para><para>Archives only data of <ref refid="d4/deb/classsamchon_1_1protocol_1_1EntityGroup" kindref="compound">EntityGroup</ref>&apos;s own. </para><para><simplesect kind="par"><title>[Inherited]</title><para>Get an XML object represents the <ref refid="d0/d3e/classsamchon_1_1protocol_1_1Entity" kindref="compound">Entity</ref>. </para></simplesect>
Returns an XML object that can represents the <ref refid="d0/d3e/classsamchon_1_1protocol_1_1Entity" kindref="compound">Entity</ref> containing member variables into properties. </para><para>A member variable (not object, but atomic value like number, string or date) is categorized as a property within the framework of entity side. Thus, when overriding a <ref refid="d4/deb/classsamchon_1_1protocol_1_1EntityGroup_1a30dee0fe2044f2f88579935cc10fc753" kindref="member">toXML()</ref> method and archiving member variables to an XML object to return, puts each variable to be a property belongs to only an XML object. </para><para>Don&apos;t archive the member variable of atomic value to XML::value causing enormouse creation of XML objects to number of member variables. An <ref refid="d0/d3e/classsamchon_1_1protocol_1_1Entity" kindref="compound">Entity</ref> must be represented by only an XML instance (tag). </para><para><table rows="2" cols="2"><row>
<entry thead="yes"><para>Standard Usage  </para></entry><entry thead="yes"><para>Non-standard usage abusing value   </para></entry></row>
<row>
<entry thead="no"><para>&lt;memberList&gt;<linebreak/>
 <nonbreakablespace/><nonbreakablespace/><nonbreakablespace/><nonbreakablespace/> &lt;member id=&apos;jhnam88&apos; name=&apos;Jeongho+Nam&apos; birthdate=&apos;1988-03-11&apos; /&gt;<linebreak/>
 <nonbreakablespace/><nonbreakablespace/><nonbreakablespace/><nonbreakablespace/> &lt;member id=&apos;master&apos; name=&apos;Administartor&apos; birthdate=&apos;2011-07-28&apos; /&gt;<linebreak/>
 &lt;/memberList&gt;  </para></entry><entry thead="no"><para>&lt;member&gt;<linebreak/>
 <nonbreakablespace/><nonbreakablespace/><nonbreakablespace/><nonbreakablespace/> &lt;id&gt;jhnam88&lt;/id&gt;<linebreak/>
 <nonbreakablespace/><nonbreakablespace/><nonbreakablespace/><nonbreakablespace/> &lt;name&gt;Jeongho+Nam&lt;/name&gt;<linebreak/>
 <nonbreakablespace/><nonbreakablespace/><nonbreakablespace/><nonbreakablespace/> &lt;birthdate&gt;1988-03-11&lt;/birthdate&gt;<linebreak/>
 &lt;/member&gt;   </para></entry></row>
</table>
</para><para><simplesect kind="return"><para>An XML object representing the <ref refid="d0/d3e/classsamchon_1_1protocol_1_1Entity" kindref="compound">Entity</ref>. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/OneDrive/Project/Samchon/framework/cpp/samchon/protocol/EntityGroup.hpp" line="197" column="1" bodyfile="D:/OneDrive/Project/Samchon/framework/cpp/samchon/protocol/EntityGroup.hpp" bodystart="197" bodyend="209"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="d4/deb/classsamchon_1_1protocol_1_1EntityGroup_1a554e0798083a38327f360c61a1ca716b" prot="protected" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>auto</type>
        <definition>virtual auto createChild</definition>
        <argsstring>(std::shared_ptr&lt; library::XML &gt;) -&gt; entity_type *=0</argsstring>
        <name>createChild</name>
        <reimplementedby refid="d1/d7b/classsamchon_1_1protocol_1_1InvokeHistoryArray_1a53928f7c99f6beebe89c795503f06e35">createChild</reimplementedby>
        <reimplementedby refid="df/d50/classsamchon_1_1protocol_1_1master_1_1PRInvokeHistoryArray_1a53928f7c99f6beebe89c795503f06e35">createChild</reimplementedby>
        <reimplementedby refid="d8/d75/classsamchon_1_1protocol_1_1master_1_1DSInvokeHistoryList_1a3c7c9be5c6c562890b632c1bed27f5bf">createChild</reimplementedby>
        <reimplementedby refid="de/d08/classsamchon_1_1namtree_1_1NTParameterArray_1a35712e6739858c75750ea9e2ff4d3939">createChild</reimplementedby>
        <reimplementedby refid="db/d29/classsamchon_1_1namtree_1_1NTParameter_1a70deea32ec72f4fd5e72ac6ba79f96e5">createChild</reimplementedby>
        <reimplementedby refid="d8/d82/classsamchon_1_1protocol_1_1Invoke_1a834844ce6d217133a92a0da05bf80ed3">createChild</reimplementedby>
        <reimplementedby refid="de/dfd/classsamchon_1_1namtree_1_1NTCriteria_1a64ca473096ff67fd1d6cb4440267bda0">createChild</reimplementedby>
        <param>
          <type>std::shared_ptr&lt; <ref refid="d5/d37/classsamchon_1_1library_1_1XML" kindref="compound">library::XML</ref> &gt;</type>
        </param>
        <briefdescription>
<para>Factory method of a child <ref refid="d0/d3e/classsamchon_1_1protocol_1_1Entity" kindref="compound">Entity</ref>. </para>        </briefdescription>
        <detaileddescription>
<para><ref refid="d4/deb/classsamchon_1_1protocol_1_1EntityGroup_1a554e0798083a38327f360c61a1ca716b" kindref="member">EntityGroup::createChild()</ref> is a factory method creating a new child <ref refid="d0/d3e/classsamchon_1_1protocol_1_1Entity" kindref="compound">Entity</ref> which is belonged to the <ref refid="d4/deb/classsamchon_1_1protocol_1_1EntityGroup" kindref="compound">EntityGroup</ref>. This method is called by <ref refid="d4/deb/classsamchon_1_1protocol_1_1EntityGroup_1a49bad12c4913a280d0249479ee08edc2" kindref="member">EntityGroup::construct()</ref>. The children construction methods <ref refid="d0/d3e/classsamchon_1_1protocol_1_1Entity_1ac1489c595f4d9e9ceb6fb91463ae195c" kindref="member">Entity::construct()</ref> will be called by abstract method of the <ref refid="d4/deb/classsamchon_1_1protocol_1_1EntityGroup_1a49bad12c4913a280d0249479ee08edc2" kindref="member">EntityGroup::construct()</ref>. </para><para><simplesect kind="return"><para>A new child <ref refid="d0/d3e/classsamchon_1_1protocol_1_1Entity" kindref="compound">Entity</ref> belongs to <ref refid="d4/deb/classsamchon_1_1protocol_1_1EntityGroup" kindref="compound">EntityGroup</ref>. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/OneDrive/Project/Samchon/framework/cpp/samchon/protocol/EntityGroup.hpp" line="131" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>An <ref refid="d0/d3e/classsamchon_1_1protocol_1_1Entity" kindref="compound">Entity</ref> and a container of children <ref refid="d0/d3e/classsamchon_1_1protocol_1_1Entity" kindref="compound">Entity</ref> objects. </para>    </briefdescription>
    <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>_Container</parametername>
</parameternamelist>
<parameterdescription>
<para>A type of container containing children entity objects. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>_Ety</parametername>
</parameternamelist>
<parameterdescription>
<para>A type of children entity. It must be a class derived from an <ref refid="d0/d3e/classsamchon_1_1protocol_1_1Entity" kindref="compound">Entity</ref> class, or <ref refid="d0/d3e/classsamchon_1_1protocol_1_1Entity" kindref="compound">Entity</ref> class itself. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>_Ty</parametername>
</parameternamelist>
<parameterdescription>
<para>A type of children element of _Container. Using default template parameter is recommended.</para></parameterdescription>
</parameteritem>
</parameterlist>
</para><para><ref refid="d4/deb/classsamchon_1_1protocol_1_1EntityGroup" kindref="compound">EntityGroup</ref> is a template class for containinig children <ref refid="d0/d3e/classsamchon_1_1protocol_1_1Entity" kindref="compound">Entity</ref> objects, and also another type of an <ref refid="d0/d3e/classsamchon_1_1protocol_1_1Entity" kindref="compound">Entity</ref>, too. You can realize hierarchical relationship. Although some entities have complicated hierarchical relationship, you can deduct a optimal solution easily with <ref refid="d4/deb/classsamchon_1_1protocol_1_1EntityGroup" kindref="compound">EntityGroup</ref> and <ref refid="d0/d3e/classsamchon_1_1protocol_1_1Entity" kindref="compound">Entity</ref>. </para><para>If an entity has some subordinate entities of same type, they are in &quot;Composite relationship&quot;. Make the entity to be EmntityGroup and subordinate entities to be children of the entity. When those relationships are continued, continue to create classes dervied from <ref refid="d4/deb/classsamchon_1_1protocol_1_1EntityGroup" kindref="compound">EntityGroup</ref>. When those relationshiop meets a terminal node, then make the terminal node to be an <ref refid="d0/d3e/classsamchon_1_1protocol_1_1Entity" kindref="compound">Entity</ref>. </para><para><image type="html" name="example_inspect.png"></image>
 <image type="latex" name="example_inspect.png"></image>
</para><para><ref refid="d4/deb/classsamchon_1_1protocol_1_1EntityGroup" kindref="compound">EntityGroup</ref> is an <ref refid="d0/d3e/classsamchon_1_1protocol_1_1Entity" kindref="compound">Entity</ref>, and a container of children <ref refid="d0/d3e/classsamchon_1_1protocol_1_1Entity" kindref="compound">Entity</ref> objects at the same time. If children type, of a class derived from an <ref refid="d4/deb/classsamchon_1_1protocol_1_1EntityGroup" kindref="compound">EntityGroup</ref>, is itself, you can realize hierarchical and recursive relationship. The relationship is called as &quot;Composite pattern&quot;. </para><para><itemizedlist>
<listitem><para>FTFolder extends FTInstance and SharedEntityArray&lt;FTInstance&gt; </para></listitem>
<listitem><para>NTCriteria extends SharedEntityArray&lt;NTCriteria&gt;</para></listitem>
</itemizedlist>
<simplesect kind="note"><para></para></simplesect>
As a freelancer developer and architect I am, I even design DB I/O to follow the format representing <ref refid="d0/d3e/classsamchon_1_1protocol_1_1Entity" kindref="compound">Entity</ref> and <ref refid="d4/deb/classsamchon_1_1protocol_1_1EntityGroup" kindref="compound">EntityGroup</ref> by XML. Below T-SQL script also follows the standard format of expressing <ref refid="d0/d3e/classsamchon_1_1protocol_1_1Entity" kindref="compound">Entity</ref> with XML by procedure and &quot;FOR XML AUTO&quot; statement. </para><para><programlisting><codeline><highlight class="normal">SET<sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>ANSI_NULLS,<sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>QUOTED_IDENTIFIER,<sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>CONCAT_NULL_YIELDS_NULL,<sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>ANSI_WARNINGS,<sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>ANSI_PADDING<sp/></highlight></codeline>
<codeline><highlight class="normal">ON;</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">USE<sp/>OraQ;</highlight></codeline>
<codeline><highlight class="normal">IF<sp/>OBJECT_ID(&apos;v_studyStatus&apos;)<sp/>IS<sp/>NOT<sp/>NULL<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DROP<sp/>VIEW<sp/>v_studyStatus;</highlight></codeline>
<codeline><highlight class="normal">IF<sp/>OBJECT_ID(&apos;v_nonDicomFileStatus&apos;)<sp/>IS<sp/>NOT<sp/>NULL<sp/><sp/><sp/><sp/>DROP<sp/>VIEW<sp/>v_nonDicomFileStatus;</highlight></codeline>
<codeline><highlight class="normal">IF<sp/>OBJECT_ID(&apos;v_candidateStudy&apos;)<sp/>IS<sp/>NOT<sp/>NULL<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DROP<sp/>VIEW<sp/>v_candidateStudy;</highlight></codeline>
<codeline><highlight class="normal">IF<sp/>OBJECT_ID(&apos;v_candidateFile&apos;)<sp/>IS<sp/>NOT<sp/>NULL<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DROP<sp/>VIEW<sp/>v_candidateFile;</highlight></codeline>
<codeline><highlight class="normal">IF<sp/>OBJECT_ID(&apos;goCandidateInspectList&apos;)<sp/>IS<sp/>NOT<sp/>NULL<sp/><sp/>DROP<sp/>PROCEDURE<sp/>goCandidateInspectList;</highlight></codeline>
<codeline><highlight class="normal">GO</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">CREATE<sp/>VIEW<sp/>v_studyStatus</highlight></codeline>
<codeline><highlight class="normal">AS</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>WITH<sp/>cte<sp/>AS</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>(</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SELECT<sp/>S.studyUID<sp/>uid,<sp/>S.type<sp/>type,<sp/>ROW_NUMBER()<sp/>OVER<sp/>(PARTITION<sp/>BY<sp/>S.studyUID<sp/>ORDER<sp/>BY<sp/>H.datetime<sp/>DESC)<sp/>no</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FROM<sp/>History.history<sp/>H,<sp/>History.study<sp/>S</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>WHERE</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>H.uid<sp/>=<sp/>S.uid<sp/>AND<sp/>type<sp/>&lt;&gt;<sp/>1</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>SELECT<sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>A.uid,<sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CASE<sp/>WHEN<sp/>B.type<sp/>IS<sp/>NULL<sp/>THEN</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>A.type</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ELSE<sp/>1</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>END<sp/>status</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>FROM</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>(</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SELECT<sp/>uid,<sp/>type</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FROM<sp/>cte</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>WHERE<sp/>no<sp/>=<sp/>1</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>)<sp/>A<sp/>LEFT<sp/>OUTER<sp/>JOIN</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>(</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SELECT<sp/>studyUID<sp/>uid,<sp/>1<sp/>type</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FROM<sp/>History.study</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GROUP<sp/>BY<sp/>studyUID</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>HAVING<sp/>MAX(type)<sp/>=<sp/>1</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>)<sp/>B<sp/>ON<sp/>A.uid<sp/>=<sp/>B.uid</highlight></codeline>
<codeline><highlight class="normal">GO</highlight></codeline>
<codeline><highlight class="normal">CREATE<sp/>VIEW<sp/>v_nonDicomFileStatus</highlight></codeline>
<codeline><highlight class="normal">AS</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>WITH<sp/>cte<sp/>AS</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>(</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SELECT</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>F.fileUID<sp/>uid,<sp/>F.type<sp/>type,<sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ROW_NUMBER()<sp/>OVER<sp/>(PARTITION<sp/>BY<sp/>F.fileUID<sp/>ORDER<sp/>BY<sp/>H.datetime<sp/>DESC)<sp/>no</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FROM<sp/>History.history<sp/>H,<sp/>History.nonDicomFile<sp/>F</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>WHERE</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>H.uid<sp/>=<sp/>F.uid<sp/>AND<sp/>type<sp/>&lt;&gt;<sp/>1</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>SELECT<sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>A.uid,<sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CASE<sp/>WHEN<sp/>B.type<sp/>IS<sp/>NULL<sp/>THEN</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>A.type</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ELSE<sp/>1</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>END<sp/>status</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>FROM</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>(</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SELECT<sp/>uid,<sp/>type</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FROM<sp/>cte</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>WHERE<sp/>no<sp/>=<sp/>1</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>)<sp/>A<sp/>LEFT<sp/>OUTER<sp/>JOIN</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>(</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SELECT<sp/>fileUID<sp/>uid,<sp/>1<sp/>type</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FROM<sp/>History.nonDicomFile</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GROUP<sp/>BY<sp/>fileUID</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>HAVING<sp/>MAX(type)<sp/>=<sp/>1</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>)<sp/>B<sp/>ON<sp/>A.uid<sp/>=<sp/>B.uid</highlight></codeline>
<codeline><highlight class="normal">GO</highlight></codeline>
<codeline><highlight class="normal">CREATE<sp/>VIEW<sp/>v_candidateStudy</highlight></codeline>
<codeline><highlight class="normal">AS</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>SELECT<sp/>DISTINCT</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>P.id<sp/>patientID,<sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>P.name<sp/>patientName,<sp/>P.gender<sp/>patientGender,<sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CAST(P.birthdate<sp/>AS<sp/>DATE)<sp/>patientBirthdate,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>S.uid,<sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>S.description,<sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CONVERT(VARCHAR,<sp/>CAST(S.datetime<sp/>AS<sp/>DATETIME),<sp/>120)<sp/>AS<sp/>datetime,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>H.status</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>FROM</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Hospital.patient<sp/>P,<sp/>Inspect.media<sp/>M,<sp/>Inspect.mediaStudyPair<sp/>A,<sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Inspect.study<sp/>S,<sp/>v_studyStatus<sp/>H</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>WHERE</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>P.id<sp/>=<sp/>M.patientID<sp/>AND<sp/>M.uid<sp/>=<sp/>A.mediaUID<sp/>AND<sp/>A.studyUID<sp/>=<sp/>S.uid<sp/>AND<sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>S.uid<sp/>=<sp/>H.uid</highlight></codeline>
<codeline><highlight class="normal">GO</highlight></codeline>
<codeline><highlight class="normal">CREATE<sp/>VIEW<sp/>v_candidateFile</highlight></codeline>
<codeline><highlight class="normal">AS</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>SELECT<sp/>DISTINCT</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>P.id<sp/>patientID,<sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>P.name<sp/>patientName,<sp/>P.gender<sp/>patientGender,<sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CAST(P.birthdate<sp/>AS<sp/>DATE)<sp/>patientBirthdate,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>M.uid<sp/>mediaUID,<sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>F.uid,<sp/>F.name,<sp/>F.extension,<sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CONVERT(VARCHAR,<sp/>CAST(F.datetime<sp/>AS<sp/>DATETIME),<sp/>120)<sp/>AS<sp/>datetime,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>H.status</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>FROM<sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Hospital.patient<sp/>P,<sp/>Inspect.media<sp/>M,<sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Inspect.nonDicomFile<sp/>F,<sp/>v_nonDicomFileStatus<sp/>H</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>WHERE<sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>P.id<sp/>=<sp/>M.patientID<sp/>AND<sp/>M.uid<sp/>=<sp/>F.mediaUID<sp/>AND<sp/>F.uid<sp/>=<sp/>H.uid</highlight></codeline>
<codeline><highlight class="normal">GO</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">CREATE<sp/>PROCEDURE<sp/>goCandidateInspectList</highlight></codeline>
<codeline><highlight class="normal">AS</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>DECLARE<sp/>@xml<sp/>XML<sp/>=</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>(</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SELECT<sp/>*</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FROM</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SELECT<sp/>N&apos;candidate&apos;<sp/>service</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)<sp/>inspect</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FOR<sp/>XML<sp/>AUTO</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>DECLARE<sp/>@studyList<sp/>XML<sp/>=</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>(</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SELECT<sp/>study.*,<sp/>series.*,<sp/>image.*</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FROM</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v_candidateStudy<sp/>study<sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LEFT<sp/>OUTER<sp/>JOIN<sp/>Inspect.series<sp/>series<sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ON<sp/>study.uid<sp/>=<sp/>series.studyUID</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LEFT<sp/>OUTER<sp/>JOIN<sp/>Inspect.image<sp/>image</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ON<sp/>series.uid<sp/>=<sp/>image.seriesUID</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FOR<sp/>XML<sp/>AUTO,<sp/>ROOT(N&apos;studyList&apos;)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>DECLARE<sp/>@fileList<sp/>XML<sp/>=</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>(</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SELECT<sp/>*<sp/>FROM<sp/>v_candidateFile</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FOR<sp/>XML<sp/>RAW(N&apos;file&apos;),<sp/>ROOT(N&apos;fileList&apos;)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>IF(@studyList<sp/>IS<sp/>NOT<sp/>NULL)<sp/><sp/>SET<sp/>@xml.modify(&apos;insert<sp/>sql:variable(&quot;@studyList&quot;)<sp/>into<sp/>(/inspect)[1]&apos;)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>IF(@fileList<sp/>IS<sp/>NOT<sp/>NULL)<sp/><sp/><sp/>SET<sp/>@xml.modify(&apos;insert<sp/>sql:variable(&quot;@fileList&quot;)<sp/>into<sp/>(/inspect)[1]&apos;)</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>SELECT<sp/>@xml;</highlight></codeline>
<codeline><highlight class="normal">GO</highlight></codeline>
</programlisting></para><para><simplesect kind="warning"><para></para></simplesect>
<ref refid="d4/deb/classsamchon_1_1protocol_1_1EntityGroup" kindref="compound">EntityGroup</ref> contains children entity elements as type of pointer. Because children entity objects are not serialized and referenced by pointer, its iteration and accessment is not fast. If it needs higher performance, then use <ref refid="dc/d8d/classsamchon_1_1protocol_1_1EntityArray" kindref="compound">EntityArray</ref> (static array for children entity) instead. </para><para><simplesect kind="par"><title>[Inherited]</title><para></para></simplesect>
<ref refid="d0/d3e/classsamchon_1_1protocol_1_1Entity" kindref="compound">Entity</ref> is a class for standardization of expression method using on network I/O by XML. If <ref refid="d8/d82/classsamchon_1_1protocol_1_1Invoke" kindref="compound">Invoke</ref> is a standard message protocol of Samchon Framework which must be kept, <ref refid="d0/d3e/classsamchon_1_1protocol_1_1Entity" kindref="compound">Entity</ref> is a recommended semi-protocol of message for expressing a data class. Following the semi-protocol <ref refid="d0/d3e/classsamchon_1_1protocol_1_1Entity" kindref="compound">Entity</ref> is not imposed but encouraged. </para><para>As we could get advantages from standardization of message for network I/O with <ref refid="d8/d82/classsamchon_1_1protocol_1_1Invoke" kindref="compound">Invoke</ref>, we can get additional advantage from standardizing expression method of data class with <ref refid="d0/d3e/classsamchon_1_1protocol_1_1Entity" kindref="compound">Entity</ref>. We do not need to know a part of network communication. Thus, with the <ref refid="d0/d3e/classsamchon_1_1protocol_1_1Entity" kindref="compound">Entity</ref>, we can only concentrate on entity&apos;s own logics and relationships between another entities. <ref refid="d0/d3e/classsamchon_1_1protocol_1_1Entity" kindref="compound">Entity</ref> does not need to how network communications are being done. </para><para><image type="html" name="protocol_entity.png"></image>
 <image type="latex" name="protocol_entity.png"></image>
</para><para><simplesect kind="par"><title>Example source</title><para><programlisting><codeline lineno="1"><highlight class="preprocessor">#include<sp/>&lt;iostream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;samchon/protocol/Entity.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;samchon/protocol/IHTMLEntity.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;samchon/protocol/SharedEntityArray.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;samchon/library/XML.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>_WIN64</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>ifdef<sp/>_DEBUG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/>pragma<sp/>comment(lib,<sp/>&quot;x64/Debug/SamchonFramework.lib&quot;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/>pragma<sp/>comment(lib,<sp/>&quot;x64/Release/SamchonFramework.lib&quot;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>ifdef<sp/>_DEBUG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/>pragma<sp/>comment(lib,<sp/>&quot;Debug/SamchonFramework.lib&quot;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/>pragma<sp/>comment(lib,<sp/>&quot;Release/SamchonFramework.lib&quot;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal"><ref refid="d8/dcc/namespacestd" kindref="compound">std</ref>;</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal"><ref refid="d8/dd4/namespacesamchon_1_1library" kindref="compound">samchon::library</ref>;</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal"><ref refid="db/d64/namespacesamchon_1_1protocol" kindref="compound">samchon::protocol</ref>;</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">Member<sp/></highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="d0/d3e/classsamchon_1_1protocol_1_1Entity" kindref="compound">Entity</ref>,<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="db/dae/classsamchon_1_1protocol_1_1IHTMLEntity" kindref="compound">IHTMLEntity</ref></highlight></codeline>
<codeline lineno="29"><highlight class="normal">{</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="d0/d3e/classsamchon_1_1protocol_1_1Entity" kindref="compound">Entity</ref><sp/>super;</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>id;</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>name;</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>age;</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>grade;</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>---------------------------------------------------------------------</highlight></codeline>
<codeline lineno="40"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CONSTRUCTORS</highlight></codeline>
<codeline lineno="41"><highlight class="comment"><sp/><sp/><sp/><sp/>---------------------------------------------------------------------<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/>Member()<sp/></highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>super(),<sp/><ref refid="db/dae/classsamchon_1_1protocol_1_1IHTMLEntity" kindref="compound">IHTMLEntity</ref>()</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/>Member(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>&amp;</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>&amp;name,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>age,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>grade)</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>super(),<sp/><ref refid="db/dae/classsamchon_1_1protocol_1_1IHTMLEntity" kindref="compound">IHTMLEntity</ref>()</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;</highlight><highlight class="keywordtype">id</highlight><highlight class="normal"><sp/>=<sp/>id;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;name<sp/>=<sp/>name;</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;age<sp/>=<sp/>age;</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;grade<sp/>=<sp/>grade;</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>~Member()<sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d4/deb/classsamchon_1_1protocol_1_1EntityGroup_1a49bad12c4913a280d0249479ee08edc2" kindref="member">construct</ref>(shared_ptr&lt;XML&gt;<sp/>xml)</highlight><highlight class="keyword"><sp/>override</highlight></codeline>
<codeline lineno="57"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;</highlight><highlight class="keywordtype">id</highlight><highlight class="normal"><sp/>=<sp/>xml-&gt;getProperty(</highlight><highlight class="stringliteral">&quot;id&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;name<sp/>=<sp/>xml-&gt;getProperty(</highlight><highlight class="stringliteral">&quot;name&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;age<sp/>=<sp/>xml-&gt;getProperty&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&gt;(</highlight><highlight class="stringliteral">&quot;age&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;grade<sp/>=<sp/>xml-&gt;getProperty&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&gt;(</highlight><highlight class="stringliteral">&quot;grade&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>---------------------------------------------------------------------</highlight></codeline>
<codeline lineno="65"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GETTERSs</highlight></codeline>
<codeline lineno="66"><highlight class="comment"><sp/><sp/><sp/><sp/>---------------------------------------------------------------------<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="d0/d3e/classsamchon_1_1protocol_1_1Entity_1a5f7b0261859ce45be6fc2cef64026183" kindref="member">key</ref>()<sp/>const<sp/>-&gt;<sp/><ref refid="d8/dcc/namespacestd" kindref="compound">std</ref>::</highlight><highlight class="keywordtype">string</highlight><highlight class="keyword"><sp/>override</highlight></codeline>
<codeline lineno="68"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;id;</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>---------------------------------------------------------------------</highlight></codeline>
<codeline lineno="73"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>XML<sp/>EXPORTERS</highlight></codeline>
<codeline lineno="74"><highlight class="comment"><sp/><sp/><sp/><sp/>---------------------------------------------------------------------<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="d0/d3e/classsamchon_1_1protocol_1_1Entity_1a974f48d92f0ef494a8d2c879f82c6426" kindref="member">TAG</ref>()<sp/>const<sp/>-&gt;<sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="keyword"><sp/>override</highlight></codeline>
<codeline lineno="76"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;member&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="d4/deb/classsamchon_1_1protocol_1_1EntityGroup_1a30dee0fe2044f2f88579935cc10fc753" kindref="member">toXML</ref>()<sp/>const<sp/>-&gt;<sp/>shared_ptr&lt;XML&gt;</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>shared_ptr&lt;XML&gt;<sp/>&amp;xml<sp/>=<sp/>super::toXML();</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xml-&gt;setProperty(</highlight><highlight class="stringliteral">&quot;id&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xml-&gt;setProperty(</highlight><highlight class="stringliteral">&quot;name&quot;</highlight><highlight class="normal">,<sp/>name);</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xml-&gt;setProperty(</highlight><highlight class="stringliteral">&quot;age&quot;</highlight><highlight class="normal">,<sp/>age);</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xml-&gt;setProperty(</highlight><highlight class="stringliteral">&quot;grade&quot;</highlight><highlight class="normal">,<sp/>grade);</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>move(xml);</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>toHTML()<sp/>const<sp/>-&gt;<sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>toTR(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/>name,<sp/>age,<sp/>grade);</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="93"><highlight class="normal">};</highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">MemberArray</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="d4/deb/classsamchon_1_1protocol_1_1EntityGroup" kindref="compound">SharedEntityArray</ref>&lt;Member&gt;,</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="db/dae/classsamchon_1_1protocol_1_1IHTMLEntity" kindref="compound">IHTMLEntity</ref></highlight></codeline>
<codeline lineno="98"><highlight class="normal">{</highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="d4/deb/classsamchon_1_1protocol_1_1EntityGroup" kindref="compound">SharedEntityArray&lt;Member&gt;</ref><sp/>super;</highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>application;</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>department;</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/>Member<sp/>*chief;</highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>---------------------------------------------------------------------</highlight></codeline>
<codeline lineno="108"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CONSTRUCTORS</highlight></codeline>
<codeline lineno="109"><highlight class="comment"><sp/><sp/><sp/><sp/>---------------------------------------------------------------------<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/>MemberArray()</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>super(),<sp/><ref refid="db/dae/classsamchon_1_1protocol_1_1IHTMLEntity" kindref="compound">IHTMLEntity</ref>()</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;chief<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>~MemberArray()<sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>You<sp/>don&apos;t<sp/>need<sp/>to<sp/>consider<sp/>children(Member)<sp/>objects</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Just<sp/>concentrate<sp/>on<sp/>constructing<sp/>MemberArray&apos;s<sp/>own<sp/>member<sp/>variables</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d4/deb/classsamchon_1_1protocol_1_1EntityGroup_1a49bad12c4913a280d0249479ee08edc2" kindref="member">construct</ref>(shared_ptr&lt;XML&gt;<sp/>xml)</highlight><highlight class="keyword"><sp/>override</highlight></codeline>
<codeline lineno="120"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>super::construct(xml);</highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;application<sp/>=<sp/>xml-&gt;getProperty(</highlight><highlight class="stringliteral">&quot;application&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;department<sp/>=<sp/>xml-&gt;getProperty&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&gt;(</highlight><highlight class="stringliteral">&quot;department&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(xml-&gt;hasProperty(</highlight><highlight class="stringliteral">&quot;chief&quot;</highlight><highlight class="normal">)<sp/>==<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>this-&gt;<ref refid="d4/deb/classsamchon_1_1protocol_1_1EntityGroup_1a531cae9e9c8b395f8cde3f2ca243cc79" kindref="member">has</ref>(<sp/>xml-&gt;getProperty(</highlight><highlight class="stringliteral">&quot;chief&quot;</highlight><highlight class="normal">)<sp/>)<sp/>==<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;chief<sp/>=<sp/>this-&gt;</highlight><highlight class="keyword">get</highlight><highlight class="normal">(<sp/>xml-&gt;getProperty(</highlight><highlight class="stringliteral">&quot;cheif&quot;</highlight><highlight class="normal">)<sp/>).</highlight><highlight class="keyword">get</highlight><highlight class="normal">();</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//FACTORY<sp/>METHOD<sp/>FOR<sp/>MEMBER</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="d4/deb/classsamchon_1_1protocol_1_1EntityGroup_1a554e0798083a38327f360c61a1ca716b" kindref="member">createChild</ref>(shared_ptr&lt;XML&gt;<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/>-&gt;<sp/>Member*<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Member();</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>---------------------------------------------------------------------</highlight></codeline>
<codeline lineno="138"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>XML<sp/>EXPORTERS</highlight></codeline>
<codeline lineno="139"><highlight class="comment"><sp/><sp/><sp/><sp/>---------------------------------------------------------------------<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="d0/d3e/classsamchon_1_1protocol_1_1Entity_1a974f48d92f0ef494a8d2c879f82c6426" kindref="member">TAG</ref>()<sp/>const<sp/>-&gt;<sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="keyword"><sp/>override</highlight></codeline>
<codeline lineno="142"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;memberArray&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="d9/d4c/classsamchon_1_1protocol_1_1IEntityGroup_1abcef66d1cd792f48c12c52ac52198c0f" kindref="member">CHILD_TAG</ref>()<sp/>const<sp/>-&gt;<sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="keyword"><sp/>override</highlight></codeline>
<codeline lineno="146"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;member&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>You<sp/>don&apos;t<sp/>need<sp/>to<sp/>consider<sp/>children(Member)<sp/>objects</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Just<sp/>concentrate<sp/>on<sp/>expressing<sp/>MemberArray&apos;s<sp/>own<sp/>member<sp/>variables</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="d4/deb/classsamchon_1_1protocol_1_1EntityGroup_1a30dee0fe2044f2f88579935cc10fc753" kindref="member">toXML</ref>()<sp/>const<sp/>-&gt;<sp/>shared_ptr&lt;XML&gt;</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>shared_ptr&lt;XML&gt;<sp/>&amp;xml<sp/>=<sp/>super::toXML();</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xml-&gt;setProperty(</highlight><highlight class="stringliteral">&quot;application&quot;</highlight><highlight class="normal">,<sp/>application);</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xml-&gt;setProperty(</highlight><highlight class="stringliteral">&quot;department&quot;</highlight><highlight class="normal">,<sp/>department);</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(chief<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xml-&gt;setProperty(</highlight><highlight class="stringliteral">&quot;cheif&quot;</highlight><highlight class="normal">,<sp/>chief-&gt;key());</highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>move(xml);</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>toHTML()<sp/>const<sp/>-&gt;<sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>html<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&lt;table&gt;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>html<sp/>+=<sp/>toTH(</highlight><highlight class="stringliteral">&quot;ID&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Name&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Age&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Grade&quot;</highlight><highlight class="normal">)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>2;<sp/>i++)</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>html<sp/>+=<sp/>at(i)-&gt;toHTML()<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>html<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;&lt;/table&gt;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>move(html);</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="174"><highlight class="normal">};</highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>main()</highlight></codeline>
<codeline lineno="177"><highlight class="normal">{</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>str<sp/>=<sp/>string(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">)<sp/>+</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&lt;memberArray<sp/>application=&apos;framework&apos;<sp/>department=&apos;7&apos;<sp/>cheif=&apos;samchon&apos;&gt;\n&quot;</highlight><highlight class="normal"><sp/>+</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/>&lt;member<sp/>id=&apos;samchon&apos;<sp/>name=&apos;Jeongho<sp/>Nam&apos;<sp/>age=&apos;27&apos;<sp/>grade=&apos;5&apos;<sp/>/&gt;&quot;</highlight><highlight class="normal"><sp/>+</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/>&lt;member<sp/>id=&apos;submaster&apos;<sp/>name=&apos;No<sp/>Name&apos;<sp/>age=&apos;100&apos;<sp/>grade=&apos;4&apos;<sp/>/&gt;&quot;</highlight><highlight class="normal"><sp/>+</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/>&lt;member<sp/>id=&apos;john&apos;<sp/>name=&apos;John<sp/>Doe&apos;<sp/>age=&apos;33&apos;<sp/>grade=&apos;2&apos;<sp/>/&gt;&quot;</highlight><highlight class="normal"><sp/>+</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/>&lt;member<sp/>id=&apos;bad_man&apos;<sp/>name=&apos;Bad<sp/>Man&apos;<sp/>age=&apos;44&apos;<sp/>grade=&apos;-1&apos;<sp/>/&gt;&quot;</highlight><highlight class="normal"><sp/>+</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/>&lt;member<sp/>id=&apos;guest&apos;<sp/>name=&apos;Guest&apos;<sp/>age=&apos;0&apos;<sp/>grade=&apos;0&apos;<sp/>/&gt;&quot;</highlight><highlight class="normal"><sp/>+</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&lt;/memberArray&gt;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/>shared_ptr&lt;XML&gt;<sp/>xml(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>XML(str));</highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/>MemberArray<sp/>memberArray;</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/>memberArray.construct(xml);</highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/>memberArray.emplace_back(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Member(</highlight><highlight class="stringliteral">&quot;freshman&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;A<sp/>fresh<sp/>man&quot;</highlight><highlight class="normal">,<sp/>20,<sp/>2));</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/>memberArray.emplace_back(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Member(</highlight><highlight class="stringliteral">&quot;senior&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;A<sp/>senior&quot;</highlight><highlight class="normal">,<sp/>70,<sp/>2));</highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/>memberArray.toXML()-&gt;toString()<sp/>&lt;&lt;<sp/>endl<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/>memberArray.toHTML()<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/>system(</highlight><highlight class="stringliteral">&quot;pause&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="197"><highlight class="normal">}</highlight></codeline>
</programlisting></para></simplesect>
<heading level="4">Result of the example </heading>
</para><para><image type="html" name="example_entity.png"></image>
 <image type="latex" name="example_entity.png"></image>
</para><para><simplesect kind="note"><para></para></simplesect>
I say repeatedly. Expression method of <ref refid="d0/d3e/classsamchon_1_1protocol_1_1Entity" kindref="compound">Entity</ref> is recommended, but not imposed. It&apos;s a semi protocol for network I/O but not a essential protocol must be kept. The expression method of <ref refid="d0/d3e/classsamchon_1_1protocol_1_1Entity" kindref="compound">Entity</ref>, using on network I/O, is expressed by XML string. </para><para>If your own network system has a critical performance issue on communication data class, it would be better to using binary communication (with <ref refid="dc/d37/classsamchon_1_1ByteArray" kindref="compound">ByteArray</ref> or boost::serialization). Don&apos;t worry about the problem! <ref refid="d8/d82/classsamchon_1_1protocol_1_1Invoke" kindref="compound">Invoke</ref> also provides methods for binary data (<ref refid="dc/d37/classsamchon_1_1ByteArray" kindref="compound">ByteArray</ref>). </para><para><simplesect kind="see"><para><ref refid="db/d64/namespacesamchon_1_1protocol" kindref="compound">protocol</ref> </para></simplesect>
<simplesect kind="author"><para>Jeongho Nam </para></simplesect>
</para>    </detaileddescription>
    <inheritancegraph>
      <node id="1539">
        <label>ParallelClientArray</label>
        <link refid="d1/dc7/classsamchon_1_1protocol_1_1master_1_1ParallelClientArray"/>
        <childnode refid="1536" relation="public-inheritance">
        </childnode>
        <childnode refid="1548" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1548">
        <label>ParallelSystemArray</label>
        <link refid="d8/d9c/classsamchon_1_1protocol_1_1master_1_1ParallelSystemArray"/>
        <childnode refid="1535" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1513">
        <label>EntityGroup&lt; _Container, _ETy, _Ty &gt;</label>
        <link refid="d4/deb/classsamchon_1_1protocol_1_1EntityGroup"/>
        <childnode refid="1514" relation="public-inheritance">
        </childnode>
        <childnode refid="1515" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1551">
        <label>InvokeHistoryArray&lt; InvokeHistory &gt;</label>
        <link refid="d1/d7b/classsamchon_1_1protocol_1_1InvokeHistoryArray"/>
        <childnode refid="1513" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1536">
        <label>ExternalClientArray</label>
        <link refid="d8/d47/classsamchon_1_1protocol_1_1ExternalClientArray"/>
        <childnode refid="1535" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1521">
        <label>ExternalClient</label>
        <link refid="dc/dfd/classsamchon_1_1protocol_1_1ExternalClient"/>
        <childnode refid="1520" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1518">
        <label>NTParameter&lt; NTParameterDetermined &gt;</label>
        <link refid="db/d29/classsamchon_1_1namtree_1_1NTParameter"/>
        <childnode refid="1513" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1530">
        <label>DistributedSlaveServerMediator</label>
        <link refid="d0/d1d/classsamchon_1_1protocol_1_1master_1_1DistributedSlaveServerMediator"/>
        <childnode refid="1529" relation="public-inheritance">
        </childnode>
        <childnode refid="1534" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1532">
        <label>ParallelSystem</label>
        <link refid="d9/d6b/classsamchon_1_1protocol_1_1master_1_1ParallelSystem"/>
        <childnode refid="1520" relation="public-inheritance">
        </childnode>
        <childnode refid="1533" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1519">
        <label>NTParameterArray&lt; NTParameter &gt;</label>
        <link refid="de/d08/classsamchon_1_1namtree_1_1NTParameterArray"/>
        <childnode refid="1513" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1544">
        <label>ParallelServerArray</label>
        <link refid="d3/d5d/classsamchon_1_1protocol_1_1master_1_1ParallelServerArray"/>
        <childnode refid="1541" relation="public-inheritance">
        </childnode>
        <childnode refid="1548" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1525">
        <label>DistributedClientServerMediator</label>
        <link refid="dd/d60/classsamchon_1_1protocol_1_1master_1_1DistributedClientServerMediator"/>
        <childnode refid="1524" relation="public-inheritance">
        </childnode>
        <childnode refid="1534" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1543">
        <label>DistributedServerArrayMediator</label>
        <link refid="d4/d48/classsamchon_1_1protocol_1_1master_1_1DistributedServerArrayMediator"/>
        <childnode refid="1542" relation="public-inheritance">
        </childnode>
        <childnode refid="1547" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1538">
        <label>DistributedClientArrayMediator</label>
        <link refid="d9/ddf/classsamchon_1_1protocol_1_1master_1_1DistributedClientArrayMediator"/>
        <childnode refid="1537" relation="public-inheritance">
        </childnode>
        <childnode refid="1547" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1534">
        <label>DistributedSlaveSystemMediator</label>
        <link refid="d5/d46/classsamchon_1_1protocol_1_1master_1_1DistributedSlaveSystemMediator"/>
        <childnode refid="1533" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1540">
        <label>ParallelClientArrayMediator</label>
        <link refid="d4/d53/classsamchon_1_1protocol_1_1master_1_1ParallelClientArrayMediator"/>
        <childnode refid="1539" relation="public-inheritance">
        </childnode>
        <childnode refid="1549" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1537">
        <label>DistributedClientArray</label>
        <link refid="d3/db6/classsamchon_1_1protocol_1_1master_1_1DistributedClientArray"/>
        <childnode refid="1536" relation="public-inheritance">
        </childnode>
        <childnode refid="1546" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1535">
        <label>ExternalSystemArray&lt; ExternalSystem &gt;</label>
        <link refid="d9/dc6/classsamchon_1_1protocol_1_1ExternalSystemArray"/>
        <childnode refid="1513" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1516">
        <label>FTFolder&lt; FTInstance &gt;</label>
        <link refid="d2/db1/classsamchon_1_1library_1_1FTFolder"/>
        <childnode refid="1513" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1549">
        <label>ParallelSystemArrayMediator</label>
        <link refid="d3/d18/classsamchon_1_1protocol_1_1master_1_1ParallelSystemArrayMediator"/>
        <childnode refid="1548" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1514">
        <label>Entity</label>
        <link refid="d0/d3e/classsamchon_1_1protocol_1_1Entity"/>
      </node>
      <node id="1524">
        <label>SlaveClient</label>
        <link refid="db/d5d/classsamchon_1_1protocol_1_1slave_1_1SlaveClient"/>
        <childnode refid="1521" relation="public-inheritance">
        </childnode>
        <childnode refid="1533" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1517">
        <label>NTCriteria&lt; NTCriteria &gt;</label>
        <link refid="de/dfd/classsamchon_1_1namtree_1_1NTCriteria"/>
        <childnode refid="1513" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1528">
        <label>ParallelServer</label>
        <link refid="d1/da1/classsamchon_1_1protocol_1_1master_1_1ParallelServer"/>
        <childnode refid="1526" relation="public-inheritance">
        </childnode>
        <childnode refid="1529" relation="public-inheritance">
        </childnode>
        <childnode refid="1532" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1550">
        <label>Invoke&lt; InvokeParameter &gt;</label>
        <link refid="d8/d82/classsamchon_1_1protocol_1_1Invoke"/>
        <childnode refid="1513" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1546">
        <label>DistributedSystemArray</label>
        <link refid="d3/d88/classsamchon_1_1protocol_1_1master_1_1DistributedSystemArray"/>
        <childnode refid="1535" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1526">
        <label>ExternalServer</label>
        <link refid="df/d4a/classsamchon_1_1protocol_1_1ExternalServer"/>
        <childnode refid="1520" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1520">
        <label>ExternalSystem&lt; ExternalSystemRole &gt;</label>
        <link refid="df/d42/classsamchon_1_1protocol_1_1ExternalSystem"/>
        <childnode refid="1513" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1542">
        <label>DistributedServerArray</label>
        <link refid="d0/d26/classsamchon_1_1protocol_1_1master_1_1DistributedServerArray"/>
        <childnode refid="1541" relation="public-inheritance">
        </childnode>
        <childnode refid="1546" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1523">
        <label>ParallelClient</label>
        <link refid="d9/dda/classsamchon_1_1protocol_1_1master_1_1ParallelClient"/>
        <childnode refid="1521" relation="public-inheritance">
        </childnode>
        <childnode refid="1524" relation="public-inheritance">
        </childnode>
        <childnode refid="1532" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1547">
        <label>DistributedSystemArrayMediator</label>
        <link refid="dc/d8b/classsamchon_1_1protocol_1_1master_1_1DistributedSystemArrayMediator"/>
        <childnode refid="1546" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1545">
        <label>ParallelServerArrayMediator</label>
        <link refid="db/d8b/classsamchon_1_1protocol_1_1master_1_1ParallelServerArrayMediator"/>
        <childnode refid="1544" relation="public-inheritance">
        </childnode>
        <childnode refid="1549" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1553">
        <label>DSInvokeHistoryList&lt; DSInvokeHistory &gt;</label>
        <link refid="d8/d75/classsamchon_1_1protocol_1_1master_1_1DSInvokeHistoryList"/>
        <childnode refid="1513" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1529">
        <label>SlaveServer</label>
        <link refid="d2/da4/classsamchon_1_1protocol_1_1slave_1_1SlaveServer"/>
        <childnode refid="1526" relation="public-inheritance">
        </childnode>
        <childnode refid="1533" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1515">
        <label>IEntityGroup</label>
        <link refid="d9/d4c/classsamchon_1_1protocol_1_1IEntityGroup"/>
      </node>
      <node id="1552">
        <label>PRInvokeHistoryArray</label>
        <link refid="df/d50/classsamchon_1_1protocol_1_1master_1_1PRInvokeHistoryArray"/>
        <childnode refid="1551" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1533">
        <label>SlaveSystem</label>
        <link refid="d1/d4a/classsamchon_1_1protocol_1_1slave_1_1SlaveSystem"/>
        <childnode refid="1520" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1527">
        <label>DistributedServer</label>
        <link refid="d7/da8/classsamchon_1_1protocol_1_1master_1_1DistributedServer"/>
        <childnode refid="1526" relation="public-inheritance">
        </childnode>
        <childnode refid="1531" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1541">
        <label>ExternalServerArray</label>
        <link refid="d1/de5/classsamchon_1_1protocol_1_1ExternalServerArray"/>
        <childnode refid="1535" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1522">
        <label>DistributedClient</label>
        <link refid="d2/d26/classsamchon_1_1protocol_1_1master_1_1DistributedClient"/>
        <childnode refid="1521" relation="public-inheritance">
        </childnode>
        <childnode refid="1531" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1531">
        <label>DistributedSystem</label>
        <link refid="db/d2d/classsamchon_1_1protocol_1_1master_1_1DistributedSystem"/>
        <childnode refid="1520" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1554">
        <label>EntityGroup&lt; _Container, _ETy, _Ty &gt;</label>
        <link refid="d4/deb/classsamchon_1_1protocol_1_1EntityGroup"/>
        <childnode refid="1555" relation="public-inheritance">
        </childnode>
        <childnode refid="1556" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1555">
        <label>Entity</label>
        <link refid="d0/d3e/classsamchon_1_1protocol_1_1Entity"/>
      </node>
      <node id="1556">
        <label>IEntityGroup</label>
        <link refid="d9/d4c/classsamchon_1_1protocol_1_1IEntityGroup"/>
      </node>
    </collaborationgraph>
    <location file="D:/OneDrive/Project/Samchon/framework/cpp/samchon/protocol/EntityGroup.hpp" line="58" column="1" bodyfile="D:/OneDrive/Project/Samchon/framework/cpp/samchon/protocol/EntityGroup.hpp" bodystart="54" bodyend="210"/>
    <listofallmembers>
      <member refid="d9/d4c/classsamchon_1_1protocol_1_1IEntityGroup_1abcef66d1cd792f48c12c52ac52198c0f" prot="protected" virt="pure-virtual"><scope>samchon::protocol::EntityGroup</scope><name>CHILD_TAG</name></member>
      <member refid="d4/deb/classsamchon_1_1protocol_1_1EntityGroup_1a49bad12c4913a280d0249479ee08edc2" prot="public" virt="virtual"><scope>samchon::protocol::EntityGroup</scope><name>construct</name></member>
      <member refid="d4/deb/classsamchon_1_1protocol_1_1EntityGroup_1aac5cb7c267e3cf067657ca5a73363728" prot="protected" virt="non-virtual"><scope>samchon::protocol::EntityGroup</scope><name>container_type</name></member>
      <member refid="d4/deb/classsamchon_1_1protocol_1_1EntityGroup_1a554e0798083a38327f360c61a1ca716b" prot="protected" virt="pure-virtual"><scope>samchon::protocol::EntityGroup</scope><name>createChild</name></member>
      <member refid="d0/d3e/classsamchon_1_1protocol_1_1Entity_1afb4718a8ca5b822cf88129ae04240489" prot="public" virt="non-virtual"><scope>samchon::protocol::EntityGroup</scope><name>Entity</name></member>
      <member refid="d4/deb/classsamchon_1_1protocol_1_1EntityGroup_1a8e82af015377749a76c1839466abb676" prot="protected" virt="non-virtual"><scope>samchon::protocol::EntityGroup</scope><name>entity_type</name></member>
      <member refid="d4/deb/classsamchon_1_1protocol_1_1EntityGroup_1a14f6ca078bbeb51a6f6bc153f7384a7c" prot="public" virt="non-virtual"><scope>samchon::protocol::EntityGroup</scope><name>EntityGroup</name></member>
      <member refid="d4/deb/classsamchon_1_1protocol_1_1EntityGroup_1af318f1e62268b7e178fdc2a9669444b8" prot="public" virt="non-virtual"><scope>samchon::protocol::EntityGroup</scope><name>get</name></member>
      <member refid="d4/deb/classsamchon_1_1protocol_1_1EntityGroup_1af5c2fb617197f93e98ec6c4b547d9bdd" prot="public" virt="non-virtual"><scope>samchon::protocol::EntityGroup</scope><name>get</name></member>
      <member refid="d4/deb/classsamchon_1_1protocol_1_1EntityGroup_1a531cae9e9c8b395f8cde3f2ca243cc79" prot="public" virt="non-virtual"><scope>samchon::protocol::EntityGroup</scope><name>has</name></member>
      <member refid="d9/d4c/classsamchon_1_1protocol_1_1IEntityGroup_1a613d2b691653c86d5f900c8ba33ba30b" prot="public" virt="non-virtual"><scope>samchon::protocol::EntityGroup</scope><name>IEntityGroup</name></member>
      <member refid="d0/d3e/classsamchon_1_1protocol_1_1Entity_1a5f7b0261859ce45be6fc2cef64026183" prot="public" virt="virtual"><scope>samchon::protocol::EntityGroup</scope><name>key</name></member>
      <member refid="d0/d3e/classsamchon_1_1protocol_1_1Entity_1a974f48d92f0ef494a8d2c879f82c6426" prot="public" virt="pure-virtual"><scope>samchon::protocol::EntityGroup</scope><name>TAG</name></member>
      <member refid="d4/deb/classsamchon_1_1protocol_1_1EntityGroup_1a30dee0fe2044f2f88579935cc10fc753" prot="public" virt="virtual"><scope>samchon::protocol::EntityGroup</scope><name>toXML</name></member>
      <member refid="d4/deb/classsamchon_1_1protocol_1_1EntityGroup_1aa03d6edd1546642516652a481c0bf8db" prot="protected" virt="non-virtual"><scope>samchon::protocol::EntityGroup</scope><name>value_type</name></member>
      <member refid="d0/d3e/classsamchon_1_1protocol_1_1Entity_1a07d18d40fa0c4b4f1341cfddc0b600dd" prot="public" virt="virtual"><scope>samchon::protocol::EntityGroup</scope><name>~Entity</name></member>
      <member refid="d4/deb/classsamchon_1_1protocol_1_1EntityGroup_1a0dd6821308dca7395965242148146aae" prot="public" virt="virtual"><scope>samchon::protocol::EntityGroup</scope><name>~EntityGroup</name></member>
      <member refid="d9/d4c/classsamchon_1_1protocol_1_1IEntityGroup_1ae41524ffa5ca16d3160dfd0b00e7800f" prot="public" virt="virtual"><scope>samchon::protocol::EntityGroup</scope><name>~IEntityGroup</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
