<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.10">
  <compounddef id="d4/d29/Invoke_8cpp" kind="file" language="C++">
    <compoundname>Invoke.cpp</compoundname>
    <includes refid="d1/d6e/Invoke_8hpp" local="no">samchon/protocol/Invoke.hpp</includes>
    <includes refid="d4/d3b/XML_8hpp" local="no">samchon/library/XML.hpp</includes>
    <includes refid="de/d86/StringUtil_8hpp" local="no">samchon/library/StringUtil.hpp</includes>
    <incdepgraph>
      <node id="3399">
        <label>samchon/protocol/EntityGroup.hpp</label>
        <link refid="d1/d61/EntityGroup_8hpp_source"/>
        <childnode refid="3400" relation="include">
        </childnode>
        <childnode refid="3403" relation="include">
        </childnode>
        <childnode refid="3404" relation="include">
        </childnode>
      </node>
      <node id="3411">
        <label>samchon/library/IOperator.hpp</label>
        <link refid="dc/d77/IOperator_8hpp_source"/>
        <childnode refid="3397" relation="include">
        </childnode>
      </node>
      <node id="3414">
        <label>samchon/protocol/InvokeParameter.hpp</label>
        <link refid="d3/da5/InvokeParameter_8hpp_source"/>
        <childnode refid="3397" relation="include">
        </childnode>
        <childnode refid="3400" relation="include">
        </childnode>
        <childnode refid="3409" relation="include">
        </childnode>
        <childnode refid="3415" relation="include">
        </childnode>
        <childnode refid="3410" relation="include">
        </childnode>
      </node>
      <node id="3417">
        <label>samchon/library/Math.hpp</label>
        <link refid="d8/df1/Math_8hpp_source"/>
        <childnode refid="3397" relation="include">
        </childnode>
        <childnode refid="3406" relation="include">
        </childnode>
        <childnode refid="3412" relation="include">
        </childnode>
      </node>
      <node id="3401">
        <label>string</label>
      </node>
      <node id="3406">
        <label>map</label>
      </node>
      <node id="3400">
        <label>samchon/protocol/Entity.hpp</label>
        <link refid="de/da6/Entity_8hpp_source"/>
        <childnode refid="3397" relation="include">
        </childnode>
        <childnode refid="3401" relation="include">
        </childnode>
        <childnode refid="3402" relation="include">
        </childnode>
      </node>
      <node id="3397">
        <label>samchon/API.hpp</label>
        <link refid="d9/d8f/API_8hpp_source"/>
      </node>
      <node id="3398">
        <label>samchon/protocol/SharedEntityArray.hpp</label>
        <link refid="d5/dc4/SharedEntityArray_8hpp_source"/>
        <childnode refid="3399" relation="include">
        </childnode>
        <childnode refid="3408" relation="include">
        </childnode>
      </node>
      <node id="3405">
        <label>samchon/Map.hpp</label>
        <link refid="dc/dbe/Map_8hpp_source"/>
        <childnode refid="3406" relation="include">
        </childnode>
      </node>
      <node id="3415">
        <label>samchon/ByteArray.hpp</label>
        <link refid="df/df6/ByteArray_8hpp_source"/>
        <childnode refid="3397" relation="include">
        </childnode>
        <childnode refid="3408" relation="include">
        </childnode>
        <childnode refid="3401" relation="include">
        </childnode>
      </node>
      <node id="3396">
        <label>samchon/protocol/Invoke.hpp</label>
        <link refid="d1/d6e/Invoke_8hpp_source"/>
        <childnode refid="3397" relation="include">
        </childnode>
        <childnode refid="3398" relation="include">
        </childnode>
        <childnode refid="3414" relation="include">
        </childnode>
      </node>
      <node id="3403">
        <label>samchon/protocol/IEntityGroup.hpp</label>
        <link refid="db/d55/IEntityGroup_8hpp_source"/>
        <childnode refid="3397" relation="include">
        </childnode>
        <childnode refid="3401" relation="include">
        </childnode>
      </node>
      <node id="3408">
        <label>vector</label>
      </node>
      <node id="3407">
        <label>samchon/library/XMLList.hpp</label>
        <link refid="dd/d37/XMLList_8hpp_source"/>
        <childnode refid="3397" relation="include">
        </childnode>
        <childnode refid="3408" relation="include">
        </childnode>
        <childnode refid="3402" relation="include">
        </childnode>
      </node>
      <node id="3413">
        <label>utility</label>
      </node>
      <node id="3409">
        <label>sstream</label>
      </node>
      <node id="3412">
        <label>samchon/IndexPair.hpp</label>
        <link refid="d9/ded/IndexPair_8hpp_source"/>
        <childnode refid="3413" relation="include">
        </childnode>
      </node>
      <node id="3416">
        <label>samchon/library/StringUtil.hpp</label>
        <link refid="de/d86/StringUtil_8hpp_source"/>
        <childnode refid="3397" relation="include">
        </childnode>
        <childnode refid="3401" relation="include">
        </childnode>
        <childnode refid="3410" relation="include">
        </childnode>
        <childnode refid="3409" relation="include">
        </childnode>
        <childnode refid="3412" relation="include">
        </childnode>
        <childnode refid="3417" relation="include">
        </childnode>
      </node>
      <node id="3395">
        <label>D:/OneDrive/Project/Samchon/framework/cpp/samchon/protocol/Invoke.cpp</label>
        <link refid="Invoke.cpp"/>
        <childnode refid="3396" relation="include">
        </childnode>
        <childnode refid="3404" relation="include">
        </childnode>
        <childnode refid="3416" relation="include">
        </childnode>
      </node>
      <node id="3404">
        <label>samchon/library/XML.hpp</label>
        <link refid="d4/d3b/XML_8hpp_source"/>
        <childnode refid="3397" relation="include">
        </childnode>
        <childnode refid="3405" relation="include">
        </childnode>
        <childnode refid="3407" relation="include">
        </childnode>
        <childnode refid="3409" relation="include">
        </childnode>
        <childnode refid="3401" relation="include">
        </childnode>
        <childnode refid="3410" relation="include">
        </childnode>
      </node>
      <node id="3410">
        <label>samchon/WeakString.hpp</label>
        <link refid="d8/d3d/WeakString_8hpp_source"/>
        <childnode refid="3397" relation="include">
        </childnode>
        <childnode refid="3411" relation="include">
        </childnode>
        <childnode refid="3401" relation="include">
        </childnode>
        <childnode refid="3408" relation="include">
        </childnode>
        <childnode refid="3412" relation="include">
        </childnode>
      </node>
      <node id="3402">
        <label>memory</label>
      </node>
    </incdepgraph>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&lt;samchon/protocol/Invoke.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;samchon/library/XML.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;samchon/library/StringUtil.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal"><ref refid="d8/dcc/namespacestd" kindref="compound">std</ref>;</highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal"><ref refid="db/df1/namespacesamchon" kindref="compound">samchon</ref>;</highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal"><ref refid="d8/dd4/namespacesamchon_1_1library" kindref="compound">samchon::library</ref>;</highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal"><ref refid="db/d64/namespacesamchon_1_1protocol" kindref="compound">samchon::protocol</ref>;</highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>-----------------------------------------------------------------------</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/><sp/><sp/><sp/>CONSTRUCTORS</highlight></codeline>
<codeline lineno="13"><highlight class="comment">-----------------------------------------------------------------------<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal">Invoke::Invoke()</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/>super()</highlight></codeline>
<codeline lineno="16"><highlight class="normal">{</highlight></codeline>
<codeline lineno="17"><highlight class="normal">}</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><ref refid="d8/d82/classsamchon_1_1protocol_1_1Invoke_1aadec0db92e0fe11ac13230c5c65baa0a" kindref="member">Invoke::Invoke</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;listener)</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/>super()</highlight></codeline>
<codeline lineno="20"><highlight class="normal">{</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;listener<sp/>=<sp/>listener;</highlight></codeline>
<codeline lineno="22"><highlight class="normal">}</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d8/d82/classsamchon_1_1protocol_1_1Invoke_1a4c4b7d9441b10a734e8ce75e67d0375c" kindref="member">Invoke::construct</ref>(shared_ptr&lt;XML&gt;<sp/>xml)</highlight></codeline>
<codeline lineno="25"><highlight class="normal">{</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="d8/d82/classsamchon_1_1protocol_1_1Invoke_1a3775bc7759ade969c51fd75883ddc25f" kindref="member">listener</ref><sp/>=<sp/>xml-&gt;getProperty(</highlight><highlight class="stringliteral">&quot;listener&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d4/deb/classsamchon_1_1protocol_1_1EntityGroup_1a49bad12c4913a280d0249479ee08edc2" kindref="member">super::construct</ref>(xml);</highlight></codeline>
<codeline lineno="29"><highlight class="normal">}</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="d8/d82/classsamchon_1_1protocol_1_1Invoke_1a834844ce6d217133a92a0da05bf80ed3" kindref="member">Invoke::createChild</ref>(shared_ptr&lt;XML&gt;)<sp/>-&gt;<sp/><ref refid="d0/d1a/classsamchon_1_1protocol_1_1InvokeParameter" kindref="compound">InvokeParameter</ref>*</highlight></codeline>
<codeline lineno="31"><highlight class="normal">{</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="d0/d1a/classsamchon_1_1protocol_1_1InvokeParameter" kindref="compound">InvokeParameter</ref>();</highlight></codeline>
<codeline lineno="33"><highlight class="normal">}</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="comment">/*#define<sp/>INVOKE_CONSTRUCT_BODY($TYPE)<sp/>\</highlight></codeline>
<codeline lineno="36"><highlight class="comment">void<sp/>Invoke::construct($TYPE<sp/>val)<sp/>\</highlight></codeline>
<codeline lineno="37"><highlight class="comment">{<sp/>\</highlight></codeline>
<codeline lineno="38"><highlight class="comment"><sp/><sp/><sp/><sp/>emplace_back(new<sp/>InvokeParameter(&quot;&quot;,<sp/>val));<sp/>\</highlight></codeline>
<codeline lineno="39"><highlight class="comment">}</highlight></codeline>
<codeline lineno="40"><highlight class="comment"></highlight></codeline>
<codeline lineno="41"><highlight class="comment">INVOKE_CONSTRUCT_BODY(bool)</highlight></codeline>
<codeline lineno="42"><highlight class="comment">INVOKE_CONSTRUCT_BODY(char)</highlight></codeline>
<codeline lineno="43"><highlight class="comment">INVOKE_CONSTRUCT_BODY(short)</highlight></codeline>
<codeline lineno="44"><highlight class="comment">INVOKE_CONSTRUCT_BODY(long)</highlight></codeline>
<codeline lineno="45"><highlight class="comment">INVOKE_CONSTRUCT_BODY(long<sp/>long)</highlight></codeline>
<codeline lineno="46"><highlight class="comment">INVOKE_CONSTRUCT_BODY(int)</highlight></codeline>
<codeline lineno="47"><highlight class="comment">INVOKE_CONSTRUCT_BODY(float)</highlight></codeline>
<codeline lineno="48"><highlight class="comment">INVOKE_CONSTRUCT_BODY(double)</highlight></codeline>
<codeline lineno="49"><highlight class="comment"></highlight></codeline>
<codeline lineno="50"><highlight class="comment">INVOKE_CONSTRUCT_BODY(unsigned<sp/>char)</highlight></codeline>
<codeline lineno="51"><highlight class="comment">INVOKE_CONSTRUCT_BODY(unsigned<sp/>short)</highlight></codeline>
<codeline lineno="52"><highlight class="comment">INVOKE_CONSTRUCT_BODY(unsigned<sp/>long)</highlight></codeline>
<codeline lineno="53"><highlight class="comment">INVOKE_CONSTRUCT_BODY(unsigned<sp/>long<sp/>long)</highlight></codeline>
<codeline lineno="54"><highlight class="comment">INVOKE_CONSTRUCT_BODY(unsigned<sp/>int)</highlight></codeline>
<codeline lineno="55"><highlight class="comment">INVOKE_CONSTRUCT_BODY(long<sp/>double)</highlight></codeline>
<codeline lineno="56"><highlight class="comment">INVOKE_CONSTRUCT_BODY(const<sp/>char*)</highlight></codeline>
<codeline lineno="57"><highlight class="comment"></highlight></codeline>
<codeline lineno="58"><highlight class="comment">INVOKE_CONSTRUCT_BODY(const<sp/>string<sp/>&amp;)</highlight></codeline>
<codeline lineno="59"><highlight class="comment">INVOKE_CONSTRUCT_BODY(const<sp/>ByteArray<sp/>&amp;)</highlight></codeline>
<codeline lineno="60"><highlight class="comment">INVOKE_CONSTRUCT_BODY(const<sp/>shared_ptr&lt;XML&gt;<sp/>&amp;)*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>-----------------------------------------------------------------------</highlight></codeline>
<codeline lineno="63"><highlight class="comment"><sp/><sp/><sp/><sp/>GETTERS</highlight></codeline>
<codeline lineno="64"><highlight class="comment">-----------------------------------------------------------------------<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="d8/d82/classsamchon_1_1protocol_1_1Invoke_1a01f1afa6837a9eb8e6891c4f433f0a46" kindref="member">Invoke::getListener</ref>()<sp/>const<sp/>-&gt;<sp/><ref refid="d8/dcc/namespacestd" kindref="compound">std</ref>::</highlight><highlight class="keywordtype">string</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal">{</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="d8/d82/classsamchon_1_1protocol_1_1Invoke_1a3775bc7759ade969c51fd75883ddc25f" kindref="member">listener</ref>;</highlight></codeline>
<codeline lineno="68"><highlight class="normal">}</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d8/d82/classsamchon_1_1protocol_1_1Invoke_1a2d60330abde071f7c66f3348f05f9a18" kindref="member">Invoke::setListener</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>&amp;listener)</highlight></codeline>
<codeline lineno="71"><highlight class="normal">{</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;listener<sp/>=<sp/><ref refid="d8/d82/classsamchon_1_1protocol_1_1Invoke_1a3775bc7759ade969c51fd75883ddc25f" kindref="member">listener</ref>;</highlight></codeline>
<codeline lineno="73"><highlight class="normal">}</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>-----------------------------------------------------------------------</highlight></codeline>
<codeline lineno="76"><highlight class="comment"><sp/><sp/><sp/><sp/>EXPORTERS</highlight></codeline>
<codeline lineno="77"><highlight class="comment">-----------------------------------------------------------------------<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="d8/d82/classsamchon_1_1protocol_1_1Invoke_1aa55bc231502ef8e0dd9a9c274d028ac9" kindref="member">Invoke::TAG</ref>()<sp/>const<sp/>-&gt;<sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal">{</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;invoke&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="81"><highlight class="normal">}</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="d8/d82/classsamchon_1_1protocol_1_1Invoke_1a5cb3666da8a6a0efe4014782bda20af0" kindref="member">Invoke::CHILD_TAG</ref>()<sp/>const<sp/>-&gt;<sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal">{</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;parameter&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="85"><highlight class="normal">}</highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="d8/d82/classsamchon_1_1protocol_1_1Invoke_1ac0248fcb25b3fa4f463d545005fdcbf3" kindref="member">Invoke::toXML</ref>()<sp/>const<sp/>-&gt;<sp/>shared_ptr&lt;<ref refid="d5/d37/classsamchon_1_1library_1_1XML" kindref="compound">XML</ref>&gt;</highlight></codeline>
<codeline lineno="88"><highlight class="normal">{</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/>std::shared_ptr&lt;XML&gt;<sp/>&amp;xml<sp/>=<sp/><ref refid="d4/deb/classsamchon_1_1protocol_1_1EntityGroup_1a30dee0fe2044f2f88579935cc10fc753" kindref="member">super::toXML</ref>();</highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/>xml-&gt;setProperty(</highlight><highlight class="stringliteral">&quot;listener&quot;</highlight><highlight class="normal">,<sp/><ref refid="d8/d82/classsamchon_1_1protocol_1_1Invoke_1a3775bc7759ade969c51fd75883ddc25f" kindref="member">listener</ref>);</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>xml;</highlight></codeline>
<codeline lineno="94"><highlight class="normal">}</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="d8/d82/classsamchon_1_1protocol_1_1Invoke_1a10199da9e0302eafc2ece201c78b1237" kindref="member">Invoke::toSQL</ref>()<sp/>const<sp/>-&gt;<sp/><ref refid="d8/dcc/namespacestd" kindref="compound">std</ref>::</highlight><highlight class="keywordtype">string</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal">{</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>sql<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;DECLARE<sp/>@parameterTable<sp/>INVOKE_PARAMETER_INSERT_TABLE\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(empty()<sp/>==<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sql<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;INSERT<sp/>INTO<sp/>@parameterTable<sp/>VALUES\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>size();<sp/>i++)</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sql<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;\t&quot;</highlight><highlight class="normal"><sp/>+<sp/>at(i)-&gt;toSQL()<sp/>+<sp/>((i<sp/>==<sp/>size()<sp/>-<sp/>1)<sp/>?<sp/></highlight><highlight class="stringliteral">&quot;;\n\n&quot;</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="stringliteral">&quot;,\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/>sql<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;EXEC<sp/>goInsertInvokeHistory<sp/>?,<sp/>?,<sp/>@parameterTable,<sp/>?&quot;</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//SERVICE,<sp/>MEMBER_ID</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>move(sql);</highlight></codeline>
<codeline lineno="106"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="D:/OneDrive/Project/Samchon/framework/cpp/samchon/protocol/Invoke.cpp"/>
  </compounddef>
</doxygen>
