<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.10">
  <compounddef id="db/d72/classsamchon_1_1protocol_1_1ServerConnector" kind="class" language="C++" prot="public" abstract="yes">
    <compoundname>samchon::protocol::ServerConnector</compoundname>
    <basecompoundref refid="d3/dc8/classsamchon_1_1protocol_1_1IClient" prot="public" virt="virtual">IClient</basecompoundref>
    <derivedcompoundref refid="df/d4a/classsamchon_1_1protocol_1_1ExternalServer" prot="private" virt="virtual">ExternalServer</derivedcompoundref>
    <derivedcompoundref refid="d8/dc2/classsamchon_1_1protocol_1_1WebServerConnector" prot="public" virt="non-virtual">WebServerConnector</derivedcompoundref>
    <includes refid="d5/dcf/ServerConnector_8hpp" local="no">ServerConnector.hpp</includes>
      <sectiondef kind="protected-type">
      <memberdef kind="typedef" id="db/d72/classsamchon_1_1protocol_1_1ServerConnector_1a20f20ccd18667a334f2b58d1996c7f2c" prot="protected" static="no">
        <type><ref refid="d3/dc8/classsamchon_1_1protocol_1_1IClient" kindref="compound">IClient</ref></type>
        <definition>typedef IClient super</definition>
        <argsstring></argsstring>
        <name>super</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/OneDrive/Project/Samchon/framework/cpp/samchon/protocol/ServerConnector.hpp" line="36" column="1" bodyfile="D:/OneDrive/Project/Samchon/framework/cpp/samchon/protocol/ServerConnector.hpp" bodystart="36" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="db/d72/classsamchon_1_1protocol_1_1ServerConnector_1a56d1ac418c56108aa04334d9275f994d" prot="protected" static="no" mutable="no">
        <type>boost::asio::io_service *</type>
        <definition>boost::asio::io_service* ioService</definition>
        <argsstring></argsstring>
        <name>ioService</name>
        <briefdescription>
<para>An io_service of Boost.Asio&apos;s own. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/OneDrive/Project/Samchon/framework/cpp/samchon/protocol/ServerConnector.hpp" line="41" column="1" bodyfile="D:/OneDrive/Project/Samchon/framework/cpp/samchon/protocol/ServerConnector.hpp" bodystart="41" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="db/d72/classsamchon_1_1protocol_1_1ServerConnector_1a2c8a123bd79b1b0b8cf8c39821d061a9" prot="protected" static="no" mutable="no">
        <type>EndPoint *</type>
        <definition>EndPoint* endPoint</definition>
        <argsstring></argsstring>
        <name>endPoint</name>
        <briefdescription>
<para>An endpoint directing a server. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/OneDrive/Project/Samchon/framework/cpp/samchon/protocol/ServerConnector.hpp" line="46" column="1" bodyfile="D:/OneDrive/Project/Samchon/framework/cpp/samchon/protocol/ServerConnector.hpp" bodystart="46" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="db/d72/classsamchon_1_1protocol_1_1ServerConnector_1af254b0011f97292de502f6cce428d331" prot="protected" static="no" mutable="no">
        <type>EndPoint *</type>
        <definition>EndPoint* localEndPoint</definition>
        <argsstring></argsstring>
        <name>localEndPoint</name>
        <briefdescription>
<para>(Optional) An local endpoint of the client (my system) </para>        </briefdescription>
        <detaileddescription>
<para>An local endpoint fof my system. It binds my ip to custom. It acts when my_ip is configured. If the my_ip is not configured, does not act. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/OneDrive/Project/Samchon/framework/cpp/samchon/protocol/ServerConnector.hpp" line="55" column="1" bodyfile="D:/OneDrive/Project/Samchon/framework/cpp/samchon/protocol/ServerConnector.hpp" bodystart="55" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="db/d72/classsamchon_1_1protocol_1_1ServerConnector_1a75c0ddf25b8f7b36837ed8abbe6edb29" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>ServerConnector</definition>
        <argsstring>()</argsstring>
        <name>ServerConnector</name>
        <briefdescription>
<para>Default Constructor. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/OneDrive/Project/Samchon/framework/cpp/samchon/protocol/ServerConnector.hpp" line="64" column="1" bodyfile="D:/OneDrive/Project/Samchon/framework/cpp/samchon/protocol/ServerConnector.cpp" bodystart="14" bodyend="20"/>
      </memberdef>
      <memberdef kind="function" id="db/d72/classsamchon_1_1protocol_1_1ServerConnector_1aea5fc88ff34827a0cac5143d08b9c3b8" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>~ServerConnector</definition>
        <argsstring>()</argsstring>
        <name>~ServerConnector</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/OneDrive/Project/Samchon/framework/cpp/samchon/protocol/ServerConnector.hpp" line="65" column="1" bodyfile="D:/OneDrive/Project/Samchon/framework/cpp/samchon/protocol/ServerConnector.cpp" bodystart="21" bodyend="26"/>
      </memberdef>
      <memberdef kind="function" id="db/d72/classsamchon_1_1protocol_1_1ServerConnector_1a063213b2cc7c02bb2c40014e566b7f49" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>auto</type>
        <definition>virtual auto getIP</definition>
        <argsstring>() const  -&gt; std::string=0</argsstring>
        <name>getIP</name>
        <reimplementedby refid="df/d4a/classsamchon_1_1protocol_1_1ExternalServer_1a39e687dbb407a2d1cc1ba8b2b9299663">getIP</reimplementedby>
        <briefdescription>
<para>Destinatio IP. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/OneDrive/Project/Samchon/framework/cpp/samchon/protocol/ServerConnector.hpp" line="73" column="1"/>
      </memberdef>
      <memberdef kind="function" id="db/d72/classsamchon_1_1protocol_1_1ServerConnector_1a3ea06524e77ba55460f0fcc78c5ab089" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>auto</type>
        <definition>virtual auto getPort</definition>
        <argsstring>() const  -&gt; int=0</argsstring>
        <name>getPort</name>
        <reimplementedby refid="df/d4a/classsamchon_1_1protocol_1_1ExternalServer_1acd57c743eeecd39a8f5fe6e299a1b42d">getPort</reimplementedby>
        <briefdescription>
<para>Destination port. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/OneDrive/Project/Samchon/framework/cpp/samchon/protocol/ServerConnector.hpp" line="78" column="1"/>
      </memberdef>
      <memberdef kind="function" id="db/d72/classsamchon_1_1protocol_1_1ServerConnector_1a3b5b304edb7140e3330512d2e2247ab1" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>auto</type>
        <definition>auto getMyIP</definition>
        <argsstring>() const  -&gt; std::string</argsstring>
        <name>getMyIP</name>
        <reimplementedby refid="df/d4a/classsamchon_1_1protocol_1_1ExternalServer_1a2da1e4ba421fb34e8d711b41d76a9ddf">getMyIP</reimplementedby>
        <briefdescription>
<para>(optional) My IP, if you want to bind </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/OneDrive/Project/Samchon/framework/cpp/samchon/protocol/ServerConnector.hpp" line="83" column="1" bodyfile="D:/OneDrive/Project/Samchon/framework/cpp/samchon/protocol/ServerConnector.cpp" bodystart="28" bodyend="31"/>
      </memberdef>
      <memberdef kind="function" id="db/d72/classsamchon_1_1protocol_1_1ServerConnector_1a1396bf9b5defe9fa844a63b5cd40ac0e" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void connect</definition>
        <argsstring>()</argsstring>
        <name>connect</name>
        <reimplementedby refid="d8/dc2/classsamchon_1_1protocol_1_1WebServerConnector_1a1b77cbf0e475cedeb731a4a4e6a0f737">connect</reimplementedby>
        <briefdescription>
<para>Connect to a server. </para>        </briefdescription>
        <detaileddescription>
<para>Connects to a server with configured ip address and port number. After connection, listens data replied from the server (<ref refid="d3/dc8/classsamchon_1_1protocol_1_1IClient_1a458bbe4cf81360301586b2e62a7f9dd2" kindref="member">IClient::listen()</ref>). </para><para><simplesect kind="note"><para>It monopolies a thread </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/OneDrive/Project/Samchon/framework/cpp/samchon/protocol/ServerConnector.hpp" line="97" column="1" bodyfile="D:/OneDrive/Project/Samchon/framework/cpp/samchon/protocol/ServerConnector.cpp" bodystart="33" bodyend="52"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>A server connector for a physical client. </para>    </briefdescription>
    <detaileddescription>
<para><ref refid="db/d72/classsamchon_1_1protocol_1_1ServerConnector" kindref="compound">ServerConnector</ref> is a class for a physical client connecting a server. If you want to connect to a server, then implements this <ref refid="db/d72/classsamchon_1_1protocol_1_1ServerConnector" kindref="compound">ServerConnector</ref> and just override some methods like <ref refid="db/d72/classsamchon_1_1protocol_1_1ServerConnector_1a063213b2cc7c02bb2c40014e566b7f49" kindref="member">getIP()</ref>, <ref refid="db/d72/classsamchon_1_1protocol_1_1ServerConnector_1a3ea06524e77ba55460f0fcc78c5ab089" kindref="member">getPort()</ref> and <ref refid="d4/dcf/classsamchon_1_1protocol_1_1IProtocol_1a8debd8a0f208dbf9778fe66248443317" kindref="member">replyData()</ref>. That&apos;s all. </para><para>In Samchon Framework, package protocol, There are basic 3 + 1 components that can make any type of network system in Samchon Framework. The basic 3 components are <ref refid="d4/dcf/classsamchon_1_1protocol_1_1IProtocol" kindref="compound">IProtocol</ref>, <ref refid="d4/de8/classsamchon_1_1protocol_1_1IServer" kindref="compound">IServer</ref> and <ref refid="d3/dc8/classsamchon_1_1protocol_1_1IClient" kindref="compound">IClient</ref>. The last, surplus one is the <ref refid="db/d72/classsamchon_1_1protocol_1_1ServerConnector" kindref="compound">ServerConnector</ref>. Looking around classes in Samchon Framework, especially module master and slave which are designed for realizing distributed processing systems and parallel processing systems, physical client classes are all derived from this <ref refid="db/d72/classsamchon_1_1protocol_1_1ServerConnector" kindref="compound">ServerConnector</ref>. </para><para><image type="html" name="protocol_interface.png"></image>
 <image type="latex" name="protocol_interface.png"></image>
</para><para><simplesect kind="author"><para>Jeongho Nam </para></simplesect>
</para>    </detaileddescription>
    <inheritancegraph>
      <node id="2607">
        <label>IProtocol</label>
        <link refid="d4/dcf/classsamchon_1_1protocol_1_1IProtocol"/>
      </node>
      <node id="2605">
        <label>ServerConnector</label>
        <link refid="db/d72/classsamchon_1_1protocol_1_1ServerConnector"/>
        <childnode refid="2606" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2612">
        <label>DistributedSlaveServerMediator</label>
        <link refid="d0/d1d/classsamchon_1_1protocol_1_1master_1_1DistributedSlaveServerMediator"/>
        <childnode refid="2611" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2606">
        <label>IClient</label>
        <link refid="d3/dc8/classsamchon_1_1protocol_1_1IClient"/>
        <childnode refid="2607" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2613">
        <label>WebServerConnector</label>
        <link refid="d8/dc2/classsamchon_1_1protocol_1_1WebServerConnector"/>
        <childnode refid="2605" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2610">
        <label>ParallelServer</label>
        <link refid="d1/da1/classsamchon_1_1protocol_1_1master_1_1ParallelServer"/>
        <childnode refid="2608" relation="public-inheritance">
        </childnode>
        <childnode refid="2611" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2608">
        <label>ExternalServer</label>
        <link refid="df/d4a/classsamchon_1_1protocol_1_1ExternalServer"/>
        <childnode refid="2605" relation="private-inheritance">
        </childnode>
      </node>
      <node id="2611">
        <label>SlaveServer</label>
        <link refid="d2/da4/classsamchon_1_1protocol_1_1slave_1_1SlaveServer"/>
        <childnode refid="2608" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2609">
        <label>DistributedServer</label>
        <link refid="d7/da8/classsamchon_1_1protocol_1_1master_1_1DistributedServer"/>
        <childnode refid="2608" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2616">
        <label>IProtocol</label>
        <link refid="d4/dcf/classsamchon_1_1protocol_1_1IProtocol"/>
      </node>
      <node id="2614">
        <label>ServerConnector</label>
        <link refid="db/d72/classsamchon_1_1protocol_1_1ServerConnector"/>
        <childnode refid="2615" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2615">
        <label>IClient</label>
        <link refid="d3/dc8/classsamchon_1_1protocol_1_1IClient"/>
        <childnode refid="2616" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="D:/OneDrive/Project/Samchon/framework/cpp/samchon/protocol/ServerConnector.hpp" line="34" column="1" bodyfile="D:/OneDrive/Project/Samchon/framework/cpp/samchon/protocol/ServerConnector.hpp" bodystart="32" bodyend="98"/>
    <listofallmembers>
      <member refid="d3/dc8/classsamchon_1_1protocol_1_1IClient_1aa3ceab5738d3d60e963bb177d5847f14" prot="protected" virt="virtual"><scope>samchon::protocol::ServerConnector</scope><name>_replyData</name></member>
      <member refid="d3/dc8/classsamchon_1_1protocol_1_1IClient_1a68ee198dd9bae714dab92bb6374f8d95" prot="protected" virt="virtual"><scope>samchon::protocol::ServerConnector</scope><name>BUFFER_SIZE</name></member>
      <member refid="db/d72/classsamchon_1_1protocol_1_1ServerConnector_1a1396bf9b5defe9fa844a63b5cd40ac0e" prot="public" virt="virtual"><scope>samchon::protocol::ServerConnector</scope><name>connect</name></member>
      <member refid="db/d72/classsamchon_1_1protocol_1_1ServerConnector_1a2c8a123bd79b1b0b8cf8c39821d061a9" prot="protected" virt="non-virtual"><scope>samchon::protocol::ServerConnector</scope><name>endPoint</name></member>
      <member refid="db/d72/classsamchon_1_1protocol_1_1ServerConnector_1a063213b2cc7c02bb2c40014e566b7f49" prot="public" virt="pure-virtual"><scope>samchon::protocol::ServerConnector</scope><name>getIP</name></member>
      <member refid="db/d72/classsamchon_1_1protocol_1_1ServerConnector_1a3b5b304edb7140e3330512d2e2247ab1" prot="public" virt="virtual"><scope>samchon::protocol::ServerConnector</scope><name>getMyIP</name></member>
      <member refid="db/d72/classsamchon_1_1protocol_1_1ServerConnector_1a3ea06524e77ba55460f0fcc78c5ab089" prot="public" virt="pure-virtual"><scope>samchon::protocol::ServerConnector</scope><name>getPort</name></member>
      <member refid="d3/dc8/classsamchon_1_1protocol_1_1IClient_1a7d9b7003a224b6050168eede30b914a4" prot="public" virt="non-virtual"><scope>samchon::protocol::ServerConnector</scope><name>IClient</name></member>
      <member refid="db/d72/classsamchon_1_1protocol_1_1ServerConnector_1a56d1ac418c56108aa04334d9275f994d" prot="protected" virt="non-virtual"><scope>samchon::protocol::ServerConnector</scope><name>ioService</name></member>
      <member refid="d4/dcf/classsamchon_1_1protocol_1_1IProtocol_1a6258c530c328dc119e698bb7e7fe222a" prot="public" virt="non-virtual"><scope>samchon::protocol::ServerConnector</scope><name>IProtocol</name></member>
      <member refid="d3/dc8/classsamchon_1_1protocol_1_1IClient_1a458bbe4cf81360301586b2e62a7f9dd2" prot="public" virt="virtual"><scope>samchon::protocol::ServerConnector</scope><name>listen</name></member>
      <member refid="db/d72/classsamchon_1_1protocol_1_1ServerConnector_1af254b0011f97292de502f6cce428d331" prot="protected" virt="non-virtual"><scope>samchon::protocol::ServerConnector</scope><name>localEndPoint</name></member>
      <member refid="d4/dcf/classsamchon_1_1protocol_1_1IProtocol_1a8debd8a0f208dbf9778fe66248443317" prot="public" virt="virtual"><scope>samchon::protocol::ServerConnector</scope><name>replyData</name></member>
      <member refid="d3/dc8/classsamchon_1_1protocol_1_1IClient_1a7e9e36d7847d933abbf3b1eda35aab0d" prot="public" virt="virtual"><scope>samchon::protocol::ServerConnector</scope><name>sendData</name></member>
      <member refid="d3/dc8/classsamchon_1_1protocol_1_1IClient_1a4d6d58450d4b275cd6200bdcfb05403f" prot="protected" virt="non-virtual"><scope>samchon::protocol::ServerConnector</scope><name>sendMtx</name></member>
      <member refid="db/d72/classsamchon_1_1protocol_1_1ServerConnector_1a75c0ddf25b8f7b36837ed8abbe6edb29" prot="public" virt="non-virtual"><scope>samchon::protocol::ServerConnector</scope><name>ServerConnector</name></member>
      <member refid="d3/dc8/classsamchon_1_1protocol_1_1IClient_1ac7cf6524b1019c7fbaa210c68c05726e" prot="protected" virt="non-virtual"><scope>samchon::protocol::ServerConnector</scope><name>socket</name></member>
      <member refid="db/d72/classsamchon_1_1protocol_1_1ServerConnector_1a20f20ccd18667a334f2b58d1996c7f2c" prot="protected" virt="non-virtual"><scope>samchon::protocol::ServerConnector</scope><name>super</name></member>
      <member refid="d3/dc8/classsamchon_1_1protocol_1_1IClient_1ae8742ef162f2aee85a2e7b4b7ef1357f" prot="public" virt="virtual"><scope>samchon::protocol::ServerConnector</scope><name>~IClient</name></member>
      <member refid="d4/dcf/classsamchon_1_1protocol_1_1IProtocol_1a51a537c2b3a6ff5eb7b5ed859cc062ad" prot="public" virt="virtual"><scope>samchon::protocol::ServerConnector</scope><name>~IProtocol</name></member>
      <member refid="db/d72/classsamchon_1_1protocol_1_1ServerConnector_1aea5fc88ff34827a0cac5143d08b9c3b8" prot="public" virt="virtual"><scope>samchon::protocol::ServerConnector</scope><name>~ServerConnector</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
