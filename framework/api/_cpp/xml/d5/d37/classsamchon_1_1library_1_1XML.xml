<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.10">
  <compounddef id="d5/d37/classsamchon_1_1library_1_1XML" kind="class" language="C++" prot="public">
    <compoundname>samchon::library::XML</compoundname>
    <basecompoundref refid="d1/d4e/classsamchon_1_1Map" prot="public" virt="non-virtual">Map&lt; std::string, std::shared_ptr&lt; XMLList &gt; &gt;</basecompoundref>
    <includes refid="d4/d3b/XML_8hpp" local="no">XML.hpp</includes>
      <sectiondef kind="private-type">
      <memberdef kind="typedef" id="d5/d37/classsamchon_1_1library_1_1XML_1a99f6f4a426bc1a96ae88499744294ea9" prot="private" static="no">
        <type><ref refid="d1/d4e/classsamchon_1_1Map" kindref="compound">Map</ref>&lt; std::string, std::shared_ptr&lt; <ref refid="d8/dd4/namespacesamchon_1_1library_1a28b09b862589c02120500d4096f154a9" kindref="member">XMLList</ref> &gt; &gt;</type>
        <definition>typedef Map&lt;std::string, std::shared_ptr&lt;XMLList&gt; &gt; super</definition>
        <argsstring></argsstring>
        <name>super</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/OneDrive/Project/Samchon/framework/cpp/samchon/library/XML.hpp" line="76" column="1" bodyfile="D:/OneDrive/Project/Samchon/framework/cpp/samchon/library/XML.hpp" bodystart="76" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="d5/d37/classsamchon_1_1library_1_1XML_1ae120f732e7e1c5e4a16fa31d89f655df" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string tag</definition>
        <argsstring></argsstring>
        <name>tag</name>
        <briefdescription>
<para>Tag name. </para>        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>&lt;<bold>tag</bold> label=&apos;property&apos; /&gt;: tag =&gt; "tag" </para></listitem>
<listitem><para>&lt;<bold>price</bold> high=&apos;1500&apos; low=&apos;1300&apos; open=&apos;1450&apos; close=&apos;1320&apos; /&gt;: tag =&gt; "price" </para></listitem>
</itemizedlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/OneDrive/Project/Samchon/framework/cpp/samchon/library/XML.hpp" line="85" column="1" bodyfile="D:/OneDrive/Project/Samchon/framework/cpp/samchon/library/XML.hpp" bodystart="85" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d5/d37/classsamchon_1_1library_1_1XML_1a5c33da5929c9f2f9ef8d006d2350e6ec" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string value</definition>
        <argsstring></argsstring>
        <name>value</name>
        <briefdescription>
<para>Value of the <ref refid="d5/d37/classsamchon_1_1library_1_1XML" kindref="compound">XML</ref>. </para>        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>&lt;parameter name=&apos;age&apos; type=&apos;int&apos;&gt;<bold>26</bold>&lt;/parameter&gt;: value =&gt; 26 </para></listitem>
<listitem><para>&lt;price high=&apos;1500&apos; low=&apos;1300&apos; open=&apos;1450&apos; close=&apos;1320&apos; /&gt;: tag =&gt; null </para></listitem>
</itemizedlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/OneDrive/Project/Samchon/framework/cpp/samchon/library/XML.hpp" line="94" column="1" bodyfile="D:/OneDrive/Project/Samchon/framework/cpp/samchon/library/XML.hpp" bodystart="94" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d5/d37/classsamchon_1_1library_1_1XML_1ad551ae2d3174f16e47997ff241ac3c7c" prot="private" static="no" mutable="no">
        <type><ref refid="d1/d4e/classsamchon_1_1Map" kindref="compound">Map</ref>&lt; std::string, std::string &gt;</type>
        <definition>Map&lt;std::string, std::string&gt; propertyMap</definition>
        <argsstring></argsstring>
        <name>propertyMap</name>
        <briefdescription>
<para>Properties belongs to the <ref refid="d5/d37/classsamchon_1_1library_1_1XML" kindref="compound">XML</ref>. </para>        </briefdescription>
        <detaileddescription>
<para>A Dictionary of properties accessing each property by its key. <itemizedlist>
<listitem><para>&lt;price <bold>high=&apos;1500&apos; low=&apos;1300&apos; open=&apos;1450&apos; close=&apos;1320&apos;</bold> /&gt;: propertyMap =&gt; {{"high": 1500}, {"low": 1300}, {"open": 1450}, {"close", 1320}} </para></listitem>
<listitem><para>&lt;member <bold>id=&apos;jhnam88&apos; name=&apos;Jeongho+Nam&apos; comment=&apos;Hello.+My+name+is+Jeongho+Nam&apos;</bold> &gt;: propertyMap =&gt; {{"id", "jhnam88"}, {"name", "Jeongho Nam"}, {"comment", "Hello. My name is Jeongho Nam"}} </para></listitem>
</itemizedlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/OneDrive/Project/Samchon/framework/cpp/samchon/library/XML.hpp" line="106" column="1" bodyfile="D:/OneDrive/Project/Samchon/framework/cpp/samchon/library/XML.hpp" bodystart="106" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="d5/d37/classsamchon_1_1library_1_1XML_1af23c8e40077ea2696451fcb744d94dab" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>XML</definition>
        <argsstring>()</argsstring>
        <name>XML</name>
        <briefdescription>
<para>Default Constructor. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="warning"><para>Declare <ref refid="d5/d37/classsamchon_1_1library_1_1XML" kindref="compound">XML</ref> to managed by shared pointer </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/OneDrive/Project/Samchon/framework/cpp/samchon/library/XML.hpp" line="117" column="1" bodyfile="D:/OneDrive/Project/Samchon/framework/cpp/samchon/library/XML.cpp" bodystart="36" bodyend="41"/>
      </memberdef>
      <memberdef kind="function" id="d5/d37/classsamchon_1_1library_1_1XML_1ae6f4a430d0a5bd6cc3cc1445b42c3d94" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>XML</definition>
        <argsstring>(const XML &amp;)</argsstring>
        <name>XML</name>
        <param>
          <type>const <ref refid="d5/d37/classsamchon_1_1library_1_1XML" kindref="compound">XML</ref> &amp;</type>
          <defname>xml</defname>
        </param>
        <briefdescription>
<para>Copy Constructor. </para>        </briefdescription>
        <detaileddescription>
<para>Not copying (shared) pointer of children xml objects, but copying the real objects of children xml </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/OneDrive/Project/Samchon/framework/cpp/samchon/library/XML.hpp" line="126" column="1" bodyfile="D:/OneDrive/Project/Samchon/framework/cpp/samchon/library/XML.cpp" bodystart="42" bodyend="64"/>
      </memberdef>
      <memberdef kind="function" id="d5/d37/classsamchon_1_1library_1_1XML_1a8eb6b7be151f639d1f12580f4d912db6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>XML</definition>
        <argsstring>(XML &amp;&amp;)</argsstring>
        <name>XML</name>
        <param>
          <type><ref refid="d5/d37/classsamchon_1_1library_1_1XML" kindref="compound">XML</ref> &amp;&amp;</type>
          <defname>xml</defname>
        </param>
        <briefdescription>
<para>Move Constructor. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/OneDrive/Project/Samchon/framework/cpp/samchon/library/XML.hpp" line="131" column="1" bodyfile="D:/OneDrive/Project/Samchon/framework/cpp/samchon/library/XML.cpp" bodystart="65" bodyend="72"/>
      </memberdef>
      <memberdef kind="function" id="d5/d37/classsamchon_1_1library_1_1XML_1a4cff879e76ed334c041c02efde43e30c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>XML</definition>
        <argsstring>(WeakString)</argsstring>
        <name>XML</name>
        <param>
          <type><ref refid="d8/de4/classsamchon_1_1WeakString" kindref="compound">WeakString</ref></type>
          <defname>wStr</defname>
        </param>
        <briefdescription>
<para>Constructor by string. </para>        </briefdescription>
        <detaileddescription>
<para>Parses a string so that constructs an <ref refid="d5/d37/classsamchon_1_1library_1_1XML" kindref="compound">XML</ref> object</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>str</parametername>
</parameternamelist>
<parameterdescription>
<para>A string representing xml object </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="warning"><para>Declare <ref refid="d5/d37/classsamchon_1_1library_1_1XML" kindref="compound">XML</ref> to managed by shared pointer </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/OneDrive/Project/Samchon/framework/cpp/samchon/library/XML.hpp" line="142" column="1" bodyfile="D:/OneDrive/Project/Samchon/framework/cpp/samchon/library/XML.cpp" bodystart="74" bodyend="116"/>
      </memberdef>
      <memberdef kind="function" id="d5/d37/classsamchon_1_1library_1_1XML_1a5e1863a82ad6f8c473a97231ad4aa9a3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void push_back</definition>
        <argsstring>(const WeakString &amp;)</argsstring>
        <name>push_back</name>
        <param>
          <type>const <ref refid="d8/de4/classsamchon_1_1WeakString" kindref="compound">WeakString</ref> &amp;</type>
          <defname>str</defname>
        </param>
        <briefdescription>
<para>Add children xml objects by string representing them. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>str</parametername>
</parameternamelist>
<parameterdescription>
<para>A string representing xml objects whould be belonged to this <ref refid="d5/d37/classsamchon_1_1library_1_1XML" kindref="compound">XML</ref> </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/OneDrive/Project/Samchon/framework/cpp/samchon/library/XML.hpp" line="169" column="1" bodyfile="D:/OneDrive/Project/Samchon/framework/cpp/samchon/library/XML.cpp" bodystart="436" bodyend="453"/>
      </memberdef>
      <memberdef kind="function" id="d5/d37/classsamchon_1_1library_1_1XML_1a38fb730e82c00d0bc276601227dab09e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void push_back</definition>
        <argsstring>(const std::shared_ptr&lt; XML &gt;)</argsstring>
        <name>push_back</name>
        <param>
          <type>const std::shared_ptr&lt; <ref refid="d5/d37/classsamchon_1_1library_1_1XML" kindref="compound">XML</ref> &gt;</type>
        </param>
        <briefdescription>
<para>Add children xml. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>xml</parametername>
</parameternamelist>
<parameterdescription>
<para>An xml object you want to add </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/OneDrive/Project/Samchon/framework/cpp/samchon/library/XML.hpp" line="176" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d5/d37/classsamchon_1_1library_1_1XML_1ae5c2af770b47c64100b41aa5beaa1593" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void addAllProperty</definition>
        <argsstring>(const std::shared_ptr&lt; XML &gt;)</argsstring>
        <name>addAllProperty</name>
        <param>
          <type>const std::shared_ptr&lt; <ref refid="d5/d37/classsamchon_1_1library_1_1XML" kindref="compound">XML</ref> &gt;</type>
        </param>
        <briefdescription>
<para>Add all properties from another <ref refid="d5/d37/classsamchon_1_1library_1_1XML" kindref="compound">XML</ref>. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Copies all properties from target to here.</title><para></para></simplesect>
<simplesect kind="warning"><para>Not a category of assign, but an insert. </para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>xml</parametername>
</parameternamelist>
<parameterdescription>
<para>Target xml object to deliver its properties </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/OneDrive/Project/Samchon/framework/cpp/samchon/library/XML.hpp" line="187" column="1" bodyfile="D:/OneDrive/Project/Samchon/framework/cpp/samchon/library/XML.cpp" bodystart="466" bodyend="472"/>
      </memberdef>
      <memberdef kind="function" id="d5/d37/classsamchon_1_1library_1_1XML_1ad860c59e89f75a78fbb868f0837a6cec" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void setTag</definition>
        <argsstring>(const std::string &amp;)</argsstring>
        <name>setTag</name>
        <param>
          <type>const std::string &amp;</type>
          <defname>tag</defname>
        </param>
        <briefdescription>
<para>Set tag (identifier) of the <ref refid="d5/d37/classsamchon_1_1library_1_1XML" kindref="compound">XML</ref>. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="d5/d37/classsamchon_1_1library_1_1XML_1ae120f732e7e1c5e4a16fa31d89f655df" kindref="member">XML::tag</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/OneDrive/Project/Samchon/framework/cpp/samchon/library/XML.hpp" line="197" column="1" bodyfile="D:/OneDrive/Project/Samchon/framework/cpp/samchon/library/XML.cpp" bodystart="381" bodyend="384"/>
      </memberdef>
      <memberdef kind="function" id="d5/d37/classsamchon_1_1library_1_1XML_1ad44f9abb38554c265504900862502acb" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename _Ty</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void setValue</definition>
        <argsstring>(const _Ty &amp;val)</argsstring>
        <name>setValue</name>
        <param>
          <type>const _Ty &amp;</type>
          <declname>val</declname>
        </param>
        <briefdescription>
<para>Set value of the <ref refid="d5/d37/classsamchon_1_1library_1_1XML" kindref="compound">XML</ref>. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>_Ty</parametername>
</parameternamelist>
<parameterdescription>
<para>Type of the value </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>val</parametername>
</parameternamelist>
<parameterdescription>
<para>The value to set</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="warning"><para>Do not abuse values for expressing member variables <table rows="2" cols="2"><row>
<entry thead="yes"><para>Standard Usage </para></entry><entry thead="yes"><para>Non-standard usage abusing value  </para></entry></row>
<row>
<entry thead="no"><para>&lt;memberList&gt;<linebreak/>
 <nonbreakablespace/><nonbreakablespace/><nonbreakablespace/><nonbreakablespace/>&lt;member id=&apos;jhnam88&apos; name=&apos;Jeongho+Nam&apos; birthdate=&apos;1988-03-11&apos; /&gt;<linebreak/>
 <nonbreakablespace/><nonbreakablespace/><nonbreakablespace/><nonbreakablespace/>&lt;member id=&apos;master&apos; name=&apos;Administartor&apos; birthdate=&apos;2011-07-28&apos; /&gt;<linebreak/>
 &lt;/memberList&gt;  </para></entry><entry thead="no"><para>&lt;member&gt;<linebreak/>
 &lt;id&gt;jhnam88&lt;/id&gt;<linebreak/>
 &lt;name&gt;Jeongho+Nam&lt;/name&gt;<linebreak/>
 &lt;birthdate&gt;1988-03-11&lt;/birthdate&gt;<linebreak/>
 &lt;/member&gt;   </para></entry></row>
</table>
</para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/OneDrive/Project/Samchon/framework/cpp/samchon/library/XML.hpp" line="229" column="1" bodyfile="D:/OneDrive/Project/Samchon/framework/cpp/samchon/library/XML.hpp" bodystart="229" bodyend="235"/>
      </memberdef>
      <memberdef kind="function" id="d5/d37/classsamchon_1_1library_1_1XML_1ac8836398013b2232caf8fa0fe6550b02" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename _Ty</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void setProperty</definition>
        <argsstring>(const std::string &amp;name, const _Ty &amp;val)</argsstring>
        <name>setProperty</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>name</declname>
        </param>
        <param>
          <type>const _Ty &amp;</type>
          <declname>val</declname>
        </param>
        <briefdescription>
<para>Set a property with its key. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/OneDrive/Project/Samchon/framework/cpp/samchon/library/XML.hpp" line="241" column="1" bodyfile="D:/OneDrive/Project/Samchon/framework/cpp/samchon/library/XML.hpp" bodystart="241" bodyend="247"/>
      </memberdef>
      <memberdef kind="function" id="d5/d37/classsamchon_1_1library_1_1XML_1a4f3fab5c36819c602af3b368e85e1c3c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void eraseProperty</definition>
        <argsstring>(const std::string &amp;)</argsstring>
        <name>eraseProperty</name>
        <param>
          <type>const std::string &amp;</type>
          <defname>tag</defname>
        </param>
        <briefdescription>
<para>Erase a property by its key. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>key</parametername>
</parameternamelist>
<parameterdescription>
<para>The key of the property to erase </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>exception</parametername>
</parameternamelist>
<parameterdescription>
<para>Unable to find the element </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/OneDrive/Project/Samchon/framework/cpp/samchon/library/XML.hpp" line="255" column="1" bodyfile="D:/OneDrive/Project/Samchon/framework/cpp/samchon/library/XML.cpp" bodystart="473" bodyend="476"/>
      </memberdef>
      <memberdef kind="function" id="d5/d37/classsamchon_1_1library_1_1XML_1a08051d9d0c9864b7aa7444239938dd9b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void clearProperties</definition>
        <argsstring>()</argsstring>
        <name>clearProperties</name>
        <briefdescription>
<para>Remove all properties in the <ref refid="d5/d37/classsamchon_1_1library_1_1XML" kindref="compound">XML</ref>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/OneDrive/Project/Samchon/framework/cpp/samchon/library/XML.hpp" line="260" column="1" bodyfile="D:/OneDrive/Project/Samchon/framework/cpp/samchon/library/XML.cpp" bodystart="477" bodyend="480"/>
      </memberdef>
      <memberdef kind="function" id="d5/d37/classsamchon_1_1library_1_1XML_1a77cd0211b55808c20ec056a1bc2e7015" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>auto</type>
        <definition>auto getTag</definition>
        <argsstring>() const  -&gt; std::string</argsstring>
        <name>getTag</name>
        <briefdescription>
<para>Get key; identifer of the <ref refid="d5/d37/classsamchon_1_1library_1_1XML" kindref="compound">XML</ref>. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>tag, identifer of the <ref refid="d5/d37/classsamchon_1_1library_1_1XML" kindref="compound">XML</ref> </para></simplesect>
<simplesect kind="see"><para><ref refid="d5/d37/classsamchon_1_1library_1_1XML_1ae120f732e7e1c5e4a16fa31d89f655df" kindref="member">XML::tag</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/OneDrive/Project/Samchon/framework/cpp/samchon/library/XML.hpp" line="272" column="1" bodyfile="D:/OneDrive/Project/Samchon/framework/cpp/samchon/library/XML.cpp" bodystart="327" bodyend="330"/>
      </memberdef>
      <memberdef kind="function" id="d5/d37/classsamchon_1_1library_1_1XML_1a453b3d2a161870dcd5e7b0677ce5abf4" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class _Ty</type>
            <defval>std::string</defval>
          </param>
        </templateparamlist>
        <type>auto</type>
        <definition>auto getValue</definition>
        <argsstring>() const  -&gt; _Ty</argsstring>
        <name>getValue</name>
        <briefdescription>
<para>Get value of the <ref refid="d5/d37/classsamchon_1_1library_1_1XML" kindref="compound">XML</ref>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/OneDrive/Project/Samchon/framework/cpp/samchon/library/XML.hpp" line="277" column="1" bodyfile="D:/OneDrive/Project/Samchon/framework/cpp/samchon/library/XML.hpp" bodystart="277" bodyend="286"/>
      </memberdef>
      <memberdef kind="function" id="d5/d37/classsamchon_1_1library_1_1XML_1a65a63065190343e9faf71b61b64368cf" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class _Ty</type>
            <defval>std::string</defval>
          </param>
        </templateparamlist>
        <type>auto</type>
        <definition>auto getProperty</definition>
        <argsstring>(const std::string &amp;key) const  -&gt; _Ty</argsstring>
        <name>getProperty</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>key</declname>
        </param>
        <briefdescription>
<para>Get property. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/OneDrive/Project/Samchon/framework/cpp/samchon/library/XML.hpp" line="291" column="1" bodyfile="D:/OneDrive/Project/Samchon/framework/cpp/samchon/library/XML.hpp" bodystart="291" bodyend="300"/>
      </memberdef>
      <memberdef kind="function" id="d5/d37/classsamchon_1_1library_1_1XML_1aa19ff80345b1a8e25d5cfc8cb75f4183" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>auto</type>
        <definition>auto hasProperty</definition>
        <argsstring>(const std::string &amp;) const  -&gt; bool</argsstring>
        <name>hasProperty</name>
        <param>
          <type>const std::string &amp;</type>
          <defname>tag</defname>
        </param>
        <briefdescription>
<para>Test wheter a property exists or not. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/OneDrive/Project/Samchon/framework/cpp/samchon/library/XML.hpp" line="305" column="1" bodyfile="D:/OneDrive/Project/Samchon/framework/cpp/samchon/library/XML.cpp" bodystart="488" bodyend="491"/>
      </memberdef>
      <memberdef kind="function" id="d5/d37/classsamchon_1_1library_1_1XML_1aefd1f0359e4f3938163996730f5f36fc" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>auto</type>
        <definition>auto getPropertyMap</definition>
        <argsstring>() const  -&gt; const Map&lt; std::string, std::string &gt; &amp;</argsstring>
        <name>getPropertyMap</name>
        <briefdescription>
<para>Get propertyMap. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/OneDrive/Project/Samchon/framework/cpp/samchon/library/XML.hpp" line="310" column="1" bodyfile="D:/OneDrive/Project/Samchon/framework/cpp/samchon/library/XML.cpp" bodystart="482" bodyend="485"/>
      </memberdef>
      <memberdef kind="function" id="d5/d37/classsamchon_1_1library_1_1XML_1afb7b98677a69b1610c37c8f90503d729" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>auto</type>
        <definition>auto toString</definition>
        <argsstring>(size_t level=0) const  -&gt; std::string</argsstring>
        <name>toString</name>
        <param>
          <type>size_t</type>
          <declname>level</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
<para>Get the string content. </para>        </briefdescription>
        <detaileddescription>
<para>Returns a string representation of the <ref refid="d5/d37/classsamchon_1_1library_1_1XML" kindref="compound">XML</ref> and its all children</para><para><simplesect kind="return"><para>A string representing the xml </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/OneDrive/Project/Samchon/framework/cpp/samchon/library/XML.hpp" line="333" column="1" bodyfile="D:/OneDrive/Project/Samchon/framework/cpp/samchon/library/XML.cpp" bodystart="644" bodyend="660"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="d5/d37/classsamchon_1_1library_1_1XML_1a087c0e0353bce4890d337e3efa7d530d" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>XML</definition>
        <argsstring>(XML *, WeakString &amp;)</argsstring>
        <name>XML</name>
        <param>
          <type><ref refid="d5/d37/classsamchon_1_1library_1_1XML" kindref="compound">XML</ref> *</type>
          <defname>parent</defname>
        </param>
        <param>
          <type><ref refid="d8/de4/classsamchon_1_1WeakString" kindref="compound">WeakString</ref> &amp;</type>
          <defname>str</defname>
        </param>
        <briefdescription>
<para>Protected Constructor by string for child. </para>        </briefdescription>
        <detaileddescription>
<para>Parses a string so that creates an <ref refid="d5/d37/classsamchon_1_1library_1_1XML" kindref="compound">XML</ref> object It is called for creating children <ref refid="d5/d37/classsamchon_1_1library_1_1XML" kindref="compound">XML</ref> objects from parent <ref refid="d5/d37/classsamchon_1_1library_1_1XML" kindref="compound">XML</ref> object.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>parent</parametername>
</parameternamelist>
<parameterdescription>
<para>Parent object who will contains this <ref refid="d5/d37/classsamchon_1_1library_1_1XML" kindref="compound">XML</ref> object </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>str</parametername>
</parameternamelist>
<parameterdescription>
<para>A string to be parsed </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/OneDrive/Project/Samchon/framework/cpp/samchon/library/XML.hpp" line="155" column="1" bodyfile="D:/OneDrive/Project/Samchon/framework/cpp/samchon/library/XML.cpp" bodystart="117" bodyend="124"/>
      </memberdef>
      <memberdef kind="function" id="d5/d37/classsamchon_1_1library_1_1XML_1a520282eb9a104a9af078b3f011bbd1c6" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void construct</definition>
        <argsstring>(WeakString &amp;)</argsstring>
        <name>construct</name>
        <param>
          <type><ref refid="d8/de4/classsamchon_1_1WeakString" kindref="compound">WeakString</ref> &amp;</type>
          <defname>wStr</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/OneDrive/Project/Samchon/framework/cpp/samchon/library/XML.hpp" line="157" column="1" bodyfile="D:/OneDrive/Project/Samchon/framework/cpp/samchon/library/XML.cpp" bodystart="126" bodyend="132"/>
      </memberdef>
      <memberdef kind="function" id="d5/d37/classsamchon_1_1library_1_1XML_1a9ae6f2cea7e58f8241d33cbb03fb1bb4" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void constructKey</definition>
        <argsstring>(WeakString &amp;)</argsstring>
        <name>constructKey</name>
        <param>
          <type><ref refid="d8/de4/classsamchon_1_1WeakString" kindref="compound">WeakString</ref> &amp;</type>
          <defname>wStr</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/OneDrive/Project/Samchon/framework/cpp/samchon/library/XML.hpp" line="158" column="1" bodyfile="D:/OneDrive/Project/Samchon/framework/cpp/samchon/library/XML.cpp" bodystart="133" bodyend="151"/>
      </memberdef>
      <memberdef kind="function" id="d5/d37/classsamchon_1_1library_1_1XML_1a9c7805fe81359c65176232b4892debed" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void constructProperty</definition>
        <argsstring>(WeakString &amp;)</argsstring>
        <name>constructProperty</name>
        <param>
          <type><ref refid="d8/de4/classsamchon_1_1WeakString" kindref="compound">WeakString</ref> &amp;</type>
          <defname>wStr</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/OneDrive/Project/Samchon/framework/cpp/samchon/library/XML.hpp" line="159" column="1" bodyfile="D:/OneDrive/Project/Samchon/framework/cpp/samchon/library/XML.cpp" bodystart="152" bodyend="232"/>
      </memberdef>
      <memberdef kind="function" id="d5/d37/classsamchon_1_1library_1_1XML_1a3ecb50bed5769ff378faae40e3e7e4b9" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>auto</type>
        <definition>auto constructValue</definition>
        <argsstring>(WeakString &amp;) -&gt; bool</argsstring>
        <name>constructValue</name>
        <param>
          <type><ref refid="d8/de4/classsamchon_1_1WeakString" kindref="compound">WeakString</ref> &amp;</type>
          <defname>wStr</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/OneDrive/Project/Samchon/framework/cpp/samchon/library/XML.hpp" line="160" column="1" bodyfile="D:/OneDrive/Project/Samchon/framework/cpp/samchon/library/XML.cpp" bodystart="233" bodyend="256"/>
      </memberdef>
      <memberdef kind="function" id="d5/d37/classsamchon_1_1library_1_1XML_1a48740b2781916c5ec3c2ad6d345aa4c9" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void constructChildren</definition>
        <argsstring>(WeakString &amp;)</argsstring>
        <name>constructChildren</name>
        <param>
          <type><ref refid="d8/de4/classsamchon_1_1WeakString" kindref="compound">WeakString</ref> &amp;</type>
          <defname>wStr</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/OneDrive/Project/Samchon/framework/cpp/samchon/library/XML.hpp" line="161" column="1" bodyfile="D:/OneDrive/Project/Samchon/framework/cpp/samchon/library/XML.cpp" bodystart="257" bodyend="322"/>
      </memberdef>
      <memberdef kind="function" id="d5/d37/classsamchon_1_1library_1_1XML_1acf283ef347d6000019810abea96d208d" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>auto</type>
        <definition>auto calcMinIndex</definition>
        <argsstring>(const std::vector&lt; size_t &gt; &amp;) const  -&gt; size_t</argsstring>
        <name>calcMinIndex</name>
        <param>
          <type>const std::vector&lt; size_t &gt; &amp;</type>
          <defname>vec</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/OneDrive/Project/Samchon/framework/cpp/samchon/library/XML.hpp" line="316" column="1" bodyfile="D:/OneDrive/Project/Samchon/framework/cpp/samchon/library/XML.cpp" bodystart="579" bodyend="587"/>
      </memberdef>
      <memberdef kind="function" id="d5/d37/classsamchon_1_1library_1_1XML_1ad31ef6f3b445c4b204faa906b06861c9" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>auto</type>
        <definition>auto encodeValue</definition>
        <argsstring>(const WeakString &amp;) const  -&gt; std::string</argsstring>
        <name>encodeValue</name>
        <param>
          <type>const <ref refid="d8/de4/classsamchon_1_1WeakString" kindref="compound">WeakString</ref> &amp;</type>
          <defname>str</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/OneDrive/Project/Samchon/framework/cpp/samchon/library/XML.hpp" line="318" column="1" bodyfile="D:/OneDrive/Project/Samchon/framework/cpp/samchon/library/XML.cpp" bodystart="621" bodyend="631"/>
      </memberdef>
      <memberdef kind="function" id="d5/d37/classsamchon_1_1library_1_1XML_1af62a8d1b0f44a44fbcd110daa1167cb9" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>auto</type>
        <definition>auto decodeValue</definition>
        <argsstring>(const WeakString &amp;) const  -&gt; std::string</argsstring>
        <name>decodeValue</name>
        <param>
          <type>const <ref refid="d8/de4/classsamchon_1_1WeakString" kindref="compound">WeakString</ref> &amp;</type>
          <defname>str</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/OneDrive/Project/Samchon/framework/cpp/samchon/library/XML.hpp" line="319" column="1" bodyfile="D:/OneDrive/Project/Samchon/framework/cpp/samchon/library/XML.cpp" bodystart="632" bodyend="642"/>
      </memberdef>
      <memberdef kind="function" id="d5/d37/classsamchon_1_1library_1_1XML_1a188d60af43030e57f625d5cf070b0e62" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>auto</type>
        <definition>auto encodeProperty</definition>
        <argsstring>(const WeakString &amp;) const  -&gt; std::string</argsstring>
        <name>encodeProperty</name>
        <param>
          <type>const <ref refid="d8/de4/classsamchon_1_1WeakString" kindref="compound">WeakString</ref> &amp;</type>
          <defname>str</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/OneDrive/Project/Samchon/framework/cpp/samchon/library/XML.hpp" line="320" column="1" bodyfile="D:/OneDrive/Project/Samchon/framework/cpp/samchon/library/XML.cpp" bodystart="589" bodyend="604"/>
      </memberdef>
      <memberdef kind="function" id="d5/d37/classsamchon_1_1library_1_1XML_1a03ced0c2d18e8cb28724460f1bce2aa0" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>auto</type>
        <definition>auto decodeProperty</definition>
        <argsstring>(const WeakString &amp;) const  -&gt; std::string</argsstring>
        <name>decodeProperty</name>
        <param>
          <type>const <ref refid="d8/de4/classsamchon_1_1WeakString" kindref="compound">WeakString</ref> &amp;</type>
          <defname>str</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/OneDrive/Project/Samchon/framework/cpp/samchon/library/XML.hpp" line="321" column="1" bodyfile="D:/OneDrive/Project/Samchon/framework/cpp/samchon/library/XML.cpp" bodystart="605" bodyend="620"/>
      </memberdef>
      <memberdef kind="function" id="d5/d37/classsamchon_1_1library_1_1XML_1a441329747b0b07fe41143fff4221f293" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void fetchString</definition>
        <argsstring>(std::list&lt; std::string, std::allocator&lt; std::string &gt;&gt; &amp;, size_t) const </argsstring>
        <name>fetchString</name>
        <param>
          <type>std::list&lt; std::string, std::allocator&lt; std::string &gt;&gt; &amp;</type>
        </param>
        <param>
          <type>size_t</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/OneDrive/Project/Samchon/framework/cpp/samchon/library/XML.hpp" line="336" column="1" bodyfile="D:/OneDrive/Project/Samchon/framework/cpp/samchon/library/XML.cpp" bodystart="661" bodyend="696"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para><ref refid="d5/d37/classsamchon_1_1library_1_1XML" kindref="compound">XML</ref> is a class representing xml object. </para>    </briefdescription>
    <detaileddescription>
<para>The <ref refid="d5/d37/classsamchon_1_1library_1_1XML" kindref="compound">XML</ref> class provides methods and properties for working with <ref refid="d5/d37/classsamchon_1_1library_1_1XML" kindref="compound">XML</ref> objects. </para><para>The <ref refid="d5/d37/classsamchon_1_1library_1_1XML" kindref="compound">XML</ref> class (along with the XMLList and Namespace) implements the powerful XML-handling standard defined in ECMAScript for <ref refid="d5/d37/classsamchon_1_1library_1_1XML" kindref="compound">XML</ref> (E4X) specification. </para><para><ref refid="d5/d37/classsamchon_1_1library_1_1XML" kindref="compound">XML</ref> class has a recursive, hierarchical relationship. </para><para>All <ref refid="d5/d37/classsamchon_1_1library_1_1XML" kindref="compound">XML</ref> objects&apos;re managed by shared_ptr. </para><para><itemizedlist>
<listitem><para><ref refid="d5/d37/classsamchon_1_1library_1_1XML" kindref="compound">XML</ref> contains XMLList from dictionary of shared pointer&lt;XMLList&gt; </para></listitem>
<listitem><para>XMLList contains <ref refid="d5/d37/classsamchon_1_1library_1_1XML" kindref="compound">XML</ref> from vector of shared pointer&lt;XML&gt; </para></listitem>
<listitem><para>Even if user creates an <ref refid="d5/d37/classsamchon_1_1library_1_1XML" kindref="compound">XML</ref> object directly, it&apos;s the basic principle to use shared pointer</para></listitem>
</itemizedlist>
<image type="html" name="library_xml.png"></image>
 <image type="latex" name="library_xml.png"></image>
</para><para><simplesect kind="note"><para></para></simplesect>
Parsing comment is not supported yet. </para><para>It&apos;s not recommeded to creating an <ref refid="d5/d37/classsamchon_1_1library_1_1XML" kindref="compound">XML</ref> object which is not being managed by shared pointer. </para><para><simplesect kind="warning"><para></para></simplesect>
Do not abuse values for expressing member variables. </para><para><table rows="2" cols="2"><row>
<entry thead="yes"><para>Standard Usage </para></entry><entry thead="yes"><para>Non-standard usage abusing value  </para></entry></row>
<row>
<entry thead="no"><para>&lt;memberList&gt;<linebreak/>
 <nonbreakablespace/><nonbreakablespace/><nonbreakablespace/><nonbreakablespace/> &lt;member id=&apos;jhnam88&apos; name=&apos;Jeongho+Nam&apos; birthdate=&apos;1988-03-11&apos; /&gt;<linebreak/>
 <nonbreakablespace/><nonbreakablespace/><nonbreakablespace/><nonbreakablespace/> &lt;member id=&apos;master&apos; name=&apos;Administartor&apos; birthdate=&apos;2011-07-28&apos; /&gt;<linebreak/>
 &lt;/memberList&gt;  </para></entry><entry thead="no"><para>&lt;member&gt;<linebreak/>
 <nonbreakablespace/><nonbreakablespace/><nonbreakablespace/><nonbreakablespace/> &lt;id&gt;jhnam88&lt;/id&gt;<linebreak/>
 <nonbreakablespace/><nonbreakablespace/><nonbreakablespace/><nonbreakablespace/> &lt;name&gt;Jeongho+Nam&lt;/name&gt;<linebreak/>
 <nonbreakablespace/><nonbreakablespace/><nonbreakablespace/><nonbreakablespace/> &lt;birthdate&gt;1988-03-11&lt;/birthdate&gt;<linebreak/>
 &lt;/member&gt;   </para></entry></row>
</table>
</para><para><programlisting><codeline lineno="1"><highlight class="preprocessor">#include<sp/>&lt;iostream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vector&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;samchon/library/XML.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>_WIN64</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>ifdef<sp/>_DEBUG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/>pragma<sp/>comment(lib,<sp/>&quot;x64/Debug/SamchonFramework.lib&quot;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/>pragma<sp/>comment(lib,<sp/>&quot;x64/Release/SamchonFramework.lib&quot;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>ifdef<sp/>_DEBUG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/>pragma<sp/>comment(lib,<sp/>&quot;Debug/SamchonFramework.lib&quot;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/>pragma<sp/>comment(lib,<sp/>&quot;Release/SamchonFramework.lib&quot;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal"><ref refid="d8/dcc/namespacestd" kindref="compound">std</ref>;</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal"><ref refid="d8/dd4/namespacesamchon_1_1library" kindref="compound">samchon::library</ref>;</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">Member</highlight></codeline>
<codeline lineno="25"><highlight class="normal">{</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>id;</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>name;</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>age;</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>grade;</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>toXML()<sp/>const<sp/>-&gt;<sp/>shared_ptr&lt;XML&gt;</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>shared_ptr&lt;XML&gt;<sp/>xml(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="d5/d37/classsamchon_1_1library_1_1XML_1af23c8e40077ea2696451fcb744d94dab" kindref="member">XML</ref>());</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xml-&gt;setTag(</highlight><highlight class="stringliteral">&quot;member&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xml-&gt;setProperty(</highlight><highlight class="stringliteral">&quot;id&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xml-&gt;setProperty(</highlight><highlight class="stringliteral">&quot;name&quot;</highlight><highlight class="normal">,<sp/>name);</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xml-&gt;setProperty(</highlight><highlight class="stringliteral">&quot;age&quot;</highlight><highlight class="normal">,<sp/>age);</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xml-&gt;setProperty(</highlight><highlight class="stringliteral">&quot;grade&quot;</highlight><highlight class="normal">,<sp/>grade);</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>xml;</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="42"><highlight class="normal">};</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>main()</highlight></codeline>
<codeline lineno="45"><highlight class="normal">{</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//DECLARE<sp/>An<sp/>XML<sp/>WITH<sp/>MEMBER_ARRAY<sp/>TAG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/>shared_ptr&lt;XML&gt;<sp/>xml(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="d5/d37/classsamchon_1_1library_1_1XML_1af23c8e40077ea2696451fcb744d94dab" kindref="member">XML</ref>());</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/>xml-&gt;setTag(</highlight><highlight class="stringliteral">&quot;memberArray&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//ADD<sp/>MEMBER(S)<sp/>TO<sp/>XML</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/>vector&lt;struct<sp/>Member&gt;<sp/>memberArray<sp/>=</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;samchon&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Jeongho<sp/>Nam&quot;</highlight><highlight class="normal">,<sp/>27,<sp/>1},</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;gkyu&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Kwangkyu<sp/>Ko&quot;</highlight><highlight class="normal">,<sp/>25,<sp/>1},</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;guest&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;John<sp/>Doe&quot;</highlight><highlight class="normal">,<sp/>99,<sp/>4}</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>memberArray.size();<sp/>i++)</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xml-&gt;push_back(<sp/>memberArray[i].toXML()<sp/>);</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//ADD<sp/>FILE_LIST<sp/>BY<sp/>STRING<sp/>DIRECTLY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/>xml-&gt;push_back</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/>(</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal">(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">)<sp/>+</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&lt;fileList&gt;\n&quot;</highlight><highlight class="normal"><sp/>+<sp/></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&lt;file<sp/>extension=&apos;pdf&apos;<sp/>name=&apos;API&apos;<sp/>/&gt;&quot;</highlight><highlight class="normal"><sp/>+</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&lt;file<sp/>extension=&apos;pdf&apos;<sp/>name=&apos;Guidance+For+Developer&apos;&gt;Damaged&lt;/file&gt;&quot;</highlight><highlight class="normal"><sp/>+<sp/></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&lt;file<sp/>extension=&apos;docx&apos;<sp/>name=&apos;Resume&apos;<sp/>/&gt;&quot;</highlight><highlight class="normal"><sp/>+</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&lt;file<sp/>extension=&apos;jpg&apos;<sp/>name=&apos;My+House&apos;<sp/>/&gt;&quot;</highlight><highlight class="normal"><sp/>+</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&lt;file<sp/>extension=&apos;xlsx&apos;<sp/>name=&apos;Grades&apos;<sp/>/&gt;&quot;</highlight><highlight class="normal"><sp/>+</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&lt;/fileList&gt;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;-----------------------------------------------------------------&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>Get<sp/>Properties<sp/>And<sp/>Values&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;-----------------------------------------------------------------&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Age<sp/>of<sp/>2nd<sp/>member:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>xml-&gt;get(</highlight><highlight class="stringliteral">&quot;member&quot;</highlight><highlight class="normal">)-&gt;at(1)-&gt;getProperty&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&gt;(</highlight><highlight class="stringliteral">&quot;age&quot;</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Age<sp/>of<sp/>1st<sp/>member:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>xml-&gt;get(</highlight><highlight class="stringliteral">&quot;member&quot;</highlight><highlight class="normal">)-&gt;at(0)-&gt;getProperty(</highlight><highlight class="stringliteral">&quot;id&quot;</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/>endl<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;File<sp/>name<sp/>and<sp/>extension<sp/>of<sp/>5th:<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>xml-&gt;get(</highlight><highlight class="stringliteral">&quot;fileList&quot;</highlight><highlight class="normal">)-&gt;at(0)-&gt;get(</highlight><highlight class="stringliteral">&quot;file&quot;</highlight><highlight class="normal">)-&gt;at(4)-&gt;getProperty(</highlight><highlight class="stringliteral">&quot;name&quot;</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;.&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>xml-&gt;get(</highlight><highlight class="stringliteral">&quot;fileList&quot;</highlight><highlight class="normal">)-&gt;at(0)-&gt;get(</highlight><highlight class="stringliteral">&quot;file&quot;</highlight><highlight class="normal">)-&gt;at(4)-&gt;getProperty(</highlight><highlight class="stringliteral">&quot;extension&quot;</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Value<sp/>of<sp/>2nd<sp/>file:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>xml-&gt;get(</highlight><highlight class="stringliteral">&quot;fileList&quot;</highlight><highlight class="normal">)-&gt;at(0)-&gt;get(</highlight><highlight class="stringliteral">&quot;file&quot;</highlight><highlight class="normal">)-&gt;at(1)-&gt;getValue()<sp/>&lt;&lt;<sp/>endl<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;-----------------------------------------------------------------&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>XML<sp/>to<sp/>String:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;-----------------------------------------------------------------&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/>xml-&gt;toString()<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/>system(</highlight><highlight class="stringliteral">&quot;pause&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="90"><highlight class="normal">}</highlight></codeline>
</programlisting></para><para><simplesect kind="see"><para><ref refid="d8/dd4/namespacesamchon_1_1library" kindref="compound">samchon::library</ref> </para></simplesect>
<simplesect kind="author"><para>Jeongho Nam </para></simplesect>
</para>    </detaileddescription>
    <inheritancegraph>
      <node id="2856">
        <label>Map&lt; std::string, std::shared_ptr&lt; XMLList &gt; &gt;</label>
        <link refid="d1/d4e/classsamchon_1_1Map"/>
      </node>
      <node id="2855">
        <label>XML</label>
        <link refid="d5/d37/classsamchon_1_1library_1_1XML"/>
        <childnode refid="2856" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2858">
        <label>Map&lt; std::string, std::shared_ptr&lt; XMLList &gt; &gt;</label>
        <link refid="d1/d4e/classsamchon_1_1Map"/>
      </node>
      <node id="2857">
        <label>XML</label>
        <link refid="d5/d37/classsamchon_1_1library_1_1XML"/>
        <childnode refid="2858" relation="public-inheritance">
        </childnode>
        <childnode refid="2859" relation="usage">
          <edgelabel>propertyMap</edgelabel>
        </childnode>
      </node>
      <node id="2859">
        <label>Map&lt; std::string, std::string &gt;</label>
        <link refid="d1/d4e/classsamchon_1_1Map"/>
      </node>
    </collaborationgraph>
    <location file="D:/OneDrive/Project/Samchon/framework/cpp/samchon/library/XML.hpp" line="74" column="1" bodyfile="D:/OneDrive/Project/Samchon/framework/cpp/samchon/library/XML.hpp" bodystart="72" bodyend="337"/>
    <listofallmembers>
      <member refid="d5/d37/classsamchon_1_1library_1_1XML_1ae5c2af770b47c64100b41aa5beaa1593" prot="public" virt="non-virtual"><scope>samchon::library::XML</scope><name>addAllProperty</name></member>
      <member refid="d5/d37/classsamchon_1_1library_1_1XML_1acf283ef347d6000019810abea96d208d" prot="private" virt="non-virtual"><scope>samchon::library::XML</scope><name>calcMinIndex</name></member>
      <member refid="d5/d37/classsamchon_1_1library_1_1XML_1a08051d9d0c9864b7aa7444239938dd9b" prot="public" virt="non-virtual"><scope>samchon::library::XML</scope><name>clearProperties</name></member>
      <member refid="d5/d37/classsamchon_1_1library_1_1XML_1a520282eb9a104a9af078b3f011bbd1c6" prot="private" virt="non-virtual"><scope>samchon::library::XML</scope><name>construct</name></member>
      <member refid="d5/d37/classsamchon_1_1library_1_1XML_1a48740b2781916c5ec3c2ad6d345aa4c9" prot="private" virt="non-virtual"><scope>samchon::library::XML</scope><name>constructChildren</name></member>
      <member refid="d5/d37/classsamchon_1_1library_1_1XML_1a9ae6f2cea7e58f8241d33cbb03fb1bb4" prot="private" virt="non-virtual"><scope>samchon::library::XML</scope><name>constructKey</name></member>
      <member refid="d5/d37/classsamchon_1_1library_1_1XML_1a9c7805fe81359c65176232b4892debed" prot="private" virt="non-virtual"><scope>samchon::library::XML</scope><name>constructProperty</name></member>
      <member refid="d5/d37/classsamchon_1_1library_1_1XML_1a3ecb50bed5769ff378faae40e3e7e4b9" prot="private" virt="non-virtual"><scope>samchon::library::XML</scope><name>constructValue</name></member>
      <member refid="d5/d37/classsamchon_1_1library_1_1XML_1a03ced0c2d18e8cb28724460f1bce2aa0" prot="private" virt="non-virtual"><scope>samchon::library::XML</scope><name>decodeProperty</name></member>
      <member refid="d5/d37/classsamchon_1_1library_1_1XML_1af62a8d1b0f44a44fbcd110daa1167cb9" prot="private" virt="non-virtual"><scope>samchon::library::XML</scope><name>decodeValue</name></member>
      <member refid="d5/d37/classsamchon_1_1library_1_1XML_1a188d60af43030e57f625d5cf070b0e62" prot="private" virt="non-virtual"><scope>samchon::library::XML</scope><name>encodeProperty</name></member>
      <member refid="d5/d37/classsamchon_1_1library_1_1XML_1ad31ef6f3b445c4b204faa906b06861c9" prot="private" virt="non-virtual"><scope>samchon::library::XML</scope><name>encodeValue</name></member>
      <member refid="d5/d37/classsamchon_1_1library_1_1XML_1a4f3fab5c36819c602af3b368e85e1c3c" prot="public" virt="non-virtual"><scope>samchon::library::XML</scope><name>eraseProperty</name></member>
      <member refid="d5/d37/classsamchon_1_1library_1_1XML_1a441329747b0b07fe41143fff4221f293" prot="private" virt="non-virtual"><scope>samchon::library::XML</scope><name>fetchString</name></member>
      <member refid="d1/d4e/classsamchon_1_1Map_1a545c462f3efea27e9689670c776cd3d3" prot="public" virt="non-virtual"><scope>samchon::library::XML</scope><name>get</name></member>
      <member refid="d1/d4e/classsamchon_1_1Map_1ace518b0649014b10ec69a455a78ef7dc" prot="public" virt="non-virtual"><scope>samchon::library::XML</scope><name>get</name></member>
      <member refid="d5/d37/classsamchon_1_1library_1_1XML_1a65a63065190343e9faf71b61b64368cf" prot="public" virt="non-virtual"><scope>samchon::library::XML</scope><name>getProperty</name></member>
      <member refid="d5/d37/classsamchon_1_1library_1_1XML_1aefd1f0359e4f3938163996730f5f36fc" prot="public" virt="non-virtual"><scope>samchon::library::XML</scope><name>getPropertyMap</name></member>
      <member refid="d5/d37/classsamchon_1_1library_1_1XML_1a77cd0211b55808c20ec056a1bc2e7015" prot="public" virt="non-virtual"><scope>samchon::library::XML</scope><name>getTag</name></member>
      <member refid="d5/d37/classsamchon_1_1library_1_1XML_1a453b3d2a161870dcd5e7b0677ce5abf4" prot="public" virt="non-virtual"><scope>samchon::library::XML</scope><name>getValue</name></member>
      <member refid="d1/d4e/classsamchon_1_1Map_1a7d21fcd2b73466da3ca65f2dae888d3f" prot="public" virt="non-virtual"><scope>samchon::library::XML</scope><name>has</name></member>
      <member refid="d5/d37/classsamchon_1_1library_1_1XML_1aa19ff80345b1a8e25d5cfc8cb75f4183" prot="public" virt="non-virtual"><scope>samchon::library::XML</scope><name>hasProperty</name></member>
      <member refid="d1/d4e/classsamchon_1_1Map_1aeb58271a651715110b73bc6553553a9c" prot="public" virt="non-virtual"><scope>samchon::library::XML</scope><name>pop</name></member>
      <member refid="d5/d37/classsamchon_1_1library_1_1XML_1ad551ae2d3174f16e47997ff241ac3c7c" prot="private" virt="non-virtual"><scope>samchon::library::XML</scope><name>propertyMap</name></member>
      <member refid="d5/d37/classsamchon_1_1library_1_1XML_1a5e1863a82ad6f8c473a97231ad4aa9a3" prot="public" virt="non-virtual"><scope>samchon::library::XML</scope><name>push_back</name></member>
      <member refid="d5/d37/classsamchon_1_1library_1_1XML_1a38fb730e82c00d0bc276601227dab09e" prot="public" virt="non-virtual"><scope>samchon::library::XML</scope><name>push_back</name></member>
      <member refid="d1/d4e/classsamchon_1_1Map_1a12916456879276c43d0b3ca12e3cf89b" prot="public" virt="non-virtual"><scope>samchon::library::XML</scope><name>set</name></member>
      <member refid="d1/d4e/classsamchon_1_1Map_1a9f8ba1582bd870c7ce22db5f611b8775" prot="public" virt="non-virtual"><scope>samchon::library::XML</scope><name>set</name></member>
      <member refid="d5/d37/classsamchon_1_1library_1_1XML_1ac8836398013b2232caf8fa0fe6550b02" prot="public" virt="non-virtual"><scope>samchon::library::XML</scope><name>setProperty</name></member>
      <member refid="d5/d37/classsamchon_1_1library_1_1XML_1ad860c59e89f75a78fbb868f0837a6cec" prot="public" virt="non-virtual"><scope>samchon::library::XML</scope><name>setTag</name></member>
      <member refid="d5/d37/classsamchon_1_1library_1_1XML_1ad44f9abb38554c265504900862502acb" prot="public" virt="non-virtual"><scope>samchon::library::XML</scope><name>setValue</name></member>
      <member refid="d5/d37/classsamchon_1_1library_1_1XML_1a99f6f4a426bc1a96ae88499744294ea9" prot="private" virt="non-virtual"><scope>samchon::library::XML</scope><name>super</name></member>
      <member refid="d5/d37/classsamchon_1_1library_1_1XML_1ae120f732e7e1c5e4a16fa31d89f655df" prot="private" virt="non-virtual"><scope>samchon::library::XML</scope><name>tag</name></member>
      <member refid="d5/d37/classsamchon_1_1library_1_1XML_1afb7b98677a69b1610c37c8f90503d729" prot="public" virt="non-virtual"><scope>samchon::library::XML</scope><name>toString</name></member>
      <member refid="d5/d37/classsamchon_1_1library_1_1XML_1a5c33da5929c9f2f9ef8d006d2350e6ec" prot="private" virt="non-virtual"><scope>samchon::library::XML</scope><name>value</name></member>
      <member refid="d5/d37/classsamchon_1_1library_1_1XML_1af23c8e40077ea2696451fcb744d94dab" prot="public" virt="non-virtual"><scope>samchon::library::XML</scope><name>XML</name></member>
      <member refid="d5/d37/classsamchon_1_1library_1_1XML_1ae6f4a430d0a5bd6cc3cc1445b42c3d94" prot="public" virt="non-virtual"><scope>samchon::library::XML</scope><name>XML</name></member>
      <member refid="d5/d37/classsamchon_1_1library_1_1XML_1a8eb6b7be151f639d1f12580f4d912db6" prot="public" virt="non-virtual"><scope>samchon::library::XML</scope><name>XML</name></member>
      <member refid="d5/d37/classsamchon_1_1library_1_1XML_1a4cff879e76ed334c041c02efde43e30c" prot="public" virt="non-virtual"><scope>samchon::library::XML</scope><name>XML</name></member>
      <member refid="d5/d37/classsamchon_1_1library_1_1XML_1a087c0e0353bce4890d337e3efa7d530d" prot="private" virt="non-virtual"><scope>samchon::library::XML</scope><name>XML</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
