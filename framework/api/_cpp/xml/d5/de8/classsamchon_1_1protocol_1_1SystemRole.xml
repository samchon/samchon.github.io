<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.10">
  <compounddef id="d5/de8/classsamchon_1_1protocol_1_1SystemRole" kind="class" language="C++" prot="public">
    <compoundname>samchon::protocol::SystemRole</compoundname>
    <basecompoundref refid="d0/d3e/classsamchon_1_1protocol_1_1Entity" prot="public" virt="virtual">Entity</basecompoundref>
    <basecompoundref refid="d4/dcf/classsamchon_1_1protocol_1_1IProtocol" prot="public" virt="virtual">IProtocol</basecompoundref>
    <derivedcompoundref refid="d2/d95/classsamchon_1_1protocol_1_1service_1_1ServiceRole" prot="public" virt="non-virtual">ServiceRole</derivedcompoundref>
    <includes refid="d3/de5/SystemRole_8hpp" local="no">SystemRole.hpp</includes>
      <sectiondef kind="protected-type">
      <memberdef kind="typedef" id="d5/de8/classsamchon_1_1protocol_1_1SystemRole_1a104926358701ef3fbb99555948b9754d" prot="protected" static="no">
        <type><ref refid="d0/d3e/classsamchon_1_1protocol_1_1Entity" kindref="compound">Entity</ref></type>
        <definition>typedef Entity super</definition>
        <argsstring></argsstring>
        <name>super</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/OneDrive/Project/Samchon/framework/cpp/samchon/protocol/SystemRole.hpp" line="28" column="1" bodyfile="D:/OneDrive/Project/Samchon/framework/cpp/samchon/protocol/SystemRole.hpp" bodystart="28" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="d5/de8/classsamchon_1_1protocol_1_1SystemRole_1a9b45b3e13bd9167aab02e17e08916231" prot="protected" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string name</definition>
        <argsstring></argsstring>
        <name>name</name>
        <briefdescription>
<para>A name representing the role. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/OneDrive/Project/Samchon/framework/cpp/samchon/protocol/SystemRole.hpp" line="33" column="1" bodyfile="D:/OneDrive/Project/Samchon/framework/cpp/samchon/protocol/SystemRole.hpp" bodystart="33" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d5/de8/classsamchon_1_1protocol_1_1SystemRole_1a7da1f5d1fc8e49fa81490364611601f2" prot="protected" static="no" mutable="no">
        <type>std::set&lt; std::string &gt;</type>
        <definition>std::set&lt;std::string&gt; listeners</definition>
        <argsstring></argsstring>
        <name>listeners</name>
        <briefdescription>
<para>Listeners belongs to the role. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/OneDrive/Project/Samchon/framework/cpp/samchon/protocol/SystemRole.hpp" line="38" column="1" bodyfile="D:/OneDrive/Project/Samchon/framework/cpp/samchon/protocol/SystemRole.hpp" bodystart="38" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="d5/de8/classsamchon_1_1protocol_1_1SystemRole_1afeb428e8fcdddd97455a5c90e5fdde51" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>SystemRole</definition>
        <argsstring>()</argsstring>
        <name>SystemRole</name>
        <briefdescription>
<para>Default Constructor. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/OneDrive/Project/Samchon/framework/cpp/samchon/protocol/SystemRole.hpp" line="47" column="1" bodyfile="D:/OneDrive/Project/Samchon/framework/cpp/samchon/protocol/SystemRole.cpp" bodystart="12" bodyend="16"/>
      </memberdef>
      <memberdef kind="function" id="d5/de8/classsamchon_1_1protocol_1_1SystemRole_1a4b4742e0f6437b38f28fa79bd0370686" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>virtual ~SystemRole</definition>
        <argsstring>()=default</argsstring>
        <name>~SystemRole</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/OneDrive/Project/Samchon/framework/cpp/samchon/protocol/SystemRole.hpp" line="48" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d5/de8/classsamchon_1_1protocol_1_1SystemRole_1a4c4b7d9441b10a734e8ce75e67d0375c" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void construct</definition>
        <argsstring>(std::shared_ptr&lt; library::XML &gt;) override</argsstring>
        <name>construct</name>
        <reimplements refid="d0/d3e/classsamchon_1_1protocol_1_1Entity_1ac1489c595f4d9e9ceb6fb91463ae195c">construct</reimplements>
        <param>
          <type>std::shared_ptr&lt; <ref refid="d5/d37/classsamchon_1_1library_1_1XML" kindref="compound">library::XML</ref> &gt;</type>
        </param>
        <briefdescription>
<para>Construct data of the <ref refid="d0/d3e/classsamchon_1_1protocol_1_1Entity" kindref="compound">Entity</ref> from an XML object. </para>        </briefdescription>
        <detaileddescription>
<para>Overrides the <ref refid="d5/de8/classsamchon_1_1protocol_1_1SystemRole_1a4c4b7d9441b10a734e8ce75e67d0375c" kindref="member">construct()</ref> method and fetch data of member variables from the XML. </para><para>By recommended guidance, data representing member variables are contained in properties of the put XML object. </para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>xml</parametername>
</parameternamelist>
<parameterdescription>
<para>An xml used to construct data of entity </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/OneDrive/Project/Samchon/framework/cpp/samchon/protocol/SystemRole.hpp" line="50" column="1" bodyfile="D:/OneDrive/Project/Samchon/framework/cpp/samchon/protocol/SystemRole.cpp" bodystart="17" bodyend="28"/>
      </memberdef>
      <memberdef kind="function" id="d5/de8/classsamchon_1_1protocol_1_1SystemRole_1a8083eb5e1b4528069982a49abe45205f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>auto</type>
        <definition>auto key</definition>
        <argsstring>() const  -&gt; std::string override</argsstring>
        <name>key</name>
        <reimplements refid="d0/d3e/classsamchon_1_1protocol_1_1Entity_1a5f7b0261859ce45be6fc2cef64026183">key</reimplements>
        <briefdescription>
<para>Get a key that can identify the <ref refid="d0/d3e/classsamchon_1_1protocol_1_1Entity" kindref="compound">Entity</ref> uniquely. </para>        </briefdescription>
        <detaileddescription>
<para>If identifier of the <ref refid="d0/d3e/classsamchon_1_1protocol_1_1Entity" kindref="compound">Entity</ref> is not atomic value, returns a string represents the composite identifier. If identifier of the <ref refid="d0/d3e/classsamchon_1_1protocol_1_1Entity" kindref="compound">Entity</ref> is not string, converts the identifier to string and returns the string. </para><para><simplesect kind="return"><para>An identifier </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/OneDrive/Project/Samchon/framework/cpp/samchon/protocol/SystemRole.hpp" line="55" column="1" bodyfile="D:/OneDrive/Project/Samchon/framework/cpp/samchon/protocol/SystemRole.cpp" bodystart="33" bodyend="36"/>
      </memberdef>
      <memberdef kind="function" id="d5/de8/classsamchon_1_1protocol_1_1SystemRole_1a624c5deafbc133e44c3259edab09bc99" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>auto</type>
        <definition>auto hasListener</definition>
        <argsstring>(const std::string &amp;) const  -&gt; bool</argsstring>
        <name>hasListener</name>
        <param>
          <type>const std::string &amp;</type>
        </param>
        <briefdescription>
<para>Test whether has a listener in the role. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/OneDrive/Project/Samchon/framework/cpp/samchon/protocol/SystemRole.hpp" line="60" column="1" bodyfile="D:/OneDrive/Project/Samchon/framework/cpp/samchon/protocol/SystemRole.cpp" bodystart="38" bodyend="41"/>
      </memberdef>
      <memberdef kind="function" id="d5/de8/classsamchon_1_1protocol_1_1SystemRole_1aa55bc231502ef8e0dd9a9c274d028ac9" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>auto</type>
        <definition>auto TAG</definition>
        <argsstring>() const  -&gt; std::string override</argsstring>
        <name>TAG</name>
        <reimplements refid="d0/d3e/classsamchon_1_1protocol_1_1Entity_1a974f48d92f0ef494a8d2c879f82c6426">TAG</reimplements>
        <briefdescription>
<para>A tag name when represented by XML. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>A tag name </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/OneDrive/Project/Samchon/framework/cpp/samchon/protocol/SystemRole.hpp" line="65" column="1" bodyfile="D:/OneDrive/Project/Samchon/framework/cpp/samchon/protocol/SystemRole.cpp" bodystart="46" bodyend="49"/>
      </memberdef>
      <memberdef kind="function" id="d5/de8/classsamchon_1_1protocol_1_1SystemRole_1ac0248fcb25b3fa4f463d545005fdcbf3" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>auto</type>
        <definition>auto toXML</definition>
        <argsstring>() const  -&gt; std::shared_ptr&lt; library::XML &gt; override</argsstring>
        <name>toXML</name>
        <reimplements refid="d0/d3e/classsamchon_1_1protocol_1_1Entity_1ae1c1e56eb0b3e41f12170628475a7d2a">toXML</reimplements>
        <briefdescription>
<para>Get an XML object represents the <ref refid="d0/d3e/classsamchon_1_1protocol_1_1Entity" kindref="compound">Entity</ref>. </para>        </briefdescription>
        <detaileddescription>
<para>Returns an XML object that can represents the <ref refid="d0/d3e/classsamchon_1_1protocol_1_1Entity" kindref="compound">Entity</ref> containing member variables into properties. </para><para>A member variable (not object, but atomic value like number, string or date) is categorized as a property within the framework of entity side. Thus, when overriding a <ref refid="d5/de8/classsamchon_1_1protocol_1_1SystemRole_1ac0248fcb25b3fa4f463d545005fdcbf3" kindref="member">toXML()</ref> method and archiving member variables to an XML object to return, puts each variable to be a property belongs to only an XML object. </para><para>Don&apos;t archive the member variable of atomic value to XML::value causing enormouse creation of XML objects to number of member variables. An <ref refid="d0/d3e/classsamchon_1_1protocol_1_1Entity" kindref="compound">Entity</ref> must be represented by only an XML instance (tag). </para><para><table rows="2" cols="2"><row>
<entry thead="yes"><para>Standard Usage  </para></entry><entry thead="yes"><para>Non-standard usage abusing value   </para></entry></row>
<row>
<entry thead="no"><para>&lt;memberList&gt;<linebreak/>
 <nonbreakablespace/><nonbreakablespace/><nonbreakablespace/><nonbreakablespace/> &lt;member id=&apos;jhnam88&apos; name=&apos;Jeongho+Nam&apos; birthdate=&apos;1988-03-11&apos; /&gt;<linebreak/>
 <nonbreakablespace/><nonbreakablespace/><nonbreakablespace/><nonbreakablespace/> &lt;member id=&apos;master&apos; name=&apos;Administartor&apos; birthdate=&apos;2011-07-28&apos; /&gt;<linebreak/>
 &lt;/memberList&gt;  </para></entry><entry thead="no"><para>&lt;member&gt;<linebreak/>
 <nonbreakablespace/><nonbreakablespace/><nonbreakablespace/><nonbreakablespace/> &lt;id&gt;jhnam88&lt;/id&gt;<linebreak/>
 <nonbreakablespace/><nonbreakablespace/><nonbreakablespace/><nonbreakablespace/> &lt;name&gt;Jeongho+Nam&lt;/name&gt;<linebreak/>
 <nonbreakablespace/><nonbreakablespace/><nonbreakablespace/><nonbreakablespace/> &lt;birthdate&gt;1988-03-11&lt;/birthdate&gt;<linebreak/>
 &lt;/member&gt;   </para></entry></row>
</table>
</para><para><simplesect kind="return"><para>An XML object representing the <ref refid="d0/d3e/classsamchon_1_1protocol_1_1Entity" kindref="compound">Entity</ref>. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/OneDrive/Project/Samchon/framework/cpp/samchon/protocol/SystemRole.hpp" line="67" column="1" bodyfile="D:/OneDrive/Project/Samchon/framework/cpp/samchon/protocol/SystemRole.cpp" bodystart="51" bodyend="73"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>A role belongs to a system. </para>    </briefdescription>
    <detaileddescription>
<para><ref refid="d5/de8/classsamchon_1_1protocol_1_1SystemRole" kindref="compound">SystemRole</ref> is an abstract and a &apos;control&apos; class groupping methods, handling <ref refid="d8/d82/classsamchon_1_1protocol_1_1Invoke" kindref="compound">Invoke</ref> messages interacting with an system that the <ref refid="d5/de8/classsamchon_1_1protocol_1_1SystemRole" kindref="compound">SystemRole</ref> is belonged to, by a subject or unit of a module. </para><para><simplesect kind="author"><para>Jeongho Nam </para></simplesect>
</para>    </detaileddescription>
    <inheritancegraph>
      <node id="2787">
        <label>IProtocol</label>
        <link refid="d4/dcf/classsamchon_1_1protocol_1_1IProtocol"/>
      </node>
      <node id="2786">
        <label>Entity</label>
        <link refid="d0/d3e/classsamchon_1_1protocol_1_1Entity"/>
      </node>
      <node id="2785">
        <label>SystemRole</label>
        <link refid="d5/de8/classsamchon_1_1protocol_1_1SystemRole"/>
        <childnode refid="2786" relation="public-inheritance">
        </childnode>
        <childnode refid="2787" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2790">
        <label>IProtocol</label>
        <link refid="d4/dcf/classsamchon_1_1protocol_1_1IProtocol"/>
      </node>
      <node id="2789">
        <label>Entity</label>
        <link refid="d0/d3e/classsamchon_1_1protocol_1_1Entity"/>
      </node>
      <node id="2788">
        <label>SystemRole</label>
        <link refid="d5/de8/classsamchon_1_1protocol_1_1SystemRole"/>
        <childnode refid="2789" relation="public-inheritance">
        </childnode>
        <childnode refid="2790" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="D:/OneDrive/Project/Samchon/framework/cpp/samchon/protocol/SystemRole.hpp" line="26" column="1" bodyfile="D:/OneDrive/Project/Samchon/framework/cpp/samchon/protocol/SystemRole.hpp" bodystart="23" bodyend="68"/>
    <listofallmembers>
      <member refid="d5/de8/classsamchon_1_1protocol_1_1SystemRole_1a4c4b7d9441b10a734e8ce75e67d0375c" prot="public" virt="virtual"><scope>samchon::protocol::SystemRole</scope><name>construct</name></member>
      <member refid="d0/d3e/classsamchon_1_1protocol_1_1Entity_1afb4718a8ca5b822cf88129ae04240489" prot="public" virt="non-virtual"><scope>samchon::protocol::SystemRole</scope><name>Entity</name></member>
      <member refid="d5/de8/classsamchon_1_1protocol_1_1SystemRole_1a624c5deafbc133e44c3259edab09bc99" prot="public" virt="non-virtual"><scope>samchon::protocol::SystemRole</scope><name>hasListener</name></member>
      <member refid="d4/dcf/classsamchon_1_1protocol_1_1IProtocol_1a6258c530c328dc119e698bb7e7fe222a" prot="public" virt="non-virtual"><scope>samchon::protocol::SystemRole</scope><name>IProtocol</name></member>
      <member refid="d5/de8/classsamchon_1_1protocol_1_1SystemRole_1a8083eb5e1b4528069982a49abe45205f" prot="public" virt="virtual"><scope>samchon::protocol::SystemRole</scope><name>key</name></member>
      <member refid="d5/de8/classsamchon_1_1protocol_1_1SystemRole_1a7da1f5d1fc8e49fa81490364611601f2" prot="protected" virt="non-virtual"><scope>samchon::protocol::SystemRole</scope><name>listeners</name></member>
      <member refid="d5/de8/classsamchon_1_1protocol_1_1SystemRole_1a9b45b3e13bd9167aab02e17e08916231" prot="protected" virt="non-virtual"><scope>samchon::protocol::SystemRole</scope><name>name</name></member>
      <member refid="d4/dcf/classsamchon_1_1protocol_1_1IProtocol_1a8debd8a0f208dbf9778fe66248443317" prot="public" virt="virtual"><scope>samchon::protocol::SystemRole</scope><name>replyData</name></member>
      <member refid="d4/dcf/classsamchon_1_1protocol_1_1IProtocol_1ac531693224b79ece2762da1e52bec0b6" prot="public" virt="virtual"><scope>samchon::protocol::SystemRole</scope><name>sendData</name></member>
      <member refid="d5/de8/classsamchon_1_1protocol_1_1SystemRole_1a104926358701ef3fbb99555948b9754d" prot="protected" virt="non-virtual"><scope>samchon::protocol::SystemRole</scope><name>super</name></member>
      <member refid="d5/de8/classsamchon_1_1protocol_1_1SystemRole_1afeb428e8fcdddd97455a5c90e5fdde51" prot="public" virt="non-virtual"><scope>samchon::protocol::SystemRole</scope><name>SystemRole</name></member>
      <member refid="d5/de8/classsamchon_1_1protocol_1_1SystemRole_1aa55bc231502ef8e0dd9a9c274d028ac9" prot="public" virt="virtual"><scope>samchon::protocol::SystemRole</scope><name>TAG</name></member>
      <member refid="d5/de8/classsamchon_1_1protocol_1_1SystemRole_1ac0248fcb25b3fa4f463d545005fdcbf3" prot="public" virt="virtual"><scope>samchon::protocol::SystemRole</scope><name>toXML</name></member>
      <member refid="d0/d3e/classsamchon_1_1protocol_1_1Entity_1a07d18d40fa0c4b4f1341cfddc0b600dd" prot="public" virt="virtual"><scope>samchon::protocol::SystemRole</scope><name>~Entity</name></member>
      <member refid="d4/dcf/classsamchon_1_1protocol_1_1IProtocol_1a51a537c2b3a6ff5eb7b5ed859cc062ad" prot="public" virt="virtual"><scope>samchon::protocol::SystemRole</scope><name>~IProtocol</name></member>
      <member refid="d5/de8/classsamchon_1_1protocol_1_1SystemRole_1a4b4742e0f6437b38f28fa79bd0370686" prot="public" virt="virtual"><scope>samchon::protocol::SystemRole</scope><name>~SystemRole</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
