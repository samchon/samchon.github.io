<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.10">
  <compounddef id="d6/d5a/classsamchon_1_1protocol_1_1EntityList" kind="class" language="C++" prot="public">
    <compoundname>samchon::protocol::EntityList</compoundname>
    <basecompoundref refid="d0/d3e/classsamchon_1_1protocol_1_1Entity" prot="public" virt="virtual">Entity</basecompoundref>
    <basecompoundref prot="public" virt="non-virtual">std::list&lt; _Ty &gt;</basecompoundref>
    <basecompoundref refid="d9/d4c/classsamchon_1_1protocol_1_1IEntityGroup" prot="public" virt="virtual">IEntityGroup</basecompoundref>
    <includes refid="d2/d30/EntityList_8hpp" local="no">EntityList.hpp</includes>
    <templateparamlist>
      <param>
        <type>typename _Ty</type>
      </param>
    </templateparamlist>
      <sectiondef kind="protected-type">
      <memberdef kind="typedef" id="d6/d5a/classsamchon_1_1protocol_1_1EntityList_1a104926358701ef3fbb99555948b9754d" prot="protected" static="no">
        <type><ref refid="d0/d3e/classsamchon_1_1protocol_1_1Entity" kindref="compound">Entity</ref></type>
        <definition>typedef Entity super</definition>
        <argsstring></argsstring>
        <name>super</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/OneDrive/Project/Samchon/framework/cpp/samchon/protocol/EntityList.hpp" line="57" column="1" bodyfile="D:/OneDrive/Project/Samchon/framework/cpp/samchon/protocol/EntityList.hpp" bodystart="57" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="d6/d5a/classsamchon_1_1protocol_1_1EntityList_1a0e241a3bf74875c919583b841a82e0ad" prot="protected" static="no">
        <type>_Ty</type>
        <definition>typedef _Ty entity_type</definition>
        <argsstring></argsstring>
        <name>entity_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/OneDrive/Project/Samchon/framework/cpp/samchon/protocol/EntityList.hpp" line="58" column="1" bodyfile="D:/OneDrive/Project/Samchon/framework/cpp/samchon/protocol/EntityList.hpp" bodystart="58" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="d6/d5a/classsamchon_1_1protocol_1_1EntityList_1a5adfccd9d580b091a3e67ea1a0544af3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>EntityList</definition>
        <argsstring>()</argsstring>
        <name>EntityList</name>
        <briefdescription>
<para>Default Constructor. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/OneDrive/Project/Samchon/framework/cpp/samchon/protocol/EntityList.hpp" line="64" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d6/d5a/classsamchon_1_1protocol_1_1EntityList_1ad6836377cf730d1a1e8230436fa6534a" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>virtual ~EntityList</definition>
        <argsstring>()=default</argsstring>
        <name>~EntityList</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/OneDrive/Project/Samchon/framework/cpp/samchon/protocol/EntityList.hpp" line="65" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d6/d5a/classsamchon_1_1protocol_1_1EntityList_1a60adc2aeb23fd51b69b708c72e5a6870" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void construct</definition>
        <argsstring>(std::shared_ptr&lt; library::XML &gt; xml) override</argsstring>
        <name>construct</name>
        <reimplements refid="d0/d3e/classsamchon_1_1protocol_1_1Entity_1ac1489c595f4d9e9ceb6fb91463ae195c">construct</reimplements>
        <param>
          <type>std::shared_ptr&lt; <ref refid="d5/d37/classsamchon_1_1library_1_1XML" kindref="compound">library::XML</ref> &gt;</type>
          <declname>xml</declname>
        </param>
        <briefdescription>
<para>Construct data of the <ref refid="d0/d3e/classsamchon_1_1protocol_1_1Entity" kindref="compound">Entity</ref> from an XML object. </para>        </briefdescription>
        <detaileddescription>
<para>Constructs the <ref refid="d6/d5a/classsamchon_1_1protocol_1_1EntityList" kindref="compound">EntityList</ref>&apos;s own member variables only from the input XML object. </para><para>Do not consider about constructing children <ref refid="d0/d3e/classsamchon_1_1protocol_1_1Entity" kindref="compound">Entity</ref> objects&apos; data in <ref refid="d6/d5a/classsamchon_1_1protocol_1_1EntityList_1a60adc2aeb23fd51b69b708c72e5a6870" kindref="member">EntityList::construct()</ref>. Those children <ref refid="d0/d3e/classsamchon_1_1protocol_1_1Entity" kindref="compound">Entity</ref> objects&apos; data will constructed by their own <ref refid="d6/d5a/classsamchon_1_1protocol_1_1EntityList_1a60adc2aeb23fd51b69b708c72e5a6870" kindref="member">construct()</ref> method. Even insertion of XML objects representing children are done by abstract method of <ref refid="d6/d5a/classsamchon_1_1protocol_1_1EntityList_1aad9fbd4de53a3243bd213e7158ed2e48" kindref="member">EntityList::toXML()</ref>. </para><para>Constructs only data of <ref refid="d6/d5a/classsamchon_1_1protocol_1_1EntityList" kindref="compound">EntityList</ref>&apos;s own. </para><para><simplesect kind="par"><title>[Inherited]</title><para>Construct data of the <ref refid="d0/d3e/classsamchon_1_1protocol_1_1Entity" kindref="compound">Entity</ref> from an XML object. </para></simplesect>
Overrides the <ref refid="d6/d5a/classsamchon_1_1protocol_1_1EntityList_1a60adc2aeb23fd51b69b708c72e5a6870" kindref="member">construct()</ref> method and fetch data of member variables from the XML. </para><para>By recommended guidance, data representing member variables are contained in properties of the put XML object. </para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>xml</parametername>
</parameternamelist>
<parameterdescription>
<para>An xml used to construct data of entity </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/OneDrive/Project/Samchon/framework/cpp/samchon/protocol/EntityList.hpp" line="81" column="1" bodyfile="D:/OneDrive/Project/Samchon/framework/cpp/samchon/protocol/EntityList.hpp" bodystart="81" bodyend="92"/>
      </memberdef>
      <memberdef kind="function" id="d6/d5a/classsamchon_1_1protocol_1_1EntityList_1aad9fbd4de53a3243bd213e7158ed2e48" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>auto</type>
        <definition>virtual auto toXML</definition>
        <argsstring>() const  -&gt; std::shared_ptr&lt; library::XML &gt; override</argsstring>
        <name>toXML</name>
        <reimplements refid="d0/d3e/classsamchon_1_1protocol_1_1Entity_1ae1c1e56eb0b3e41f12170628475a7d2a">toXML</reimplements>
        <briefdescription>
<para>Get an XML object represents the <ref refid="d6/d5a/classsamchon_1_1protocol_1_1EntityList" kindref="compound">EntityList</ref>. </para>        </briefdescription>
        <detaileddescription>
<para>Archives the <ref refid="d6/d5a/classsamchon_1_1protocol_1_1EntityList" kindref="compound">EntityList</ref>&apos;s own member variables only to the returned XML object. </para><para>Do not consider about archiving children <ref refid="d0/d3e/classsamchon_1_1protocol_1_1Entity" kindref="compound">Entity</ref> objects&apos; data in <ref refid="d6/d5a/classsamchon_1_1protocol_1_1EntityList_1aad9fbd4de53a3243bd213e7158ed2e48" kindref="member">EntityList::toXML()</ref>. Those children <ref refid="d0/d3e/classsamchon_1_1protocol_1_1Entity" kindref="compound">Entity</ref> objects will converted to XML object by their own <ref refid="d6/d5a/classsamchon_1_1protocol_1_1EntityList_1aad9fbd4de53a3243bd213e7158ed2e48" kindref="member">toXML()</ref> method. The insertion of XML objects representing children are done by abstract method of <ref refid="d6/d5a/classsamchon_1_1protocol_1_1EntityList_1aad9fbd4de53a3243bd213e7158ed2e48" kindref="member">EntityList::toXML()</ref>. </para><para>Archives only data of <ref refid="d6/d5a/classsamchon_1_1protocol_1_1EntityList" kindref="compound">EntityList</ref>&apos;s own. </para><para><simplesect kind="par"><title>[Inherited]</title><para>Get an XML object represents the <ref refid="d0/d3e/classsamchon_1_1protocol_1_1Entity" kindref="compound">Entity</ref>. </para></simplesect>
Returns an XML object that can represents the <ref refid="d0/d3e/classsamchon_1_1protocol_1_1Entity" kindref="compound">Entity</ref> containing member variables into properties. </para><para>A member variable (not object, but atomic value like number, string or date) is categorized as a property within the framework of entity side. Thus, when overriding a <ref refid="d6/d5a/classsamchon_1_1protocol_1_1EntityList_1aad9fbd4de53a3243bd213e7158ed2e48" kindref="member">toXML()</ref> method and archiving member variables to an XML object to return, puts each variable to be a property belongs to only an XML object. </para><para>Don&apos;t archive the member variable of atomic value to XML::value causing enormouse creation of XML objects to number of member variables. An <ref refid="d0/d3e/classsamchon_1_1protocol_1_1Entity" kindref="compound">Entity</ref> must be represented by only an XML instance (tag). </para><para><table rows="2" cols="2"><row>
<entry thead="yes"><para>Standard Usage  </para></entry><entry thead="yes"><para>Non-standard usage abusing value   </para></entry></row>
<row>
<entry thead="no"><para>&lt;memberList&gt;<linebreak/>
 <nonbreakablespace/><nonbreakablespace/><nonbreakablespace/><nonbreakablespace/> &lt;member id=&apos;jhnam88&apos; name=&apos;Jeongho+Nam&apos; birthdate=&apos;1988-03-11&apos; /&gt;<linebreak/>
 <nonbreakablespace/><nonbreakablespace/><nonbreakablespace/><nonbreakablespace/> &lt;member id=&apos;master&apos; name=&apos;Administartor&apos; birthdate=&apos;2011-07-28&apos; /&gt;<linebreak/>
 &lt;/memberList&gt;  </para></entry><entry thead="no"><para>&lt;member&gt;<linebreak/>
 <nonbreakablespace/><nonbreakablespace/><nonbreakablespace/><nonbreakablespace/> &lt;id&gt;jhnam88&lt;/id&gt;<linebreak/>
 <nonbreakablespace/><nonbreakablespace/><nonbreakablespace/><nonbreakablespace/> &lt;name&gt;Jeongho+Nam&lt;/name&gt;<linebreak/>
 <nonbreakablespace/><nonbreakablespace/><nonbreakablespace/><nonbreakablespace/> &lt;birthdate&gt;1988-03-11&lt;/birthdate&gt;<linebreak/>
 &lt;/member&gt;   </para></entry></row>
</table>
</para><para><simplesect kind="return"><para>An XML object representing the <ref refid="d0/d3e/classsamchon_1_1protocol_1_1Entity" kindref="compound">Entity</ref>. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/OneDrive/Project/Samchon/framework/cpp/samchon/protocol/EntityList.hpp" line="109" column="1" bodyfile="D:/OneDrive/Project/Samchon/framework/cpp/samchon/protocol/EntityList.hpp" bodystart="109" bodyend="121"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>An <ref refid="d0/d3e/classsamchon_1_1protocol_1_1Entity" kindref="compound">Entity</ref> and a static list containing <ref refid="d0/d3e/classsamchon_1_1protocol_1_1Entity" kindref="compound">Entity</ref> objects. </para>    </briefdescription>
    <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>_Ty</parametername>
</parameternamelist>
<parameterdescription>
<para>A type of children <ref refid="d0/d3e/classsamchon_1_1protocol_1_1Entity" kindref="compound">Entity</ref>. Must be a class derived from an <ref refid="d0/d3e/classsamchon_1_1protocol_1_1Entity" kindref="compound">Entity</ref>.</para></parameterdescription>
</parameteritem>
</parameterlist>
</para><para><ref refid="d6/d5a/classsamchon_1_1protocol_1_1EntityList" kindref="compound">EntityList</ref> is a static array containing children objects derived from an <ref refid="d0/d3e/classsamchon_1_1protocol_1_1Entity" kindref="compound">Entity</ref> class.</para><para><ref refid="d6/d5a/classsamchon_1_1protocol_1_1EntityList" kindref="compound">EntityList</ref>, its allocated memory space for each child is fixed and cannot contain derived a entity class from the child entity type. It has advantages on performance by direct accessment and static memory allocation for child, however, its increasement of performance is not eminent. </para><para><itemizedlist>
<listitem><para>EntityList&lt;Animal&gt; is specified </para></listitem>
<listitem><para>Dog is extended from the Animal </para></listitem>
<listitem><para>EntityList&lt;Animal&gt; cannot contain Dog. You can try insertion of the Dog class into the <ref refid="d6/d5a/classsamchon_1_1protocol_1_1EntityList" kindref="compound">EntityList</ref>, but only memory size of Animal is allocated, so that derived member variables and methods are all truncated.</para></listitem>
</itemizedlist>
<simplesect kind="par"><title>[Inherited]</title><para></para></simplesect>
<ref refid="d0/d3e/classsamchon_1_1protocol_1_1Entity" kindref="compound">Entity</ref> is a class for standardization of expression method using on network I/O by XML. If <ref refid="d8/d82/classsamchon_1_1protocol_1_1Invoke" kindref="compound">Invoke</ref> is a standard message protocol of Samchon Framework which must be kept, <ref refid="d0/d3e/classsamchon_1_1protocol_1_1Entity" kindref="compound">Entity</ref> is a recommended semi-protocol of message for expressing a data class. Following the semi-protocol <ref refid="d0/d3e/classsamchon_1_1protocol_1_1Entity" kindref="compound">Entity</ref> is not imposed but encouraged. </para><para>As we could get advantages from standardization of message for network I/O with <ref refid="d8/d82/classsamchon_1_1protocol_1_1Invoke" kindref="compound">Invoke</ref>, we can get additional advantage from standardizing expression method of data class with <ref refid="d0/d3e/classsamchon_1_1protocol_1_1Entity" kindref="compound">Entity</ref>. We do not need to know a part of network communication. Thus, with the <ref refid="d0/d3e/classsamchon_1_1protocol_1_1Entity" kindref="compound">Entity</ref>, we can only concentrate on entity&apos;s own logics and relationships between another entities. <ref refid="d0/d3e/classsamchon_1_1protocol_1_1Entity" kindref="compound">Entity</ref> does not need to how network communications are being done. </para><para><image type="html" name="protocol_entity.png"></image>
 <image type="latex" name="protocol_entity.png"></image>
</para><para><simplesect kind="par"><title>Example source</title><para><programlisting><codeline lineno="1"><highlight class="preprocessor">#include<sp/>&lt;iostream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;samchon/protocol/Entity.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;samchon/protocol/IHTMLEntity.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;samchon/protocol/SharedEntityArray.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;samchon/library/XML.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>_WIN64</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>ifdef<sp/>_DEBUG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/>pragma<sp/>comment(lib,<sp/>&quot;x64/Debug/SamchonFramework.lib&quot;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/>pragma<sp/>comment(lib,<sp/>&quot;x64/Release/SamchonFramework.lib&quot;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>ifdef<sp/>_DEBUG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/>pragma<sp/>comment(lib,<sp/>&quot;Debug/SamchonFramework.lib&quot;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/>pragma<sp/>comment(lib,<sp/>&quot;Release/SamchonFramework.lib&quot;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal"><ref refid="d8/dcc/namespacestd" kindref="compound">std</ref>;</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal"><ref refid="d8/dd4/namespacesamchon_1_1library" kindref="compound">samchon::library</ref>;</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal"><ref refid="db/d64/namespacesamchon_1_1protocol" kindref="compound">samchon::protocol</ref>;</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">Member<sp/></highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="d0/d3e/classsamchon_1_1protocol_1_1Entity" kindref="compound">Entity</ref>,<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="db/dae/classsamchon_1_1protocol_1_1IHTMLEntity" kindref="compound">IHTMLEntity</ref></highlight></codeline>
<codeline lineno="29"><highlight class="normal">{</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="d0/d3e/classsamchon_1_1protocol_1_1Entity" kindref="compound">Entity</ref><sp/>super;</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>id;</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>name;</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>age;</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>grade;</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>---------------------------------------------------------------------</highlight></codeline>
<codeline lineno="40"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CONSTRUCTORS</highlight></codeline>
<codeline lineno="41"><highlight class="comment"><sp/><sp/><sp/><sp/>---------------------------------------------------------------------<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/>Member()<sp/></highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>super(),<sp/><ref refid="db/dae/classsamchon_1_1protocol_1_1IHTMLEntity" kindref="compound">IHTMLEntity</ref>()</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/>Member(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>&amp;</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>&amp;name,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>age,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>grade)</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>super(),<sp/><ref refid="db/dae/classsamchon_1_1protocol_1_1IHTMLEntity" kindref="compound">IHTMLEntity</ref>()</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;</highlight><highlight class="keywordtype">id</highlight><highlight class="normal"><sp/>=<sp/>id;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;name<sp/>=<sp/>name;</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;age<sp/>=<sp/>age;</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;grade<sp/>=<sp/>grade;</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>~Member()<sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d6/d5a/classsamchon_1_1protocol_1_1EntityList_1a60adc2aeb23fd51b69b708c72e5a6870" kindref="member">construct</ref>(shared_ptr&lt;XML&gt;<sp/>xml)</highlight><highlight class="keyword"><sp/>override</highlight></codeline>
<codeline lineno="57"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;</highlight><highlight class="keywordtype">id</highlight><highlight class="normal"><sp/>=<sp/>xml-&gt;getProperty(</highlight><highlight class="stringliteral">&quot;id&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;name<sp/>=<sp/>xml-&gt;getProperty(</highlight><highlight class="stringliteral">&quot;name&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;age<sp/>=<sp/>xml-&gt;getProperty&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&gt;(</highlight><highlight class="stringliteral">&quot;age&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;grade<sp/>=<sp/>xml-&gt;getProperty&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&gt;(</highlight><highlight class="stringliteral">&quot;grade&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>---------------------------------------------------------------------</highlight></codeline>
<codeline lineno="65"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GETTERSs</highlight></codeline>
<codeline lineno="66"><highlight class="comment"><sp/><sp/><sp/><sp/>---------------------------------------------------------------------<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="d0/d3e/classsamchon_1_1protocol_1_1Entity_1a5f7b0261859ce45be6fc2cef64026183" kindref="member">key</ref>()<sp/>const<sp/>-&gt;<sp/><ref refid="d8/dcc/namespacestd" kindref="compound">std</ref>::</highlight><highlight class="keywordtype">string</highlight><highlight class="keyword"><sp/>override</highlight></codeline>
<codeline lineno="68"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;id;</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>---------------------------------------------------------------------</highlight></codeline>
<codeline lineno="73"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>XML<sp/>EXPORTERS</highlight></codeline>
<codeline lineno="74"><highlight class="comment"><sp/><sp/><sp/><sp/>---------------------------------------------------------------------<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="d0/d3e/classsamchon_1_1protocol_1_1Entity_1a974f48d92f0ef494a8d2c879f82c6426" kindref="member">TAG</ref>()<sp/>const<sp/>-&gt;<sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="keyword"><sp/>override</highlight></codeline>
<codeline lineno="76"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;member&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="d6/d5a/classsamchon_1_1protocol_1_1EntityList_1aad9fbd4de53a3243bd213e7158ed2e48" kindref="member">toXML</ref>()<sp/>const<sp/>-&gt;<sp/>shared_ptr&lt;XML&gt;</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>shared_ptr&lt;XML&gt;<sp/>&amp;xml<sp/>=<sp/><ref refid="d0/d3e/classsamchon_1_1protocol_1_1Entity_1ae1c1e56eb0b3e41f12170628475a7d2a" kindref="member">super::toXML</ref>();</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xml-&gt;setProperty(</highlight><highlight class="stringliteral">&quot;id&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xml-&gt;setProperty(</highlight><highlight class="stringliteral">&quot;name&quot;</highlight><highlight class="normal">,<sp/>name);</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xml-&gt;setProperty(</highlight><highlight class="stringliteral">&quot;age&quot;</highlight><highlight class="normal">,<sp/>age);</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xml-&gt;setProperty(</highlight><highlight class="stringliteral">&quot;grade&quot;</highlight><highlight class="normal">,<sp/>grade);</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>move(xml);</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>toHTML()<sp/>const<sp/>-&gt;<sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>toTR(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/>name,<sp/>age,<sp/>grade);</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="93"><highlight class="normal">};</highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">MemberArray</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="d4/deb/classsamchon_1_1protocol_1_1EntityGroup" kindref="compound">SharedEntityArray</ref>&lt;Member&gt;,</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="db/dae/classsamchon_1_1protocol_1_1IHTMLEntity" kindref="compound">IHTMLEntity</ref></highlight></codeline>
<codeline lineno="98"><highlight class="normal">{</highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="d4/deb/classsamchon_1_1protocol_1_1EntityGroup" kindref="compound">SharedEntityArray&lt;Member&gt;</ref><sp/>super;</highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>application;</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>department;</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/>Member<sp/>*chief;</highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>---------------------------------------------------------------------</highlight></codeline>
<codeline lineno="108"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CONSTRUCTORS</highlight></codeline>
<codeline lineno="109"><highlight class="comment"><sp/><sp/><sp/><sp/>---------------------------------------------------------------------<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/>MemberArray()</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>super(),<sp/><ref refid="db/dae/classsamchon_1_1protocol_1_1IHTMLEntity" kindref="compound">IHTMLEntity</ref>()</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;chief<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>~MemberArray()<sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>You<sp/>don&apos;t<sp/>need<sp/>to<sp/>consider<sp/>children(Member)<sp/>objects</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Just<sp/>concentrate<sp/>on<sp/>constructing<sp/>MemberArray&apos;s<sp/>own<sp/>member<sp/>variables</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d6/d5a/classsamchon_1_1protocol_1_1EntityList_1a60adc2aeb23fd51b69b708c72e5a6870" kindref="member">construct</ref>(shared_ptr&lt;XML&gt;<sp/>xml)</highlight><highlight class="keyword"><sp/>override</highlight></codeline>
<codeline lineno="120"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d0/d3e/classsamchon_1_1protocol_1_1Entity_1ac1489c595f4d9e9ceb6fb91463ae195c" kindref="member">super::construct</ref>(xml);</highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;application<sp/>=<sp/>xml-&gt;getProperty(</highlight><highlight class="stringliteral">&quot;application&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;department<sp/>=<sp/>xml-&gt;getProperty&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&gt;(</highlight><highlight class="stringliteral">&quot;department&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(xml-&gt;hasProperty(</highlight><highlight class="stringliteral">&quot;chief&quot;</highlight><highlight class="normal">)<sp/>==<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>this-&gt;has(<sp/>xml-&gt;getProperty(</highlight><highlight class="stringliteral">&quot;chief&quot;</highlight><highlight class="normal">)<sp/>)<sp/>==<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;chief<sp/>=<sp/>this-&gt;</highlight><highlight class="keyword">get</highlight><highlight class="normal">(<sp/>xml-&gt;getProperty(</highlight><highlight class="stringliteral">&quot;cheif&quot;</highlight><highlight class="normal">)<sp/>).</highlight><highlight class="keyword">get</highlight><highlight class="normal">();</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//FACTORY<sp/>METHOD<sp/>FOR<sp/>MEMBER</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>createChild(shared_ptr&lt;XML&gt;<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/>-&gt;<sp/>Member*<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Member();</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>---------------------------------------------------------------------</highlight></codeline>
<codeline lineno="138"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>XML<sp/>EXPORTERS</highlight></codeline>
<codeline lineno="139"><highlight class="comment"><sp/><sp/><sp/><sp/>---------------------------------------------------------------------<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="d0/d3e/classsamchon_1_1protocol_1_1Entity_1a974f48d92f0ef494a8d2c879f82c6426" kindref="member">TAG</ref>()<sp/>const<sp/>-&gt;<sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="keyword"><sp/>override</highlight></codeline>
<codeline lineno="142"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;memberArray&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="d9/d4c/classsamchon_1_1protocol_1_1IEntityGroup_1abcef66d1cd792f48c12c52ac52198c0f" kindref="member">CHILD_TAG</ref>()<sp/>const<sp/>-&gt;<sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="keyword"><sp/>override</highlight></codeline>
<codeline lineno="146"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;member&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>You<sp/>don&apos;t<sp/>need<sp/>to<sp/>consider<sp/>children(Member)<sp/>objects</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Just<sp/>concentrate<sp/>on<sp/>expressing<sp/>MemberArray&apos;s<sp/>own<sp/>member<sp/>variables</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="d6/d5a/classsamchon_1_1protocol_1_1EntityList_1aad9fbd4de53a3243bd213e7158ed2e48" kindref="member">toXML</ref>()<sp/>const<sp/>-&gt;<sp/>shared_ptr&lt;XML&gt;</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>shared_ptr&lt;XML&gt;<sp/>&amp;xml<sp/>=<sp/><ref refid="d0/d3e/classsamchon_1_1protocol_1_1Entity_1ae1c1e56eb0b3e41f12170628475a7d2a" kindref="member">super::toXML</ref>();</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xml-&gt;setProperty(</highlight><highlight class="stringliteral">&quot;application&quot;</highlight><highlight class="normal">,<sp/>application);</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xml-&gt;setProperty(</highlight><highlight class="stringliteral">&quot;department&quot;</highlight><highlight class="normal">,<sp/>department);</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(chief<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xml-&gt;setProperty(</highlight><highlight class="stringliteral">&quot;cheif&quot;</highlight><highlight class="normal">,<sp/>chief-&gt;key());</highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>move(xml);</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>toHTML()<sp/>const<sp/>-&gt;<sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>html<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&lt;table&gt;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>html<sp/>+=<sp/>toTH(</highlight><highlight class="stringliteral">&quot;ID&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Name&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Age&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Grade&quot;</highlight><highlight class="normal">)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>2;<sp/>i++)</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>html<sp/>+=<sp/>at(i)-&gt;toHTML()<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>html<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;&lt;/table&gt;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>move(html);</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="174"><highlight class="normal">};</highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>main()</highlight></codeline>
<codeline lineno="177"><highlight class="normal">{</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>str<sp/>=<sp/>string(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">)<sp/>+</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&lt;memberArray<sp/>application=&apos;framework&apos;<sp/>department=&apos;7&apos;<sp/>cheif=&apos;samchon&apos;&gt;\n&quot;</highlight><highlight class="normal"><sp/>+</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/>&lt;member<sp/>id=&apos;samchon&apos;<sp/>name=&apos;Jeongho<sp/>Nam&apos;<sp/>age=&apos;27&apos;<sp/>grade=&apos;5&apos;<sp/>/&gt;&quot;</highlight><highlight class="normal"><sp/>+</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/>&lt;member<sp/>id=&apos;submaster&apos;<sp/>name=&apos;No<sp/>Name&apos;<sp/>age=&apos;100&apos;<sp/>grade=&apos;4&apos;<sp/>/&gt;&quot;</highlight><highlight class="normal"><sp/>+</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/>&lt;member<sp/>id=&apos;john&apos;<sp/>name=&apos;John<sp/>Doe&apos;<sp/>age=&apos;33&apos;<sp/>grade=&apos;2&apos;<sp/>/&gt;&quot;</highlight><highlight class="normal"><sp/>+</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/>&lt;member<sp/>id=&apos;bad_man&apos;<sp/>name=&apos;Bad<sp/>Man&apos;<sp/>age=&apos;44&apos;<sp/>grade=&apos;-1&apos;<sp/>/&gt;&quot;</highlight><highlight class="normal"><sp/>+</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/>&lt;member<sp/>id=&apos;guest&apos;<sp/>name=&apos;Guest&apos;<sp/>age=&apos;0&apos;<sp/>grade=&apos;0&apos;<sp/>/&gt;&quot;</highlight><highlight class="normal"><sp/>+</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&lt;/memberArray&gt;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/>shared_ptr&lt;XML&gt;<sp/>xml(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>XML(str));</highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/>MemberArray<sp/>memberArray;</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/>memberArray.construct(xml);</highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/>memberArray.emplace_back(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Member(</highlight><highlight class="stringliteral">&quot;freshman&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;A<sp/>fresh<sp/>man&quot;</highlight><highlight class="normal">,<sp/>20,<sp/>2));</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/>memberArray.emplace_back(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Member(</highlight><highlight class="stringliteral">&quot;senior&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;A<sp/>senior&quot;</highlight><highlight class="normal">,<sp/>70,<sp/>2));</highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/>memberArray.toXML()-&gt;toString()<sp/>&lt;&lt;<sp/>endl<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/>memberArray.toHTML()<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/>system(</highlight><highlight class="stringliteral">&quot;pause&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="197"><highlight class="normal">}</highlight></codeline>
</programlisting></para></simplesect>
<heading level="4">Result of the example </heading>
</para><para><image type="html" name="example_entity.png"></image>
 <image type="latex" name="example_entity.png"></image>
</para><para><simplesect kind="note"><para></para></simplesect>
I say repeatedly. Expression method of <ref refid="d0/d3e/classsamchon_1_1protocol_1_1Entity" kindref="compound">Entity</ref> is recommended, but not imposed. It&apos;s a semi protocol for network I/O but not a essential protocol must be kept. The expression method of <ref refid="d0/d3e/classsamchon_1_1protocol_1_1Entity" kindref="compound">Entity</ref>, using on network I/O, is expressed by XML string. </para><para>If your own network system has a critical performance issue on communication data class, it would be better to using binary communication (with <ref refid="dc/d37/classsamchon_1_1ByteArray" kindref="compound">ByteArray</ref> or boost::serialization). Don&apos;t worry about the problem! <ref refid="d8/d82/classsamchon_1_1protocol_1_1Invoke" kindref="compound">Invoke</ref> also provides methods for binary data (<ref refid="dc/d37/classsamchon_1_1ByteArray" kindref="compound">ByteArray</ref>). </para><para><simplesect kind="see"><para><ref refid="db/d64/namespacesamchon_1_1protocol" kindref="compound">protocol</ref> </para></simplesect>
<simplesect kind="author"><para>Jeongho Nam</para></simplesect>
<simplesect kind="warning"><para></para></simplesect>
If a data structure has recursive and hierarchical relationship, never use the <ref refid="d6/d5a/classsamchon_1_1protocol_1_1EntityList" kindref="compound">EntityList</ref>. <ref refid="d6/d5a/classsamchon_1_1protocol_1_1EntityList" kindref="compound">EntityList</ref>&apos;s memory allocation is static. The recursive relationship causes infinite memory allocation. It must generates stack overflow. </para><para>Use <ref refid="d4/deb/classsamchon_1_1protocol_1_1EntityGroup" kindref="compound">EntityGroup</ref> instead. </para><para><itemizedlist>
<listitem><para>class NTCriteria : public EntityList&lt;NTCriteria&gt; causes a stack overflow. </para></listitem>
<listitem><para>class NTCriteria : public SharedEntityList&lt;NTCriteria&gt; doesn&apos;t cause the stack overflow.</para></listitem>
</itemizedlist>
<simplesect kind="warning"><para></para></simplesect>
Unlike <ref refid="dc/d8d/classsamchon_1_1protocol_1_1EntityArray" kindref="compound">EntityArray</ref> containing children serialized, <ref refid="d6/d5a/classsamchon_1_1protocol_1_1EntityList" kindref="compound">EntityList</ref>&apos;s static memory allocation and accessment for a child, its advantage doesn&apos;t seemed to have eminent advantage on performance. As there&apos;s not meaningful advantage but has only disadvantage that cannot containing derived objects, I&apos;m planning to depreciate the <ref refid="d6/d5a/classsamchon_1_1protocol_1_1EntityList" kindref="compound">EntityList</ref> in next generation. </para><para>Use SharedEntityList instead will be better I think. </para>    </detaileddescription>
    <inheritancegraph>
      <node id="1557">
        <label>EntityList&lt; _Ty &gt;</label>
        <link refid="d6/d5a/classsamchon_1_1protocol_1_1EntityList"/>
        <childnode refid="1558" relation="public-inheritance">
        </childnode>
        <childnode refid="1559" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1558">
        <label>Entity</label>
        <link refid="d0/d3e/classsamchon_1_1protocol_1_1Entity"/>
      </node>
      <node id="1559">
        <label>IEntityGroup</label>
        <link refid="d9/d4c/classsamchon_1_1protocol_1_1IEntityGroup"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1560">
        <label>EntityList&lt; _Ty &gt;</label>
        <link refid="d6/d5a/classsamchon_1_1protocol_1_1EntityList"/>
        <childnode refid="1561" relation="public-inheritance">
        </childnode>
        <childnode refid="1562" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1561">
        <label>Entity</label>
        <link refid="d0/d3e/classsamchon_1_1protocol_1_1Entity"/>
      </node>
      <node id="1562">
        <label>IEntityGroup</label>
        <link refid="d9/d4c/classsamchon_1_1protocol_1_1IEntityGroup"/>
      </node>
    </collaborationgraph>
    <location file="D:/OneDrive/Project/Samchon/framework/cpp/samchon/protocol/EntityList.hpp" line="55" column="1" bodyfile="D:/OneDrive/Project/Samchon/framework/cpp/samchon/protocol/EntityList.hpp" bodystart="52" bodyend="122"/>
    <listofallmembers>
      <member refid="d9/d4c/classsamchon_1_1protocol_1_1IEntityGroup_1abcef66d1cd792f48c12c52ac52198c0f" prot="protected" virt="pure-virtual"><scope>samchon::protocol::EntityList</scope><name>CHILD_TAG</name></member>
      <member refid="d6/d5a/classsamchon_1_1protocol_1_1EntityList_1a60adc2aeb23fd51b69b708c72e5a6870" prot="public" virt="virtual"><scope>samchon::protocol::EntityList</scope><name>construct</name></member>
      <member refid="d0/d3e/classsamchon_1_1protocol_1_1Entity_1afb4718a8ca5b822cf88129ae04240489" prot="public" virt="non-virtual"><scope>samchon::protocol::EntityList</scope><name>Entity</name></member>
      <member refid="d6/d5a/classsamchon_1_1protocol_1_1EntityList_1a0e241a3bf74875c919583b841a82e0ad" prot="protected" virt="non-virtual"><scope>samchon::protocol::EntityList</scope><name>entity_type</name></member>
      <member refid="d6/d5a/classsamchon_1_1protocol_1_1EntityList_1a5adfccd9d580b091a3e67ea1a0544af3" prot="public" virt="non-virtual"><scope>samchon::protocol::EntityList</scope><name>EntityList</name></member>
      <member refid="d9/d4c/classsamchon_1_1protocol_1_1IEntityGroup_1a613d2b691653c86d5f900c8ba33ba30b" prot="public" virt="non-virtual"><scope>samchon::protocol::EntityList</scope><name>IEntityGroup</name></member>
      <member refid="d0/d3e/classsamchon_1_1protocol_1_1Entity_1a5f7b0261859ce45be6fc2cef64026183" prot="public" virt="virtual"><scope>samchon::protocol::EntityList</scope><name>key</name></member>
      <member refid="d6/d5a/classsamchon_1_1protocol_1_1EntityList_1a104926358701ef3fbb99555948b9754d" prot="protected" virt="non-virtual"><scope>samchon::protocol::EntityList</scope><name>super</name></member>
      <member refid="d0/d3e/classsamchon_1_1protocol_1_1Entity_1a974f48d92f0ef494a8d2c879f82c6426" prot="public" virt="pure-virtual"><scope>samchon::protocol::EntityList</scope><name>TAG</name></member>
      <member refid="d6/d5a/classsamchon_1_1protocol_1_1EntityList_1aad9fbd4de53a3243bd213e7158ed2e48" prot="public" virt="virtual"><scope>samchon::protocol::EntityList</scope><name>toXML</name></member>
      <member refid="d0/d3e/classsamchon_1_1protocol_1_1Entity_1a07d18d40fa0c4b4f1341cfddc0b600dd" prot="public" virt="virtual"><scope>samchon::protocol::EntityList</scope><name>~Entity</name></member>
      <member refid="d6/d5a/classsamchon_1_1protocol_1_1EntityList_1ad6836377cf730d1a1e8230436fa6534a" prot="public" virt="virtual"><scope>samchon::protocol::EntityList</scope><name>~EntityList</name></member>
      <member refid="d9/d4c/classsamchon_1_1protocol_1_1IEntityGroup_1ae41524ffa5ca16d3160dfd0b00e7800f" prot="public" virt="virtual"><scope>samchon::protocol::EntityList</scope><name>~IEntityGroup</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
