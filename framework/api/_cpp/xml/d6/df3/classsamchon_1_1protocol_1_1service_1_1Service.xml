<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.10">
  <compounddef id="d6/df3/classsamchon_1_1protocol_1_1service_1_1Service" kind="class" language="C++" prot="public">
    <compoundname>samchon::protocol::service::Service</compoundname>
    <basecompoundref refid="d4/dcf/classsamchon_1_1protocol_1_1IProtocol" prot="public" virt="non-virtual">IProtocol</basecompoundref>
    <derivedcompoundref refid="df/de2/classsamchon_1_1example_1_1chat__service_1_1ChatService" prot="public" virt="non-virtual">ChatService</derivedcompoundref>
    <derivedcompoundref refid="dd/de9/classsamchon_1_1example_1_1chat__service_1_1ListService" prot="public" virt="non-virtual">ListService</derivedcompoundref>
    <includes refid="de/da9/protocol_2service_2service_8hpp" local="no">Service.hpp</includes>
      <sectiondef kind="private-type">
      <memberdef kind="typedef" id="d6/df3/classsamchon_1_1protocol_1_1service_1_1Service_1a380f29337ca395f025ccbfad590ae552" prot="private" static="no">
        <type><ref refid="d4/dcf/classsamchon_1_1protocol_1_1IProtocol" kindref="compound">IProtocol</ref></type>
        <definition>typedef IProtocol super</definition>
        <argsstring></argsstring>
        <name>super</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/OneDrive/Project/Samchon/framework/cpp/samchon/protocol/service/Service.hpp" line="50" column="1" bodyfile="D:/OneDrive/Project/Samchon/framework/cpp/samchon/protocol/service/Service.hpp" bodystart="50" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="d6/df3/classsamchon_1_1protocol_1_1service_1_1Service_1a5db1c99e2c94b26278f3838c85cdb618" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend class</type>
        <definition>friend class Client</definition>
        <argsstring></argsstring>
        <name>Client</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/OneDrive/Project/Samchon/framework/cpp/samchon/protocol/service/Service.hpp" line="47" column="1" bodyfile="D:/OneDrive/Project/Samchon/framework/cpp/samchon/protocol/service/Service.hpp" bodystart="47" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="d6/df3/classsamchon_1_1protocol_1_1service_1_1Service_1a0388c33353644129ea9403f0a5a8ed24" prot="private" static="no" mutable="no">
        <type><ref refid="df/d31/classsamchon_1_1protocol_1_1service_1_1Client" kindref="compound">Client</ref> *</type>
        <definition>Client* client</definition>
        <argsstring></argsstring>
        <name>client</name>
        <briefdescription>
<para><ref refid="df/d31/classsamchon_1_1protocol_1_1service_1_1Client" kindref="compound">Client</ref> object <ref refid="d6/df3/classsamchon_1_1protocol_1_1service_1_1Service" kindref="compound">Service</ref> is belonged to. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/OneDrive/Project/Samchon/framework/cpp/samchon/protocol/service/Service.hpp" line="62" column="1" bodyfile="D:/OneDrive/Project/Samchon/framework/cpp/samchon/protocol/service/Service.hpp" bodystart="62" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d6/df3/classsamchon_1_1protocol_1_1service_1_1Service_1a9b45b3e13bd9167aab02e17e08916231" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string name</definition>
        <argsstring></argsstring>
        <name>name</name>
        <briefdescription>
<para>A name represents a <ref refid="d6/df3/classsamchon_1_1protocol_1_1service_1_1Service" kindref="compound">Service</ref>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/OneDrive/Project/Samchon/framework/cpp/samchon/protocol/service/Service.hpp" line="67" column="1" bodyfile="D:/OneDrive/Project/Samchon/framework/cpp/samchon/protocol/service/Service.hpp" bodystart="67" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="d6/df3/classsamchon_1_1protocol_1_1service_1_1Service_1afdf80fdcaf3e7586fd73c68e86e15c35" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>auto</type>
        <definition>virtual auto REQUIRE_AUTHORITY</definition>
        <argsstring>() const  -&gt; int=NULL</argsstring>
        <name>REQUIRE_AUTHORITY</name>
        <briefdescription>
<para>Required authority to access the service. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/OneDrive/Project/Samchon/framework/cpp/samchon/protocol/service/Service.hpp" line="56" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d6/df3/classsamchon_1_1protocol_1_1service_1_1Service_1a7ba03d23f0fe6a45f3a367d55a660365" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>auto</type>
        <definition>auto __keepAlive</definition>
        <argsstring>() -&gt; ServiceKeeper</argsstring>
        <name>__keepAlive</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/OneDrive/Project/Samchon/framework/cpp/samchon/protocol/service/Service.hpp" line="84" column="1" bodyfile="D:/OneDrive/Project/Samchon/framework/cpp/samchon/protocol/service/Service.cpp" bodystart="24" bodyend="27"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="d6/df3/classsamchon_1_1protocol_1_1service_1_1Service_1a62468fde5c45705263bc7d3a55fefba0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Service</definition>
        <argsstring>(Client *)</argsstring>
        <name>Service</name>
        <param>
          <type><ref refid="df/d31/classsamchon_1_1protocol_1_1service_1_1Client" kindref="compound">Client</ref> *</type>
          <defname>client</defname>
        </param>
        <briefdescription>
<para>Construct from <ref refid="df/d31/classsamchon_1_1protocol_1_1service_1_1Client" kindref="compound">Client</ref>. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>client</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="df/d31/classsamchon_1_1protocol_1_1service_1_1Client" kindref="compound">Client</ref> object <ref refid="d6/df3/classsamchon_1_1protocol_1_1service_1_1Service" kindref="compound">Service</ref> is belonged to </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/OneDrive/Project/Samchon/framework/cpp/samchon/protocol/service/Service.hpp" line="75" column="1" bodyfile="D:/OneDrive/Project/Samchon/framework/cpp/samchon/protocol/service/Service.cpp" bodystart="18" bodyend="22"/>
      </memberdef>
      <memberdef kind="function" id="d6/df3/classsamchon_1_1protocol_1_1service_1_1Service_1a0e349bbea827eb94454eafb4f3367326" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>virtual ~Service</definition>
        <argsstring>()=default</argsstring>
        <name>~Service</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/OneDrive/Project/Samchon/framework/cpp/samchon/protocol/service/Service.hpp" line="76" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d6/df3/classsamchon_1_1protocol_1_1service_1_1Service_1affacb5ec71562ca885ddb5127211e394" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>auto</type>
        <definition>auto getClient</definition>
        <argsstring>() const  -&gt; Client *</argsstring>
        <name>getClient</name>
        <briefdescription>
<para>Get <ref refid="df/d31/classsamchon_1_1protocol_1_1service_1_1Client" kindref="compound">Client</ref>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/OneDrive/Project/Samchon/framework/cpp/samchon/protocol/service/Service.hpp" line="81" column="1" bodyfile="D:/OneDrive/Project/Samchon/framework/cpp/samchon/protocol/service/Service.cpp" bodystart="32" bodyend="35"/>
      </memberdef>
      <memberdef kind="function" id="d6/df3/classsamchon_1_1protocol_1_1service_1_1Service_1a7e9e36d7847d933abbf3b1eda35aab0d" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void sendData</definition>
        <argsstring>(std::shared_ptr&lt; Invoke &gt;)</argsstring>
        <name>sendData</name>
        <reimplements refid="d4/dcf/classsamchon_1_1protocol_1_1IProtocol_1ac531693224b79ece2762da1e52bec0b6">sendData</reimplements>
        <param>
          <type>std::shared_ptr&lt; <ref refid="d8/d82/classsamchon_1_1protocol_1_1Invoke" kindref="compound">Invoke</ref> &gt;</type>
        </param>
        <briefdescription>
<para>Shift the responsibility of sending an <ref refid="d8/d82/classsamchon_1_1protocol_1_1Invoke" kindref="compound">Invoke</ref> message to <ref refid="df/d31/classsamchon_1_1protocol_1_1service_1_1Client" kindref="compound">Client</ref>. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>in</parametername>
</parameternamelist>
<parameterdescription>
<para>An <ref refid="d8/d82/classsamchon_1_1protocol_1_1Invoke" kindref="compound">Invoke</ref> message to be sent to the (physical) client </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/OneDrive/Project/Samchon/framework/cpp/samchon/protocol/service/Service.hpp" line="92" column="1" bodyfile="D:/OneDrive/Project/Samchon/framework/cpp/samchon/protocol/service/Service.cpp" bodystart="40" bodyend="43"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>A service. </para>    </briefdescription>
    <detaileddescription>
<para>A service represents an unique functions of a web page </para><para>Most of functinos are realized in here. The <ref refid="d6/df3/classsamchon_1_1protocol_1_1service_1_1Service" kindref="compound">Service</ref> is correspondent with a &apos;a service of a web page&apos;. For a cloud <ref refid="d9/d35/classsamchon_1_1protocol_1_1service_1_1Server" kindref="compound">Server</ref>, there can be enormous <ref refid="d6/df3/classsamchon_1_1protocol_1_1service_1_1Service" kindref="compound">Service</ref> classes. Create Services for each functions and Define the functions detail in here. </para><para><image type="html" name="protocol_service.png"></image>
 <image type="latex" name="protocol_service.png"></image>
</para><para><simplesect kind="see"><para><ref refid="db/d64/namespacesamchon_1_1protocol" kindref="compound">samchon::protocol</ref> </para></simplesect>
<simplesect kind="see"><para><ref refid="d8/d70/namespacesamchon_1_1protocol_1_1service" kindref="compound">samchon::protocol::service</ref> </para></simplesect>
<simplesect kind="author"><para>Jeongho Nam </para></simplesect>
</para>    </detaileddescription>
    <inheritancegraph>
      <node id="2618">
        <label>IProtocol</label>
        <link refid="d4/dcf/classsamchon_1_1protocol_1_1IProtocol"/>
      </node>
      <node id="2617">
        <label>Service</label>
        <link refid="d6/df3/classsamchon_1_1protocol_1_1service_1_1Service"/>
        <childnode refid="2618" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2620">
        <label>ListService</label>
        <link refid="dd/de9/classsamchon_1_1example_1_1chat__service_1_1ListService"/>
        <childnode refid="2617" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2619">
        <label>ChatService</label>
        <link refid="df/de2/classsamchon_1_1example_1_1chat__service_1_1ChatService"/>
        <childnode refid="2617" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2633">
        <label>SQLStatement</label>
        <link refid="de/def/classsamchon_1_1library_1_1SQLStatement"/>
        <childnode refid="2634" relation="usage">
          <edgelabel>bindParameterBASizeMap</edgelabel>
        </childnode>
        <childnode refid="2632" relation="usage">
          <edgelabel>sqli</edgelabel>
        </childnode>
      </node>
      <node id="2627">
        <label>Server</label>
        <link refid="d9/d35/classsamchon_1_1protocol_1_1service_1_1Server"/>
        <childnode refid="2628" relation="private-inheritance">
        </childnode>
        <childnode refid="2629" relation="public-inheritance">
        </childnode>
        <childnode refid="2630" relation="usage">
          <edgelabel>mtx</edgelabel>
        </childnode>
        <childnode refid="2631" relation="usage">
          <edgelabel>ipMap</edgelabel>
        </childnode>
        <childnode refid="2632" relation="usage">
          <edgelabel>sqli</edgelabel>
        </childnode>
      </node>
      <node id="2634">
        <label>Map&lt; size_t, SQL_SIZE_T &gt;</label>
        <link refid="d1/d4e/classsamchon_1_1Map"/>
      </node>
      <node id="2622">
        <label>IProtocol</label>
        <link refid="d4/dcf/classsamchon_1_1protocol_1_1IProtocol"/>
      </node>
      <node id="2621">
        <label>Service</label>
        <link refid="d6/df3/classsamchon_1_1protocol_1_1service_1_1Service"/>
        <childnode refid="2622" relation="public-inheritance">
        </childnode>
        <childnode refid="2623" relation="usage">
          <edgelabel>client</edgelabel>
        </childnode>
      </node>
      <node id="2635">
        <label>IPUserPair</label>
        <link refid="df/dc6/classsamchon_1_1protocol_1_1service_1_1IPUserPair"/>
        <childnode refid="2627" relation="usage">
          <edgelabel>server</edgelabel>
        </childnode>
      </node>
      <node id="2629">
        <label>IServer</label>
        <link refid="d4/de8/classsamchon_1_1protocol_1_1IServer"/>
      </node>
      <node id="2628">
        <label>Dictionary&lt; SmartPointer&lt; User &gt; &gt;</label>
        <link refid="d1/d4e/classsamchon_1_1Map"/>
      </node>
      <node id="2623">
        <label>Client</label>
        <link refid="df/d31/classsamchon_1_1protocol_1_1service_1_1Client"/>
        <childnode refid="2624" relation="public-inheritance">
        </childnode>
        <childnode refid="2621" relation="usage">
          <edgelabel>service</edgelabel>
        </childnode>
        <childnode refid="2625" relation="usage">
          <edgelabel>user</edgelabel>
        </childnode>
      </node>
      <node id="2624">
        <label>IClient</label>
        <link refid="d3/dc8/classsamchon_1_1protocol_1_1IClient"/>
        <childnode refid="2622" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2626">
        <label>Map&lt; size_t, SmartPointer&lt; Client &gt; &gt;</label>
        <link refid="d1/d4e/classsamchon_1_1Map"/>
      </node>
      <node id="2636">
        <label>Semaphore</label>
        <link refid="d9/d88/classsamchon_1_1library_1_1Semaphore"/>
      </node>
      <node id="2631">
        <label>Map&lt; std::shared_ptr&lt; samchon::protocol::service::IPUserPair &gt; &gt;</label>
        <link refid="d1/d4e/classsamchon_1_1Map"/>
      </node>
      <node id="2632">
        <label>SQLi</label>
        <link refid="d9/d2f/classsamchon_1_1library_1_1SQLi"/>
        <childnode refid="2633" relation="usage">
          <edgelabel>stmt</edgelabel>
        </childnode>
      </node>
      <node id="2630">
        <label>RWMutex</label>
        <link refid="df/d85/classsamchon_1_1library_1_1RWMutex"/>
      </node>
      <node id="2625">
        <label>User</label>
        <link refid="df/d87/classsamchon_1_1protocol_1_1service_1_1User"/>
        <childnode refid="2626" relation="private-inheritance">
        </childnode>
        <childnode refid="2622" relation="public-inheritance">
        </childnode>
        <childnode refid="2627" relation="usage">
          <edgelabel>server</edgelabel>
        </childnode>
        <childnode refid="2635" relation="usage">
          <edgelabel>ipPair</edgelabel>
        </childnode>
        <childnode refid="2636" relation="usage">
          <edgelabel>semaphore</edgelabel>
        </childnode>
        <childnode refid="2630" relation="usage">
          <edgelabel>mtx</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="D:/OneDrive/Project/Samchon/framework/cpp/samchon/protocol/service/Service.hpp" line="46" column="1" bodyfile="D:/OneDrive/Project/Samchon/framework/cpp/samchon/protocol/service/Service.hpp" bodystart="44" bodyend="93"/>
    <listofallmembers>
      <member refid="d6/df3/classsamchon_1_1protocol_1_1service_1_1Service_1a7ba03d23f0fe6a45f3a367d55a660365" prot="protected" virt="non-virtual"><scope>samchon::protocol::service::Service</scope><name>__keepAlive</name></member>
      <member refid="d6/df3/classsamchon_1_1protocol_1_1service_1_1Service_1a0388c33353644129ea9403f0a5a8ed24" prot="private" virt="non-virtual"><scope>samchon::protocol::service::Service</scope><name>client</name></member>
      <member refid="d6/df3/classsamchon_1_1protocol_1_1service_1_1Service_1affacb5ec71562ca885ddb5127211e394" prot="public" virt="non-virtual"><scope>samchon::protocol::service::Service</scope><name>getClient</name></member>
      <member refid="d4/dcf/classsamchon_1_1protocol_1_1IProtocol_1a6258c530c328dc119e698bb7e7fe222a" prot="public" virt="non-virtual"><scope>samchon::protocol::service::Service</scope><name>IProtocol</name></member>
      <member refid="d6/df3/classsamchon_1_1protocol_1_1service_1_1Service_1a9b45b3e13bd9167aab02e17e08916231" prot="private" virt="non-virtual"><scope>samchon::protocol::service::Service</scope><name>name</name></member>
      <member refid="d4/dcf/classsamchon_1_1protocol_1_1IProtocol_1a8debd8a0f208dbf9778fe66248443317" prot="public" virt="virtual"><scope>samchon::protocol::service::Service</scope><name>replyData</name></member>
      <member refid="d6/df3/classsamchon_1_1protocol_1_1service_1_1Service_1afdf80fdcaf3e7586fd73c68e86e15c35" prot="protected" virt="virtual"><scope>samchon::protocol::service::Service</scope><name>REQUIRE_AUTHORITY</name></member>
      <member refid="d6/df3/classsamchon_1_1protocol_1_1service_1_1Service_1a7e9e36d7847d933abbf3b1eda35aab0d" prot="public" virt="virtual"><scope>samchon::protocol::service::Service</scope><name>sendData</name></member>
      <member refid="d6/df3/classsamchon_1_1protocol_1_1service_1_1Service_1a62468fde5c45705263bc7d3a55fefba0" prot="public" virt="non-virtual"><scope>samchon::protocol::service::Service</scope><name>Service</name></member>
      <member refid="d6/df3/classsamchon_1_1protocol_1_1service_1_1Service_1a380f29337ca395f025ccbfad590ae552" prot="private" virt="non-virtual"><scope>samchon::protocol::service::Service</scope><name>super</name></member>
      <member refid="d4/dcf/classsamchon_1_1protocol_1_1IProtocol_1a51a537c2b3a6ff5eb7b5ed859cc062ad" prot="public" virt="virtual"><scope>samchon::protocol::service::Service</scope><name>~IProtocol</name></member>
      <member refid="d6/df3/classsamchon_1_1protocol_1_1service_1_1Service_1a0e349bbea827eb94454eafb4f3367326" prot="public" virt="virtual"><scope>samchon::protocol::service::Service</scope><name>~Service</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
