<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.10">
  <compounddef id="d8/d47/classsamchon_1_1protocol_1_1ExternalClientArray" kind="class" language="C++" prot="public">
    <compoundname>samchon::protocol::ExternalClientArray</compoundname>
    <basecompoundref refid="d9/dc6/classsamchon_1_1protocol_1_1ExternalSystemArray" prot="public" virt="virtual">ExternalSystemArray</basecompoundref>
    <basecompoundref refid="d4/de8/classsamchon_1_1protocol_1_1IServer" prot="private" virt="virtual">IServer</basecompoundref>
    <derivedcompoundref refid="d3/db6/classsamchon_1_1protocol_1_1master_1_1DistributedClientArray" prot="public" virt="virtual">DistributedClientArray</derivedcompoundref>
    <derivedcompoundref refid="d1/dc7/classsamchon_1_1protocol_1_1master_1_1ParallelClientArray" prot="public" virt="virtual">ParallelClientArray</derivedcompoundref>
    <includes refid="db/d1a/ExternalClientArray_8hpp" local="no">ExternalClientArray.hpp</includes>
      <sectiondef kind="protected-type">
      <memberdef kind="typedef" id="d8/d47/classsamchon_1_1protocol_1_1ExternalClientArray_1aca1e4de588731589c8927de24fd0b876" prot="protected" static="no">
        <type><ref refid="d9/dc6/classsamchon_1_1protocol_1_1ExternalSystemArray" kindref="compound">ExternalSystemArray</ref></type>
        <definition>typedef ExternalSystemArray super</definition>
        <argsstring></argsstring>
        <name>super</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/OneDrive/Project/Samchon/framework/cpp/samchon/protocol/ExternalClientArray.hpp" line="27" column="1" bodyfile="D:/OneDrive/Project/Samchon/framework/cpp/samchon/protocol/ExternalClientArray.hpp" bodystart="27" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="d8/d47/classsamchon_1_1protocol_1_1ExternalClientArray_1a44adb27db8882b3fa685710516c6c120" prot="protected" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string myIP</definition>
        <argsstring></argsstring>
        <name>myIP</name>
        <briefdescription>
<para>A custom ip address of my system to bind. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/OneDrive/Project/Samchon/framework/cpp/samchon/protocol/ExternalClientArray.hpp" line="32" column="1" bodyfile="D:/OneDrive/Project/Samchon/framework/cpp/samchon/protocol/ExternalClientArray.hpp" bodystart="32" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d8/d47/classsamchon_1_1protocol_1_1ExternalClientArray_1a63c89c04d1feae07ca35558055155ffb" prot="protected" static="no" mutable="no">
        <type>int</type>
        <definition>int port</definition>
        <argsstring></argsstring>
        <name>port</name>
        <briefdescription>
<para>A port number for accepting external clients. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/OneDrive/Project/Samchon/framework/cpp/samchon/protocol/ExternalClientArray.hpp" line="37" column="1" bodyfile="D:/OneDrive/Project/Samchon/framework/cpp/samchon/protocol/ExternalClientArray.hpp" bodystart="37" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="d8/d47/classsamchon_1_1protocol_1_1ExternalClientArray_1a8b7d27bbe8a9078d63f7b81e99e1684a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>ExternalClientArray</definition>
        <argsstring>()</argsstring>
        <name>ExternalClientArray</name>
        <briefdescription>
<para>Default Constructor. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/OneDrive/Project/Samchon/framework/cpp/samchon/protocol/ExternalClientArray.hpp" line="46" column="1" bodyfile="D:/OneDrive/Project/Samchon/framework/cpp/samchon/protocol/ExternalClientArray.cpp" bodystart="16" bodyend="20"/>
      </memberdef>
      <memberdef kind="function" id="d8/d47/classsamchon_1_1protocol_1_1ExternalClientArray_1a12a4f4c5790972f2732b6f5e9b656fe4" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>virtual ~ExternalClientArray</definition>
        <argsstring>()=default</argsstring>
        <name>~ExternalClientArray</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/OneDrive/Project/Samchon/framework/cpp/samchon/protocol/ExternalClientArray.hpp" line="47" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d8/d47/classsamchon_1_1protocol_1_1ExternalClientArray_1a4c4b7d9441b10a734e8ce75e67d0375c" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void construct</definition>
        <argsstring>(std::shared_ptr&lt; library::XML &gt;) override</argsstring>
        <name>construct</name>
        <reimplements refid="d4/deb/classsamchon_1_1protocol_1_1EntityGroup_1a49bad12c4913a280d0249479ee08edc2">construct</reimplements>
        <reimplementedby refid="d3/db6/classsamchon_1_1protocol_1_1master_1_1DistributedClientArray_1a4ca1bd41b274e7cc42e80b90de4794bc">construct</reimplementedby>
        <reimplementedby refid="d4/d53/classsamchon_1_1protocol_1_1master_1_1ParallelClientArrayMediator_1a4ca1bd41b274e7cc42e80b90de4794bc">construct</reimplementedby>
        <reimplementedby refid="d9/ddf/classsamchon_1_1protocol_1_1master_1_1DistributedClientArrayMediator_1a4ca1bd41b274e7cc42e80b90de4794bc">construct</reimplementedby>
        <param>
          <type>std::shared_ptr&lt; <ref refid="d5/d37/classsamchon_1_1library_1_1XML" kindref="compound">library::XML</ref> &gt;</type>
          <declname>xml</declname>
        </param>
        <briefdescription>
<para>Construct data of the <ref refid="d0/d3e/classsamchon_1_1protocol_1_1Entity" kindref="compound">Entity</ref> from an XML object. </para>        </briefdescription>
        <detaileddescription>
<para>Constructs the <ref refid="d4/deb/classsamchon_1_1protocol_1_1EntityGroup" kindref="compound">EntityGroup</ref>&apos;s own member variables only from the input XML object. </para><para>Do not consider about constructing children <ref refid="d0/d3e/classsamchon_1_1protocol_1_1Entity" kindref="compound">Entity</ref> objects&apos; data in <ref refid="d4/deb/classsamchon_1_1protocol_1_1EntityGroup_1a49bad12c4913a280d0249479ee08edc2" kindref="member">EntityGroup::construct()</ref>. Those children <ref refid="d0/d3e/classsamchon_1_1protocol_1_1Entity" kindref="compound">Entity</ref> objects&apos; data will constructed by their own <ref refid="d8/d47/classsamchon_1_1protocol_1_1ExternalClientArray_1a4c4b7d9441b10a734e8ce75e67d0375c" kindref="member">construct()</ref> method. Even insertion of XML objects representing children are done by abstract method of <ref refid="d4/deb/classsamchon_1_1protocol_1_1EntityGroup_1a30dee0fe2044f2f88579935cc10fc753" kindref="member">EntityGroup::toXML()</ref>. </para><para>Constructs only data of <ref refid="d4/deb/classsamchon_1_1protocol_1_1EntityGroup" kindref="compound">EntityGroup</ref>&apos;s own. </para><para><simplesect kind="par"><title>[Inherited]</title><para>Construct data of the <ref refid="d0/d3e/classsamchon_1_1protocol_1_1Entity" kindref="compound">Entity</ref> from an XML object. </para></simplesect>
Overrides the <ref refid="d8/d47/classsamchon_1_1protocol_1_1ExternalClientArray_1a4c4b7d9441b10a734e8ce75e67d0375c" kindref="member">construct()</ref> method and fetch data of member variables from the XML. </para><para>By recommended guidance, data representing member variables are contained in properties of the put XML object. </para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>xml</parametername>
</parameternamelist>
<parameterdescription>
<para>An xml used to construct data of entity </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/OneDrive/Project/Samchon/framework/cpp/samchon/protocol/ExternalClientArray.hpp" line="49" column="1" bodyfile="D:/OneDrive/Project/Samchon/framework/cpp/samchon/protocol/ExternalClientArray.cpp" bodystart="21" bodyend="31"/>
      </memberdef>
      <memberdef kind="function" id="d8/d47/classsamchon_1_1protocol_1_1ExternalClientArray_1a5d5d9ebd12cd3a7d268bc98a3fc7bf97" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void start</definition>
        <argsstring>() override</argsstring>
        <name>start</name>
        <reimplements refid="d9/dc6/classsamchon_1_1protocol_1_1ExternalSystemArray_1ac0ae5f26cd2001d772aed9d2ea97d41c">start</reimplements>
        <reimplementedby refid="d3/db6/classsamchon_1_1protocol_1_1master_1_1DistributedClientArray_1a2af117417cc4c8d4311fc92545326905">start</reimplementedby>
        <reimplementedby refid="d4/d53/classsamchon_1_1protocol_1_1master_1_1ParallelClientArrayMediator_1a2af117417cc4c8d4311fc92545326905">start</reimplementedby>
        <reimplementedby refid="d9/ddf/classsamchon_1_1protocol_1_1master_1_1DistributedClientArrayMediator_1a2af117417cc4c8d4311fc92545326905">start</reimplementedby>
        <briefdescription>
<para>Start interaction. </para>        </briefdescription>
        <detaileddescription>
<para>An abstract method starting interaction with external systems. </para><para>If external systems are servers, starts connection to them, else clients, opens a server and accepts the external systems. You can addict your own procudures of starting drivers, but if you directly override method of abstract <ref refid="d9/dc6/classsamchon_1_1protocol_1_1ExternalSystemArray" kindref="compound">ExternalSystemArray</ref>, be careful about virtual inheritance. </para><para><itemizedlist>
<listitem><para>DistributedClientArray::start() calls DistributedSystemArray::start() and <ref refid="d8/d47/classsamchon_1_1protocol_1_1ExternalClientArray" kindref="compound">ExternalClientArray</ref>:<ref refid="d8/d47/classsamchon_1_1protocol_1_1ExternalClientArray_1a5d5d9ebd12cd3a7d268bc98a3fc7bf97" kindref="member">start()</ref> </para></listitem>
</itemizedlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/OneDrive/Project/Samchon/framework/cpp/samchon/protocol/ExternalClientArray.hpp" line="51" column="1" bodyfile="D:/OneDrive/Project/Samchon/framework/cpp/samchon/protocol/ExternalClientArray.cpp" bodystart="33" bodyend="36"/>
      </memberdef>
      <memberdef kind="function" id="d8/d47/classsamchon_1_1protocol_1_1ExternalClientArray_1ac0248fcb25b3fa4f463d545005fdcbf3" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>auto</type>
        <definition>auto toXML</definition>
        <argsstring>() const  -&gt; std::shared_ptr&lt; library::XML &gt; override</argsstring>
        <name>toXML</name>
        <reimplements refid="d4/deb/classsamchon_1_1protocol_1_1EntityGroup_1a30dee0fe2044f2f88579935cc10fc753">toXML</reimplements>
        <reimplementedby refid="d3/db6/classsamchon_1_1protocol_1_1master_1_1DistributedClientArray_1aad9fbd4de53a3243bd213e7158ed2e48">toXML</reimplementedby>
        <reimplementedby refid="d4/d53/classsamchon_1_1protocol_1_1master_1_1ParallelClientArrayMediator_1aad9fbd4de53a3243bd213e7158ed2e48">toXML</reimplementedby>
        <reimplementedby refid="d9/ddf/classsamchon_1_1protocol_1_1master_1_1DistributedClientArrayMediator_1aad9fbd4de53a3243bd213e7158ed2e48">toXML</reimplementedby>
        <briefdescription>
<para>Get an XML object represents the <ref refid="d4/deb/classsamchon_1_1protocol_1_1EntityGroup" kindref="compound">EntityGroup</ref>. </para>        </briefdescription>
        <detaileddescription>
<para>Archives the <ref refid="d4/deb/classsamchon_1_1protocol_1_1EntityGroup" kindref="compound">EntityGroup</ref>&apos;s own member variables only to the returned XML object. </para><para>Do not consider about archiving children <ref refid="d0/d3e/classsamchon_1_1protocol_1_1Entity" kindref="compound">Entity</ref> objects&apos; data in <ref refid="d4/deb/classsamchon_1_1protocol_1_1EntityGroup_1a30dee0fe2044f2f88579935cc10fc753" kindref="member">EntityGroup::toXML()</ref>. Those children <ref refid="d0/d3e/classsamchon_1_1protocol_1_1Entity" kindref="compound">Entity</ref> objects will converted to XML object by their own <ref refid="d8/d47/classsamchon_1_1protocol_1_1ExternalClientArray_1ac0248fcb25b3fa4f463d545005fdcbf3" kindref="member">toXML()</ref> method. The insertion of XML objects representing children are done by abstract method of <ref refid="d4/deb/classsamchon_1_1protocol_1_1EntityGroup_1a30dee0fe2044f2f88579935cc10fc753" kindref="member">EntityGroup::toXML()</ref>. </para><para>Archives only data of <ref refid="d4/deb/classsamchon_1_1protocol_1_1EntityGroup" kindref="compound">EntityGroup</ref>&apos;s own. </para><para><simplesect kind="par"><title>[Inherited]</title><para>Get an XML object represents the <ref refid="d0/d3e/classsamchon_1_1protocol_1_1Entity" kindref="compound">Entity</ref>. </para></simplesect>
Returns an XML object that can represents the <ref refid="d0/d3e/classsamchon_1_1protocol_1_1Entity" kindref="compound">Entity</ref> containing member variables into properties. </para><para>A member variable (not object, but atomic value like number, string or date) is categorized as a property within the framework of entity side. Thus, when overriding a <ref refid="d8/d47/classsamchon_1_1protocol_1_1ExternalClientArray_1ac0248fcb25b3fa4f463d545005fdcbf3" kindref="member">toXML()</ref> method and archiving member variables to an XML object to return, puts each variable to be a property belongs to only an XML object. </para><para>Don&apos;t archive the member variable of atomic value to XML::value causing enormouse creation of XML objects to number of member variables. An <ref refid="d0/d3e/classsamchon_1_1protocol_1_1Entity" kindref="compound">Entity</ref> must be represented by only an XML instance (tag). </para><para><table rows="2" cols="2"><row>
<entry thead="yes"><para>Standard Usage  </para></entry><entry thead="yes"><para>Non-standard usage abusing value   </para></entry></row>
<row>
<entry thead="no"><para>&lt;memberList&gt;<linebreak/>
 <nonbreakablespace/><nonbreakablespace/><nonbreakablespace/><nonbreakablespace/> &lt;member id=&apos;jhnam88&apos; name=&apos;Jeongho+Nam&apos; birthdate=&apos;1988-03-11&apos; /&gt;<linebreak/>
 <nonbreakablespace/><nonbreakablespace/><nonbreakablespace/><nonbreakablespace/> &lt;member id=&apos;master&apos; name=&apos;Administartor&apos; birthdate=&apos;2011-07-28&apos; /&gt;<linebreak/>
 &lt;/memberList&gt;  </para></entry><entry thead="no"><para>&lt;member&gt;<linebreak/>
 <nonbreakablespace/><nonbreakablespace/><nonbreakablespace/><nonbreakablespace/> &lt;id&gt;jhnam88&lt;/id&gt;<linebreak/>
 <nonbreakablespace/><nonbreakablespace/><nonbreakablespace/><nonbreakablespace/> &lt;name&gt;Jeongho+Nam&lt;/name&gt;<linebreak/>
 <nonbreakablespace/><nonbreakablespace/><nonbreakablespace/><nonbreakablespace/> &lt;birthdate&gt;1988-03-11&lt;/birthdate&gt;<linebreak/>
 &lt;/member&gt;   </para></entry></row>
</table>
</para><para><simplesect kind="return"><para>An XML object representing the <ref refid="d0/d3e/classsamchon_1_1protocol_1_1Entity" kindref="compound">Entity</ref>. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/OneDrive/Project/Samchon/framework/cpp/samchon/protocol/ExternalClientArray.hpp" line="66" column="1" bodyfile="D:/OneDrive/Project/Samchon/framework/cpp/samchon/protocol/ExternalClientArray.cpp" bodystart="72" bodyend="80"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="d8/d47/classsamchon_1_1protocol_1_1ExternalClientArray_1a2171eeb63a6bb81dc32ab38c26a770ba" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>auto</type>
        <definition>auto PORT</definition>
        <argsstring>() const  -&gt; int</argsstring>
        <name>PORT</name>
        <reimplements refid="d4/de8/classsamchon_1_1protocol_1_1IServer_1a323a09d6b1b257bfcce9cac1b2650bcf">PORT</reimplements>
        <briefdescription>
<para>Port number of the server. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/OneDrive/Project/Samchon/framework/cpp/samchon/protocol/ExternalClientArray.hpp" line="57" column="1" bodyfile="D:/OneDrive/Project/Samchon/framework/cpp/samchon/protocol/ExternalClientArray.cpp" bodystart="41" bodyend="44"/>
      </memberdef>
      <memberdef kind="function" id="d8/d47/classsamchon_1_1protocol_1_1ExternalClientArray_1a4f40efeae64b5ccb29406a0f8f9e0ce6" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>auto</type>
        <definition>auto MY_IP</definition>
        <argsstring>() const  -&gt; std::string</argsstring>
        <name>MY_IP</name>
        <reimplements refid="d4/de8/classsamchon_1_1protocol_1_1IServer_1a4f40efeae64b5ccb29406a0f8f9e0ce6">MY_IP</reimplements>
        <briefdescription>
<para>(optional) Server&apos;s IP </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/OneDrive/Project/Samchon/framework/cpp/samchon/protocol/ExternalClientArray.hpp" line="58" column="1" bodyfile="D:/OneDrive/Project/Samchon/framework/cpp/samchon/protocol/ExternalClientArray.cpp" bodystart="45" bodyend="48"/>
      </memberdef>
      <memberdef kind="function" id="d8/d47/classsamchon_1_1protocol_1_1ExternalClientArray_1a9cbdd988cd4a917f6b47162103bfd550" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void addClient</definition>
        <argsstring>(Socket *) override</argsstring>
        <name>addClient</name>
        <reimplements refid="d4/de8/classsamchon_1_1protocol_1_1IServer_1a89a707ebf106e0e2cecfee911c45cd6a">addClient</reimplements>
        <param>
          <type>Socket *</type>
        </param>
        <briefdescription>
<para>Handling connection of a physical client. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/OneDrive/Project/Samchon/framework/cpp/samchon/protocol/ExternalClientArray.hpp" line="60" column="1" bodyfile="D:/OneDrive/Project/Samchon/framework/cpp/samchon/protocol/ExternalClientArray.cpp" bodystart="50" bodyend="67"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>An array of ExternalClient(s) </para>    </briefdescription>
    <detaileddescription>
<para><ref refid="d8/d47/classsamchon_1_1protocol_1_1ExternalClientArray" kindref="compound">ExternalClientArray</ref> is an <ref refid="d9/dc6/classsamchon_1_1protocol_1_1ExternalSystemArray" kindref="compound">ExternalSystemArray</ref> specialized in clients&apos; driver. </para><para><simplesect kind="par"><title>[Inherited]</title><para></para></simplesect>
<ref refid="d9/dc6/classsamchon_1_1protocol_1_1ExternalSystemArray" kindref="compound">ExternalSystemArray</ref> is an abstract class containing and managing external system drivers. </para><para>Also, <ref refid="d9/dc6/classsamchon_1_1protocol_1_1ExternalSystemArray" kindref="compound">ExternalSystemArray</ref> can access to ExternalSystemRole(s) directly. With the method, you can use an <ref refid="d4/db7/classsamchon_1_1protocol_1_1ExternalSystemRole" kindref="compound">ExternalSystemRole</ref> as &quot;logical proxy&quot; of an <ref refid="df/d42/classsamchon_1_1protocol_1_1ExternalSystem" kindref="compound">ExternalSystem</ref>. Of course, the <ref refid="d4/db7/classsamchon_1_1protocol_1_1ExternalSystemRole" kindref="compound">ExternalSystemRole</ref> is belonged to an <ref refid="df/d42/classsamchon_1_1protocol_1_1ExternalSystem" kindref="compound">ExternalSystem</ref>. However, if you access an <ref refid="d4/db7/classsamchon_1_1protocol_1_1ExternalSystemRole" kindref="compound">ExternalSystemRole</ref> from an <ref refid="d9/dc6/classsamchon_1_1protocol_1_1ExternalSystemArray" kindref="compound">ExternalSystemArray</ref> directly, not passing by a belonged <ref refid="df/d42/classsamchon_1_1protocol_1_1ExternalSystem" kindref="compound">ExternalSystem</ref>, and send an <ref refid="d8/d82/classsamchon_1_1protocol_1_1Invoke" kindref="compound">Invoke</ref> message even you&apos;re not knowing which <ref refid="df/d42/classsamchon_1_1protocol_1_1ExternalSystem" kindref="compound">ExternalSystem</ref> is related in, the <ref refid="d4/db7/classsamchon_1_1protocol_1_1ExternalSystemRole" kindref="compound">ExternalSystemRole</ref> acted a role of proxy. </para><para>It&apos;s called as &quot;Proxy pattern&quot;. With the pattern, you can only concentrate on <ref refid="d4/db7/classsamchon_1_1protocol_1_1ExternalSystemRole" kindref="compound">ExternalSystemRole</ref> itself, what to do with <ref refid="d8/d82/classsamchon_1_1protocol_1_1Invoke" kindref="compound">Invoke</ref> message, irrespective of the <ref refid="d4/db7/classsamchon_1_1protocol_1_1ExternalSystemRole" kindref="compound">ExternalSystemRole</ref> is belonged to which <ref refid="df/d42/classsamchon_1_1protocol_1_1ExternalSystem" kindref="compound">ExternalSystem</ref>. </para><para><itemizedlist>
<listitem><para><ref refid="d9/dc6/classsamchon_1_1protocol_1_1ExternalSystemArray_1a70a297de9780e1b1d2bb2de7e4166a90" kindref="member">ExternalSystemArray::getRole</ref>(&quot;something&quot;)-&gt;sendData(invoke);</para></listitem>
</itemizedlist>
<image type="html" name="protocol_external_system.png"></image>
 <image type="latex" name="protocol_external_system.png"></image>
</para><para><simplesect kind="see"><para><ref refid="db/d64/namespacesamchon_1_1protocol" kindref="compound">samchon::protocol</ref> </para></simplesect>
<simplesect kind="author"><para>Jeongho Nam </para></simplesect>
</para>    </detaileddescription>
    <inheritancegraph>
      <node id="1608">
        <label>ParallelClientArray</label>
        <link refid="d1/dc7/classsamchon_1_1protocol_1_1master_1_1ParallelClientArray"/>
        <childnode refid="1599" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1604">
        <label>IProtocol</label>
        <link refid="d4/dcf/classsamchon_1_1protocol_1_1IProtocol"/>
      </node>
      <node id="1605">
        <label>IServer</label>
        <link refid="d4/de8/classsamchon_1_1protocol_1_1IServer"/>
      </node>
      <node id="1599">
        <label>ExternalClientArray</label>
        <link refid="d8/d47/classsamchon_1_1protocol_1_1ExternalClientArray"/>
        <childnode refid="1600" relation="public-inheritance">
        </childnode>
        <childnode refid="1605" relation="private-inheritance">
        </childnode>
      </node>
      <node id="1607">
        <label>DistributedClientArrayMediator</label>
        <link refid="d9/ddf/classsamchon_1_1protocol_1_1master_1_1DistributedClientArrayMediator"/>
        <childnode refid="1606" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1609">
        <label>ParallelClientArrayMediator</label>
        <link refid="d4/d53/classsamchon_1_1protocol_1_1master_1_1ParallelClientArrayMediator"/>
        <childnode refid="1608" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1606">
        <label>DistributedClientArray</label>
        <link refid="d3/db6/classsamchon_1_1protocol_1_1master_1_1DistributedClientArray"/>
        <childnode refid="1599" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1601">
        <label>SharedEntityArray&lt; ExternalSystem &gt;</label>
        <link refid="d4/deb/classsamchon_1_1protocol_1_1EntityGroup"/>
        <childnode refid="1602" relation="public-inheritance">
        </childnode>
        <childnode refid="1603" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1602">
        <label>Entity</label>
        <link refid="d0/d3e/classsamchon_1_1protocol_1_1Entity"/>
      </node>
      <node id="1600">
        <label>ExternalSystemArray</label>
        <link refid="d9/dc6/classsamchon_1_1protocol_1_1ExternalSystemArray"/>
        <childnode refid="1601" relation="public-inheritance">
        </childnode>
        <childnode refid="1604" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1603">
        <label>IEntityGroup</label>
        <link refid="d9/d4c/classsamchon_1_1protocol_1_1IEntityGroup"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1615">
        <label>IProtocol</label>
        <link refid="d4/dcf/classsamchon_1_1protocol_1_1IProtocol"/>
      </node>
      <node id="1616">
        <label>IServer</label>
        <link refid="d4/de8/classsamchon_1_1protocol_1_1IServer"/>
      </node>
      <node id="1610">
        <label>ExternalClientArray</label>
        <link refid="d8/d47/classsamchon_1_1protocol_1_1ExternalClientArray"/>
        <childnode refid="1611" relation="public-inheritance">
        </childnode>
        <childnode refid="1616" relation="private-inheritance">
        </childnode>
      </node>
      <node id="1612">
        <label>SharedEntityArray&lt; ExternalSystem &gt;</label>
        <link refid="d4/deb/classsamchon_1_1protocol_1_1EntityGroup"/>
        <childnode refid="1613" relation="public-inheritance">
        </childnode>
        <childnode refid="1614" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1613">
        <label>Entity</label>
        <link refid="d0/d3e/classsamchon_1_1protocol_1_1Entity"/>
      </node>
      <node id="1611">
        <label>ExternalSystemArray</label>
        <link refid="d9/dc6/classsamchon_1_1protocol_1_1ExternalSystemArray"/>
        <childnode refid="1612" relation="public-inheritance">
        </childnode>
        <childnode refid="1615" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1614">
        <label>IEntityGroup</label>
        <link refid="d9/d4c/classsamchon_1_1protocol_1_1IEntityGroup"/>
      </node>
    </collaborationgraph>
    <location file="D:/OneDrive/Project/Samchon/framework/cpp/samchon/protocol/ExternalClientArray.hpp" line="25" column="1" bodyfile="D:/OneDrive/Project/Samchon/framework/cpp/samchon/protocol/ExternalClientArray.hpp" bodystart="22" bodyend="67"/>
    <listofallmembers>
      <member refid="d4/de8/classsamchon_1_1protocol_1_1IServer_1a2a20eac5e103a9e3be2dab523c2775e3" prot="private" virt="non-virtual"><scope>samchon::protocol::ExternalClientArray</scope><name>acceptor</name></member>
      <member refid="d8/d47/classsamchon_1_1protocol_1_1ExternalClientArray_1a9cbdd988cd4a917f6b47162103bfd550" prot="protected" virt="virtual"><scope>samchon::protocol::ExternalClientArray</scope><name>addClient</name></member>
      <member refid="d9/dc6/classsamchon_1_1protocol_1_1ExternalSystemArray_1a5cb3666da8a6a0efe4014782bda20af0" prot="public" virt="virtual"><scope>samchon::protocol::ExternalClientArray</scope><name>CHILD_TAG</name></member>
      <member refid="d4/de8/classsamchon_1_1protocol_1_1IServer_1a5ae591df94fc66ccb85cbb6565368bca" prot="private" virt="virtual"><scope>samchon::protocol::ExternalClientArray</scope><name>close</name></member>
      <member refid="d8/d47/classsamchon_1_1protocol_1_1ExternalClientArray_1a4c4b7d9441b10a734e8ce75e67d0375c" prot="public" virt="virtual"><scope>samchon::protocol::ExternalClientArray</scope><name>construct</name></member>
      <member refid="d4/deb/classsamchon_1_1protocol_1_1EntityGroup_1aac5cb7c267e3cf067657ca5a73363728" prot="protected" virt="non-virtual"><scope>samchon::protocol::ExternalClientArray</scope><name>container_type</name></member>
      <member refid="d4/deb/classsamchon_1_1protocol_1_1EntityGroup_1a554e0798083a38327f360c61a1ca716b" prot="protected" virt="pure-virtual"><scope>samchon::protocol::ExternalClientArray</scope><name>createChild</name></member>
      <member refid="d0/d3e/classsamchon_1_1protocol_1_1Entity_1afb4718a8ca5b822cf88129ae04240489" prot="public" virt="non-virtual"><scope>samchon::protocol::ExternalClientArray</scope><name>Entity</name></member>
      <member refid="d4/deb/classsamchon_1_1protocol_1_1EntityGroup_1a8e82af015377749a76c1839466abb676" prot="protected" virt="non-virtual"><scope>samchon::protocol::ExternalClientArray</scope><name>entity_type</name></member>
      <member refid="d4/deb/classsamchon_1_1protocol_1_1EntityGroup_1a14f6ca078bbeb51a6f6bc153f7384a7c" prot="public" virt="non-virtual"><scope>samchon::protocol::ExternalClientArray</scope><name>EntityGroup</name></member>
      <member refid="d8/d47/classsamchon_1_1protocol_1_1ExternalClientArray_1a8b7d27bbe8a9078d63f7b81e99e1684a" prot="public" virt="non-virtual"><scope>samchon::protocol::ExternalClientArray</scope><name>ExternalClientArray</name></member>
      <member refid="d9/dc6/classsamchon_1_1protocol_1_1ExternalSystemArray_1a52d24ac8e5f3d82192bf81f2f3d1f1cb" prot="public" virt="non-virtual"><scope>samchon::protocol::ExternalClientArray</scope><name>ExternalSystemArray</name></member>
      <member refid="d4/deb/classsamchon_1_1protocol_1_1EntityGroup_1af318f1e62268b7e178fdc2a9669444b8" prot="public" virt="non-virtual"><scope>samchon::protocol::ExternalClientArray</scope><name>get</name></member>
      <member refid="d4/deb/classsamchon_1_1protocol_1_1EntityGroup_1af5c2fb617197f93e98ec6c4b547d9bdd" prot="public" virt="non-virtual"><scope>samchon::protocol::ExternalClientArray</scope><name>get</name></member>
      <member refid="d9/dc6/classsamchon_1_1protocol_1_1ExternalSystemArray_1a70a297de9780e1b1d2bb2de7e4166a90" prot="public" virt="non-virtual"><scope>samchon::protocol::ExternalClientArray</scope><name>getRole</name></member>
      <member refid="d4/deb/classsamchon_1_1protocol_1_1EntityGroup_1a531cae9e9c8b395f8cde3f2ca243cc79" prot="public" virt="non-virtual"><scope>samchon::protocol::ExternalClientArray</scope><name>has</name></member>
      <member refid="d9/dc6/classsamchon_1_1protocol_1_1ExternalSystemArray_1a44289868c1c15c9c3bf706b4bf952408" prot="public" virt="non-virtual"><scope>samchon::protocol::ExternalClientArray</scope><name>hasRole</name></member>
      <member refid="d9/d4c/classsamchon_1_1protocol_1_1IEntityGroup_1a613d2b691653c86d5f900c8ba33ba30b" prot="public" virt="non-virtual"><scope>samchon::protocol::ExternalClientArray</scope><name>IEntityGroup</name></member>
      <member refid="d4/dcf/classsamchon_1_1protocol_1_1IProtocol_1a6258c530c328dc119e698bb7e7fe222a" prot="public" virt="non-virtual"><scope>samchon::protocol::ExternalClientArray</scope><name>IProtocol</name></member>
      <member refid="d4/de8/classsamchon_1_1protocol_1_1IServer_1acb43fd3ca9cd70ea120b70772668410e" prot="private" virt="non-virtual"><scope>samchon::protocol::ExternalClientArray</scope><name>IServer</name></member>
      <member refid="d0/d3e/classsamchon_1_1protocol_1_1Entity_1a5f7b0261859ce45be6fc2cef64026183" prot="public" virt="virtual"><scope>samchon::protocol::ExternalClientArray</scope><name>key</name></member>
      <member refid="d8/d47/classsamchon_1_1protocol_1_1ExternalClientArray_1a4f40efeae64b5ccb29406a0f8f9e0ce6" prot="protected" virt="virtual"><scope>samchon::protocol::ExternalClientArray</scope><name>MY_IP</name></member>
      <member refid="d8/d47/classsamchon_1_1protocol_1_1ExternalClientArray_1a44adb27db8882b3fa685710516c6c120" prot="protected" virt="non-virtual"><scope>samchon::protocol::ExternalClientArray</scope><name>myIP</name></member>
      <member refid="d4/de8/classsamchon_1_1protocol_1_1IServer_1a9e8555112049fc2b4945120b3c45f8ab" prot="private" virt="virtual"><scope>samchon::protocol::ExternalClientArray</scope><name>open</name></member>
      <member refid="d8/d47/classsamchon_1_1protocol_1_1ExternalClientArray_1a2171eeb63a6bb81dc32ab38c26a770ba" prot="protected" virt="virtual"><scope>samchon::protocol::ExternalClientArray</scope><name>PORT</name></member>
      <member refid="d8/d47/classsamchon_1_1protocol_1_1ExternalClientArray_1a63c89c04d1feae07ca35558055155ffb" prot="protected" virt="non-virtual"><scope>samchon::protocol::ExternalClientArray</scope><name>port</name></member>
      <member refid="d9/dc6/classsamchon_1_1protocol_1_1ExternalSystemArray_1a5b0e5be870f2d6a26004a8e637a1ce6c" prot="public" virt="virtual"><scope>samchon::protocol::ExternalClientArray</scope><name>replyData</name></member>
      <member refid="d9/dc6/classsamchon_1_1protocol_1_1ExternalSystemArray_1ae0f466a169b2d23786a2f94ac908672c" prot="public" virt="virtual"><scope>samchon::protocol::ExternalClientArray</scope><name>sendData</name></member>
      <member refid="d8/d47/classsamchon_1_1protocol_1_1ExternalClientArray_1a5d5d9ebd12cd3a7d268bc98a3fc7bf97" prot="public" virt="virtual"><scope>samchon::protocol::ExternalClientArray</scope><name>start</name></member>
      <member refid="d8/d47/classsamchon_1_1protocol_1_1ExternalClientArray_1aca1e4de588731589c8927de24fd0b876" prot="protected" virt="non-virtual"><scope>samchon::protocol::ExternalClientArray</scope><name>super</name></member>
      <member refid="d9/dc6/classsamchon_1_1protocol_1_1ExternalSystemArray_1aa55bc231502ef8e0dd9a9c274d028ac9" prot="public" virt="virtual"><scope>samchon::protocol::ExternalClientArray</scope><name>TAG</name></member>
      <member refid="d8/d47/classsamchon_1_1protocol_1_1ExternalClientArray_1ac0248fcb25b3fa4f463d545005fdcbf3" prot="public" virt="virtual"><scope>samchon::protocol::ExternalClientArray</scope><name>toXML</name></member>
      <member refid="d4/deb/classsamchon_1_1protocol_1_1EntityGroup_1aa03d6edd1546642516652a481c0bf8db" prot="protected" virt="non-virtual"><scope>samchon::protocol::ExternalClientArray</scope><name>value_type</name></member>
      <member refid="d0/d3e/classsamchon_1_1protocol_1_1Entity_1a07d18d40fa0c4b4f1341cfddc0b600dd" prot="public" virt="virtual"><scope>samchon::protocol::ExternalClientArray</scope><name>~Entity</name></member>
      <member refid="d4/deb/classsamchon_1_1protocol_1_1EntityGroup_1a0dd6821308dca7395965242148146aae" prot="public" virt="virtual"><scope>samchon::protocol::ExternalClientArray</scope><name>~EntityGroup</name></member>
      <member refid="d8/d47/classsamchon_1_1protocol_1_1ExternalClientArray_1a12a4f4c5790972f2732b6f5e9b656fe4" prot="public" virt="virtual"><scope>samchon::protocol::ExternalClientArray</scope><name>~ExternalClientArray</name></member>
      <member refid="d9/dc6/classsamchon_1_1protocol_1_1ExternalSystemArray_1a9583e8ac9d24be3c9cd8d001fb88ac94" prot="public" virt="virtual"><scope>samchon::protocol::ExternalClientArray</scope><name>~ExternalSystemArray</name></member>
      <member refid="d9/d4c/classsamchon_1_1protocol_1_1IEntityGroup_1ae41524ffa5ca16d3160dfd0b00e7800f" prot="public" virt="virtual"><scope>samchon::protocol::ExternalClientArray</scope><name>~IEntityGroup</name></member>
      <member refid="d4/dcf/classsamchon_1_1protocol_1_1IProtocol_1a51a537c2b3a6ff5eb7b5ed859cc062ad" prot="public" virt="virtual"><scope>samchon::protocol::ExternalClientArray</scope><name>~IProtocol</name></member>
      <member refid="d4/de8/classsamchon_1_1protocol_1_1IServer_1a7eb5d612e27167a8359bc3ee5045e6c8" prot="private" virt="virtual"><scope>samchon::protocol::ExternalClientArray</scope><name>~IServer</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
