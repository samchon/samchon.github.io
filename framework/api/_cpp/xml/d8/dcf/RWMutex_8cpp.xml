<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.10">
  <compounddef id="d8/dcf/RWMutex_8cpp" kind="file" language="C++">
    <compoundname>RWMutex.cpp</compoundname>
    <includes refid="dd/d85/RWMutex_8hpp" local="no">samchon/library/RWMutex.hpp</includes>
    <includes local="no">atomic</includes>
    <includes local="no">mutex</includes>
    <includes local="no">condition_variable</includes>
    <incdepgraph>
      <node id="1592">
        <label>atomic</label>
      </node>
      <node id="1590">
        <label>samchon/library/UniqueWriteLock.hpp</label>
        <link refid="d5/dcd/UniqueWriteLock_8hpp_source"/>
        <childnode refid="1588" relation="include">
        </childnode>
      </node>
      <node id="1593">
        <label>samchon/library/SharedWriteLock.hpp</label>
        <link refid="d8/d53/SharedWriteLock_8hpp_source"/>
        <childnode refid="1588" relation="include">
        </childnode>
        <childnode refid="1592" relation="include">
        </childnode>
      </node>
      <node id="1588">
        <label>samchon/API.hpp</label>
        <link refid="d9/d8f/API_8hpp_source"/>
      </node>
      <node id="1591">
        <label>samchon/library/SharedReadLock.hpp</label>
        <link refid="d0/df1/SharedReadLock_8hpp_source"/>
        <childnode refid="1588" relation="include">
        </childnode>
        <childnode refid="1592" relation="include">
        </childnode>
      </node>
      <node id="1595">
        <label>condition_variable</label>
      </node>
      <node id="1587">
        <label>samchon/library/RWMutex.hpp</label>
        <link refid="dd/d85/RWMutex_8hpp_source"/>
        <childnode refid="1588" relation="include">
        </childnode>
        <childnode refid="1589" relation="include">
        </childnode>
        <childnode refid="1590" relation="include">
        </childnode>
        <childnode refid="1591" relation="include">
        </childnode>
        <childnode refid="1593" relation="include">
        </childnode>
      </node>
      <node id="1594">
        <label>mutex</label>
      </node>
      <node id="1589">
        <label>samchon/library/UniqueReadLock.hpp</label>
        <link refid="d5/da5/UniqueReadLock_8hpp_source"/>
        <childnode refid="1588" relation="include">
        </childnode>
      </node>
      <node id="1586">
        <label>D:/OneDrive/Project/Samchon/framework/cpp/samchon/library/RWMutex.cpp</label>
        <link refid="RWMutex.cpp"/>
        <childnode refid="1587" relation="include">
        </childnode>
        <childnode refid="1592" relation="include">
        </childnode>
        <childnode refid="1594" relation="include">
        </childnode>
        <childnode refid="1595" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&lt;samchon/library/RWMutex.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;atomic&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;mutex&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;condition_variable&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal"><ref refid="d8/dcc/namespacestd" kindref="compound">std</ref>;</highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal"><ref refid="d8/dd4/namespacesamchon_1_1library" kindref="compound">samchon::library</ref>;</highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal">RWMutex::RWMutex()</highlight></codeline>
<codeline lineno="11"><highlight class="normal">{</highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/><sp/><sp/>readingCount<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>atomic&lt;size_t&gt;(0);</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/>isWriting<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>atomic&lt;bool&gt;(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/>cv<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>condition_variable();</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/>readMtx<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>mutex();</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/>writeMtx<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>mutex();</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/>minusMtx<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>mutex();</highlight></codeline>
<codeline lineno="19"><highlight class="normal">}</highlight></codeline>
<codeline lineno="20"><highlight class="normal">RWMutex::~RWMutex()</highlight></codeline>
<codeline lineno="21"><highlight class="normal">{</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>readingCount;</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>isWriting;</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>readMtx;</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>writeMtx;</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>minusMtx;</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>cv;</highlight></codeline>
<codeline lineno="29"><highlight class="normal">}</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>RWMutex::readLock()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="32"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/>unique_lock&lt;mutex&gt;<sp/>uk(*readMtx);</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(*isWriting<sp/>==<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cv-&gt;wait(uk);</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/>readingCount-&gt;operator++();</highlight></codeline>
<codeline lineno="38"><highlight class="normal">}</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>RWMutex::readUnlock()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="40"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/>unique_lock&lt;mutex&gt;<sp/>uk(*minusMtx);</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//차감<sp/>전<sp/>이미 0<sp/>(과도한<sp/>readUnlock<sp/>수행)<sp/>은<sp/>안 됨 <sp/><sp/><sp/><sp/>if<sp/>(
<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*readingCount<sp/>!=<sp/>0<sp/>&amp;&amp;
<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>readingCount-&gt;operator--()<sp/>==<sp/>0
<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)
<sp/><sp/>{
<sp/><sp/><sp/><sp/><sp/><sp/>cv-&gt;notify_all();
<sp/><sp/>}
}

void<sp/>RWMutex::writeLock()
{
<sp/><sp/><sp/>unique_lock&lt;mutex&gt;<sp/>uk(*writeMtx);
<sp/><sp/>while<sp/>(*isWriting<sp/>==<sp/>true<sp/>||<sp/>*readingCount<sp/>&gt;<sp/>0)
<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cv-&gt;wait(uk);

<sp/>isWriting-&gt;store(<sp/>true<sp/>);
}
void<sp/>RWMutex::writeUnlock()
{
<sp/><sp/>isWriting-&gt;store(<sp/>false<sp/>);
<sp/>cv-&gt;notify_all();
}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*readingCount<sp/>!=<sp/>0<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>readingCount-&gt;operator--()<sp/>==<sp/>0</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cv-&gt;notify_all();</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="51"><highlight class="normal">}</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>RWMutex::writeLock()</highlight></codeline>
<codeline lineno="54"><highlight class="normal">{</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/>unique_lock&lt;mutex&gt;<sp/>uk(*writeMtx);</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(*isWriting<sp/>==<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal"><sp/>||<sp/>*readingCount<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cv-&gt;wait(uk);</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/>isWriting-&gt;store(<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="60"><highlight class="normal">}</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>RWMutex::writeUnlock()</highlight></codeline>
<codeline lineno="62"><highlight class="normal">{</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/>isWriting-&gt;store(<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/>cv-&gt;notify_all();</highlight></codeline>
<codeline lineno="65"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="D:/OneDrive/Project/Samchon/framework/cpp/samchon/library/RWMutex.cpp"/>
  </compounddef>
</doxygen>
