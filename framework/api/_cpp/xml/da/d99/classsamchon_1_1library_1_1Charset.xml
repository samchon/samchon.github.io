<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.10">
  <compounddef id="da/d99/classsamchon_1_1library_1_1Charset" kind="class" language="C++" prot="public">
    <compoundname>samchon::library::Charset</compoundname>
    <includes refid="d4/d26/Charset_8hpp" local="no">Charset.hpp</includes>
      <sectiondef kind="public-type">
      <memberdef kind="enum" id="da/d99/classsamchon_1_1library_1_1Charset_1a227c705f12e74b62d986a994aec4813b" prot="public" static="no">
        <name>@0</name>
        <enumvalue id="da/d99/classsamchon_1_1library_1_1Charset_1a227c705f12e74b62d986a994aec4813ba958b32314f47db9e762635401c1dff72" prot="public">
          <name>MULTIBYTE</name>
          <initializer>= 4</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="da/d99/classsamchon_1_1library_1_1Charset_1a227c705f12e74b62d986a994aec4813bac4aa8bf4aaf220c87545078d3c43baaa" prot="public">
          <name>UTF8</name>
          <initializer>= 8</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/OneDrive/Project/Samchon/framework/cpp/samchon/library/Charset.hpp" line="34" column="1" bodyfile="D:/OneDrive/Project/Samchon/framework/cpp/samchon/library/Charset.hpp" bodystart="33" bodyend="37"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="da/d99/classsamchon_1_1library_1_1Charset_1a3705f2aebe2e3dd37373b1f7301eff9b" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>auto</type>
        <definition>static auto toMultibyte</definition>
        <argsstring>(const std::string &amp;) -&gt; std::string</argsstring>
        <name>toMultibyte</name>
        <param>
          <type>const std::string &amp;</type>
        </param>
        <briefdescription>
<para>Convert utf-8 to multibyte. </para>        </briefdescription>
        <detaileddescription>
<para>Converts utf-8 string to multibyte string. </para><para>If the utf-8 string has header int the front, it will be erased. </para><para><simplesect kind="warning"><para>If utf-8 header is not at the front of string, it can&apos;t be erased and may cause breakage on letters </para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>str</parametername>
</parameternamelist>
<parameterdescription>
<para>A utf-8 string would be converted to multibyte </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A multibyte string </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/OneDrive/Project/Samchon/framework/cpp/samchon/library/Charset.hpp" line="51" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d99/classsamchon_1_1library_1_1Charset_1add1051303019c055fd4edb2588ceb51c" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>auto</type>
        <definition>static auto toMultibyte</definition>
        <argsstring>(const std::wstring &amp;) -&gt; std::string</argsstring>
        <name>toMultibyte</name>
        <param>
          <type>const std::wstring &amp;</type>
        </param>
        <briefdescription>
<para>Convert unicode to multibyte. </para>        </briefdescription>
        <detaileddescription>
<para>Converts unicode string to multibyte string<linebreak/>
If the unicode string has header in the front, it will be erased</para><para><simplesect kind="warning"><para>If unicode header is not at the front of string, it can&apos;t be erased and may cause breakage on letters </para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>str</parametername>
</parameternamelist>
<parameterdescription>
<para>A unicode string to be converted </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A multibyte string </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/OneDrive/Project/Samchon/framework/cpp/samchon/library/Charset.hpp" line="65" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d99/classsamchon_1_1library_1_1Charset_1aa92ea544a560a2d33d384dcddee7e5e1" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>auto</type>
        <definition>static auto toUTF8</definition>
        <argsstring>(const std::string &amp;) -&gt; std::string</argsstring>
        <name>toUTF8</name>
        <param>
          <type>const std::string &amp;</type>
        </param>
        <briefdescription>
<para>Convert multibyte to utf-8. </para>        </briefdescription>
        <detaileddescription>
<para>Converts multibyte string to utf-8 string<linebreak/>
If the inputted string is not multibyte, then may cause breakage on letters</para><para><simplesect kind="warning"><para>Converted utf-8 string does not contain the header </para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>str</parametername>
</parameternamelist>
<parameterdescription>
<para>A multibyte string would be converted </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A utf-8 string </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/OneDrive/Project/Samchon/framework/cpp/samchon/library/Charset.hpp" line="78" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d99/classsamchon_1_1library_1_1Charset_1a85d1ce5dfa8e37473bbd747ef77e45cb" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>auto</type>
        <definition>static auto toUTF8</definition>
        <argsstring>(const std::wstring &amp;) -&gt; std::string</argsstring>
        <name>toUTF8</name>
        <param>
          <type>const std::wstring &amp;</type>
        </param>
        <briefdescription>
<para>Convert unicode to utf-8. </para>        </briefdescription>
        <detaileddescription>
<para>Converts unicode string to utf-8 string<linebreak/>
Generated utf-8 string follows unicode string wheter to have header or not <itemizedlist>
<listitem><para>If the unicode string has header on first, utf-8 will also have the header, too </para></listitem>
<listitem><para>If not, generated utf-8 string doesn&apos;t have the header, either</para></listitem>
</itemizedlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>str</parametername>
</parameternamelist>
<parameterdescription>
<para>A unicode string would be converted </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A utf-8 string </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/OneDrive/Project/Samchon/framework/cpp/samchon/library/Charset.hpp" line="92" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/d99/classsamchon_1_1library_1_1Charset_1abf4c39ac3b23a8c2d05fec2f8c87ec49" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>auto</type>
        <definition>static auto toUnicode</definition>
        <argsstring>(const std::string &amp;, int) -&gt; std::wstring</argsstring>
        <name>toUnicode</name>
        <param>
          <type>const std::string &amp;</type>
        </param>
        <param>
          <type>int</type>
        </param>
        <briefdescription>
<para>Convert multibyte or utf-8 to unicode. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>str</parametername>
</parameternamelist>
<parameterdescription>
<para>A multibyte or utf-8 string would be converted </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Designate</parametername>
</parameternamelist>
<parameterdescription>
<para>str is multibyte or utf-8 string </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A unicode string </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/OneDrive/Project/Samchon/framework/cpp/samchon/library/Charset.hpp" line="104" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>A utility class supporting conversion between multiple character-sets. </para>    </briefdescription>
    <detaileddescription>
<para><ref refid="da/d99/classsamchon_1_1library_1_1Charset" kindref="compound">Charset</ref> class, it&apos;s easier to think iconv in linux </para><para>Supported character-sets </para><para><itemizedlist>
<listitem><para>Multibyte (ANSI) </para></listitem>
<listitem><para>UTF-8 </para></listitem>
<listitem><para>Unicode (UTF-16)</para></listitem>
</itemizedlist>
<image type="html" name="library_string.png"></image>
 <image type="latex" name="library_string.png"></image>
</para><para><simplesect kind="warning"><para>In some system, std::wstring is not for utf-8 but for unicode (utf-16).</para></simplesect>
<simplesect kind="see"><para><ref refid="d8/dd4/namespacesamchon_1_1library" kindref="compound">samchon::library</ref> </para></simplesect>
<simplesect kind="author"><para>Jeongho Nam </para></simplesect>
</para>    </detaileddescription>
    <location file="D:/OneDrive/Project/Samchon/framework/cpp/samchon/library/Charset.hpp" line="31" column="1" bodyfile="D:/OneDrive/Project/Samchon/framework/cpp/samchon/library/Charset.hpp" bodystart="30" bodyend="105"/>
    <listofallmembers>
      <member refid="da/d99/classsamchon_1_1library_1_1Charset_1a227c705f12e74b62d986a994aec4813ba958b32314f47db9e762635401c1dff72" prot="public" virt="non-virtual"><scope>samchon::library::Charset</scope><name>MULTIBYTE</name></member>
      <member refid="da/d99/classsamchon_1_1library_1_1Charset_1a3705f2aebe2e3dd37373b1f7301eff9b" prot="public" virt="non-virtual"><scope>samchon::library::Charset</scope><name>toMultibyte</name></member>
      <member refid="da/d99/classsamchon_1_1library_1_1Charset_1add1051303019c055fd4edb2588ceb51c" prot="public" virt="non-virtual"><scope>samchon::library::Charset</scope><name>toMultibyte</name></member>
      <member refid="da/d99/classsamchon_1_1library_1_1Charset_1abf4c39ac3b23a8c2d05fec2f8c87ec49" prot="public" virt="non-virtual"><scope>samchon::library::Charset</scope><name>toUnicode</name></member>
      <member refid="da/d99/classsamchon_1_1library_1_1Charset_1aa92ea544a560a2d33d384dcddee7e5e1" prot="public" virt="non-virtual"><scope>samchon::library::Charset</scope><name>toUTF8</name></member>
      <member refid="da/d99/classsamchon_1_1library_1_1Charset_1a85d1ce5dfa8e37473bbd747ef77e45cb" prot="public" virt="non-virtual"><scope>samchon::library::Charset</scope><name>toUTF8</name></member>
      <member refid="da/d99/classsamchon_1_1library_1_1Charset_1a227c705f12e74b62d986a994aec4813bac4aa8bf4aaf220c87545078d3c43baaa" prot="public" virt="non-virtual"><scope>samchon::library::Charset</scope><name>UTF8</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
