<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.10">
  <compounddef id="d1/d6e/Invoke_8hpp" kind="file" language="C++">
    <compoundname>Invoke.hpp</compoundname>
    <includes refid="d9/d8f/API_8hpp" local="no">samchon/API.hpp</includes>
    <includes refid="d5/dc4/SharedEntityArray_8hpp" local="no">samchon/protocol/SharedEntityArray.hpp</includes>
    <includes refid="d3/da5/InvokeParameter_8hpp" local="no">samchon/protocol/InvokeParameter.hpp</includes>
    <includedby refid="d6/d25/ChatRoom_8cpp" local="no">D:/OneDrive/Project/Samchon/framework/cpp/samchon/examples/chat_service/ChatRoom.cpp</includedby>
    <includedby refid="d6/d78/ChatRoomArray_8cpp" local="no">D:/OneDrive/Project/Samchon/framework/cpp/samchon/examples/chat_service/ChatRoomArray.cpp</includedby>
    <includedby refid="d5/d1c/ChatService_8cpp" local="no">D:/OneDrive/Project/Samchon/framework/cpp/samchon/examples/chat_service/ChatService.cpp</includedby>
    <includedby refid="d8/d29/ChatClient_8cpp" local="no">D:/OneDrive/Project/Samchon/framework/cpp/samchon/examples/console_chat_server/ChatClient.cpp</includedby>
    <includedby refid="d4/da4/ChatServer_8cpp" local="no">D:/OneDrive/Project/Samchon/framework/cpp/samchon/examples/console_chat_server/ChatServer.cpp</includedby>
    <includedby refid="d1/dc0/invoke_2main_8cpp" local="no">D:/OneDrive/Project/Samchon/framework/cpp/samchon/examples/invoke/main.cpp</includedby>
    <includedby refid="db/de2/web__socket_2main_8cpp" local="no">D:/OneDrive/Project/Samchon/framework/cpp/samchon/examples/web_socket/main.cpp</includedby>
    <includedby refid="df/de9/Entity_8cpp" local="no">D:/OneDrive/Project/Samchon/framework/cpp/samchon/protocol/Entity.cpp</includedby>
    <includedby refid="d3/d51/ExternalSystem_8cpp" local="no">D:/OneDrive/Project/Samchon/framework/cpp/samchon/protocol/ExternalSystem.cpp</includedby>
    <includedby refid="dd/d76/ExternalSystemArray_8cpp" local="no">D:/OneDrive/Project/Samchon/framework/cpp/samchon/protocol/ExternalSystemArray.cpp</includedby>
    <includedby refid="dc/d96/IClient_8cpp" local="no">D:/OneDrive/Project/Samchon/framework/cpp/samchon/protocol/IClient.cpp</includedby>
    <includedby refid="d4/d29/Invoke_8cpp" local="no">D:/OneDrive/Project/Samchon/framework/cpp/samchon/protocol/Invoke.cpp</includedby>
    <includedby refid="d1/dab/InvokeHistory_8cpp" local="no">D:/OneDrive/Project/Samchon/framework/cpp/samchon/protocol/InvokeHistory.cpp</includedby>
    <includedby refid="dc/d20/ParallelSystem_8cpp" local="no">D:/OneDrive/Project/Samchon/framework/cpp/samchon/protocol/master/ParallelSystem.cpp</includedby>
    <includedby refid="d8/d11/ParallelSystemArray_8cpp" local="no">D:/OneDrive/Project/Samchon/framework/cpp/samchon/protocol/master/ParallelSystemArray.cpp</includedby>
    <includedby refid="d7/d5d/PRInvokeHistory_8cpp" local="no">D:/OneDrive/Project/Samchon/framework/cpp/samchon/protocol/PRInvokeHistory.cpp</includedby>
    <includedby refid="dc/d4f/Client_8cpp" local="no">D:/OneDrive/Project/Samchon/framework/cpp/samchon/protocol/service/Client.cpp</includedby>
    <includedby refid="d8/dc3/IPUserPair_8cpp" local="no">D:/OneDrive/Project/Samchon/framework/cpp/samchon/protocol/service/IPUserPair.cpp</includedby>
    <includedby refid="db/dd9/Server_8cpp" local="no">D:/OneDrive/Project/Samchon/framework/cpp/samchon/protocol/service/Server.cpp</includedby>
    <includedby refid="d4/dd1/User_8cpp" local="no">D:/OneDrive/Project/Samchon/framework/cpp/samchon/protocol/service/User.cpp</includedby>
    <includedby refid="dd/dbb/slave_2InvokeHistory_8cpp" local="no">D:/OneDrive/Project/Samchon/framework/cpp/samchon/protocol/slave/InvokeHistory.cpp</includedby>
    <incdepgraph>
      <node id="3422">
        <label>samchon/protocol/EntityGroup.hpp</label>
        <link refid="d1/d61/EntityGroup_8hpp_source"/>
        <childnode refid="3423" relation="include">
        </childnode>
        <childnode refid="3426" relation="include">
        </childnode>
        <childnode refid="3427" relation="include">
        </childnode>
      </node>
      <node id="3434">
        <label>samchon/library/IOperator.hpp</label>
        <link refid="dc/d77/IOperator_8hpp_source"/>
        <childnode refid="3420" relation="include">
        </childnode>
      </node>
      <node id="3437">
        <label>samchon/protocol/InvokeParameter.hpp</label>
        <link refid="d3/da5/InvokeParameter_8hpp_source"/>
        <childnode refid="3420" relation="include">
        </childnode>
        <childnode refid="3423" relation="include">
        </childnode>
        <childnode refid="3432" relation="include">
        </childnode>
        <childnode refid="3438" relation="include">
        </childnode>
        <childnode refid="3433" relation="include">
        </childnode>
      </node>
      <node id="3424">
        <label>string</label>
      </node>
      <node id="3429">
        <label>map</label>
      </node>
      <node id="3423">
        <label>samchon/protocol/Entity.hpp</label>
        <link refid="de/da6/Entity_8hpp_source"/>
        <childnode refid="3420" relation="include">
        </childnode>
        <childnode refid="3424" relation="include">
        </childnode>
        <childnode refid="3425" relation="include">
        </childnode>
      </node>
      <node id="3420">
        <label>samchon/API.hpp</label>
        <link refid="d9/d8f/API_8hpp_source"/>
      </node>
      <node id="3421">
        <label>samchon/protocol/SharedEntityArray.hpp</label>
        <link refid="d5/dc4/SharedEntityArray_8hpp_source"/>
        <childnode refid="3422" relation="include">
        </childnode>
        <childnode refid="3431" relation="include">
        </childnode>
      </node>
      <node id="3428">
        <label>samchon/Map.hpp</label>
        <link refid="dc/dbe/Map_8hpp_source"/>
        <childnode refid="3429" relation="include">
        </childnode>
      </node>
      <node id="3438">
        <label>samchon/ByteArray.hpp</label>
        <link refid="df/df6/ByteArray_8hpp_source"/>
        <childnode refid="3420" relation="include">
        </childnode>
        <childnode refid="3431" relation="include">
        </childnode>
        <childnode refid="3424" relation="include">
        </childnode>
      </node>
      <node id="3419">
        <label>D:/OneDrive/Project/Samchon/framework/cpp/samchon/protocol/Invoke.hpp</label>
        <link refid="Invoke.hpp"/>
        <childnode refid="3420" relation="include">
        </childnode>
        <childnode refid="3421" relation="include">
        </childnode>
        <childnode refid="3437" relation="include">
        </childnode>
      </node>
      <node id="3426">
        <label>samchon/protocol/IEntityGroup.hpp</label>
        <link refid="db/d55/IEntityGroup_8hpp_source"/>
        <childnode refid="3420" relation="include">
        </childnode>
        <childnode refid="3424" relation="include">
        </childnode>
      </node>
      <node id="3431">
        <label>vector</label>
      </node>
      <node id="3430">
        <label>samchon/library/XMLList.hpp</label>
        <link refid="dd/d37/XMLList_8hpp_source"/>
        <childnode refid="3420" relation="include">
        </childnode>
        <childnode refid="3431" relation="include">
        </childnode>
        <childnode refid="3425" relation="include">
        </childnode>
      </node>
      <node id="3436">
        <label>utility</label>
      </node>
      <node id="3432">
        <label>sstream</label>
      </node>
      <node id="3435">
        <label>samchon/IndexPair.hpp</label>
        <link refid="d9/ded/IndexPair_8hpp_source"/>
        <childnode refid="3436" relation="include">
        </childnode>
      </node>
      <node id="3427">
        <label>samchon/library/XML.hpp</label>
        <link refid="d4/d3b/XML_8hpp_source"/>
        <childnode refid="3420" relation="include">
        </childnode>
        <childnode refid="3428" relation="include">
        </childnode>
        <childnode refid="3430" relation="include">
        </childnode>
        <childnode refid="3432" relation="include">
        </childnode>
        <childnode refid="3424" relation="include">
        </childnode>
        <childnode refid="3433" relation="include">
        </childnode>
      </node>
      <node id="3433">
        <label>samchon/WeakString.hpp</label>
        <link refid="d8/d3d/WeakString_8hpp_source"/>
        <childnode refid="3420" relation="include">
        </childnode>
        <childnode refid="3434" relation="include">
        </childnode>
        <childnode refid="3424" relation="include">
        </childnode>
        <childnode refid="3431" relation="include">
        </childnode>
        <childnode refid="3435" relation="include">
        </childnode>
      </node>
      <node id="3425">
        <label>memory</label>
      </node>
    </incdepgraph>
    <innerclass refid="d8/d82/classsamchon_1_1protocol_1_1Invoke" prot="public">samchon::protocol::Invoke</innerclass>
    <innernamespace refid="db/df1/namespacesamchon">samchon</innernamespace>
    <innernamespace refid="db/d64/namespacesamchon_1_1protocol">samchon::protocol</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;samchon/API.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;samchon/protocol/SharedEntityArray.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;samchon/protocol/InvokeParameter.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="db/df1/namespacesamchon" kindref="compound">samchon</ref></highlight></codeline>
<codeline lineno="8"><highlight class="normal">{</highlight></codeline>
<codeline lineno="9"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">protocol</highlight></codeline>
<codeline lineno="10"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="45" refid="d8/d82/classsamchon_1_1protocol_1_1Invoke" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">SAMCHON_FRAMEWORK_API<sp/><ref refid="d8/d82/classsamchon_1_1protocol_1_1Invoke" kindref="compound">Invoke</ref></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="d4/deb/classsamchon_1_1protocol_1_1EntityGroup" kindref="compound">SharedEntityArray</ref>&lt;InvokeParameter&gt;</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="d4/deb/classsamchon_1_1protocol_1_1EntityGroup" kindref="compound">SharedEntityArray&lt;InvokeParameter&gt;</ref><sp/><ref refid="d4/deb/classsamchon_1_1protocol_1_1EntityGroup" kindref="compound">super</ref>;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="55" refid="d8/d82/classsamchon_1_1protocol_1_1Invoke_1a3775bc7759ade969c51fd75883ddc25f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/><ref refid="d8/d82/classsamchon_1_1protocol_1_1Invoke_1a3775bc7759ade969c51fd75883ddc25f" kindref="member">listener</ref>;</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>--------------------------------------------------------------------</highlight></codeline>
<codeline lineno="59"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CONSTRUCTORS</highlight></codeline>
<codeline lineno="60"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>--------------------------------------------------------------------<sp/>*/</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d8/d82/classsamchon_1_1protocol_1_1Invoke" kindref="compound">Invoke</ref>();</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>~<ref refid="d8/d82/classsamchon_1_1protocol_1_1Invoke" kindref="compound">Invoke</ref>()<sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d8/d82/classsamchon_1_1protocol_1_1Invoke" kindref="compound">Invoke</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;listener);</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>construct(std::shared_ptr&lt;library::XML&gt;)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>createChild(std::shared_ptr&lt;library::XML&gt;)<sp/>-&gt;<sp/><ref refid="d0/d1a/classsamchon_1_1protocol_1_1InvokeParameter" kindref="compound">InvokeParameter</ref>*<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>--------------------------------------------------------------------</highlight></codeline>
<codeline lineno="80"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>VARIADIC<sp/>CONSTRUCTORS</highlight></codeline>
<codeline lineno="81"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>--------------------------------------------------------------------<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>_Ty,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>...<sp/>_Args&gt;</highlight></codeline>
<codeline lineno="106" refid="d8/d82/classsamchon_1_1protocol_1_1Invoke_1abab56acc91715d02705bcf4b042b755b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d8/d82/classsamchon_1_1protocol_1_1Invoke_1abab56acc91715d02705bcf4b042b755b" kindref="member">Invoke</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;listener,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>_Ty<sp/>&amp;val,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>_Args&amp;<sp/>...<sp/>args)</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/><ref refid="d8/d82/classsamchon_1_1protocol_1_1Invoke" kindref="compound">Invoke</ref>(listener)</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>construct_by_vardic_template(val);</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>construct_by_vardic_template(args...);</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>_Ty&gt;</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d8/d82/classsamchon_1_1protocol_1_1Invoke" kindref="compound">Invoke</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;listener,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>_Ty<sp/>&amp;val)</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/><ref refid="d8/d82/classsamchon_1_1protocol_1_1Invoke" kindref="compound">Invoke</ref>(listener)</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>construct_by_vardic_template(val);</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>_Ty,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>...<sp/>_Args&gt;</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>construct_by_vardic_template(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>_Ty<sp/>&amp;val,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>_Args&amp;<sp/>...<sp/>args)</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>construct_by_vardic_template(val);</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>construct_by_vardic_template(args...);</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>_Ty&gt;</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>construct_by_vardic_template(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>_Ty<sp/>&amp;val)</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>emplace_back(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>InvokeParameter(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/>val));</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>-----------------------------------------------------------------------</highlight></codeline>
<codeline lineno="136"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GETTERS</highlight></codeline>
<codeline lineno="137"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-----------------------------------------------------------------------<sp/>*/</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>getListener()<sp/>const<sp/>-&gt;<sp/><ref refid="d8/dcc/namespacestd" kindref="compound">std</ref>::</highlight><highlight class="keywordtype">string</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setListener(const<sp/><ref refid="d8/dcc/namespacestd" kindref="compound">std</ref>::</highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>&amp;);</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>-----------------------------------------------------------------------</highlight></codeline>
<codeline lineno="149"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>EXPORTERS</highlight></codeline>
<codeline lineno="150"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-----------------------------------------------------------------------<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>virtual<sp/>auto<sp/>TAG()<sp/>const<sp/>-&gt;<sp/><ref refid="d8/dcc/namespacestd" kindref="compound">std</ref>::</highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>override;</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>virtual<sp/>auto<sp/>CHILD_TAG()<sp/>const<sp/>-&gt;<sp/><ref refid="d8/dcc/namespacestd" kindref="compound">std</ref>::</highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>override;</highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>virtual<sp/>auto<sp/>toXML()<sp/>const<sp/>-&gt;<sp/><ref refid="d8/dcc/namespacestd" kindref="compound">std</ref>::shared_ptr&lt;library::XML&gt;<sp/>override;</highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>auto<sp/>toSQL()<sp/>const<sp/>-&gt;<sp/><ref refid="d8/dcc/namespacestd" kindref="compound">std</ref>::</highlight><highlight class="keywordtype">string</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="162"><highlight class="normal">};</highlight></codeline>
    </programlisting>
    <location file="D:/OneDrive/Project/Samchon/framework/cpp/samchon/protocol/Invoke.hpp"/>
  </compounddef>
</doxygen>
