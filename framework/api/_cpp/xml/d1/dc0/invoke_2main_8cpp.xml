<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.10">
  <compounddef id="d1/dc0/invoke_2main_8cpp" kind="file" language="C++">
    <compoundname>main.cpp</compoundname>
    <includes local="no">iostream</includes>
    <includes refid="d4/d3b/XML_8hpp" local="no">samchon/library/XML.hpp</includes>
    <includes refid="d1/d6e/Invoke_8hpp" local="no">samchon/protocol/Invoke.hpp</includes>
    <incdepgraph>
      <node id="669">
        <label>samchon/protocol/EntityGroup.hpp</label>
        <link refid="d1/d61/EntityGroup_8hpp_source"/>
        <childnode refid="670" relation="include">
        </childnode>
        <childnode refid="671" relation="include">
        </childnode>
        <childnode refid="654" relation="include">
        </childnode>
      </node>
      <node id="664">
        <label>samchon/library/IOperator.hpp</label>
        <link refid="dc/d77/IOperator_8hpp_source"/>
        <childnode refid="655" relation="include">
        </childnode>
      </node>
      <node id="672">
        <label>samchon/protocol/InvokeParameter.hpp</label>
        <link refid="d3/da5/InvokeParameter_8hpp_source"/>
        <childnode refid="655" relation="include">
        </childnode>
        <childnode refid="670" relation="include">
        </childnode>
        <childnode refid="661" relation="include">
        </childnode>
        <childnode refid="673" relation="include">
        </childnode>
        <childnode refid="663" relation="include">
        </childnode>
      </node>
      <node id="662">
        <label>string</label>
      </node>
      <node id="657">
        <label>map</label>
      </node>
      <node id="670">
        <label>samchon/protocol/Entity.hpp</label>
        <link refid="de/da6/Entity_8hpp_source"/>
        <childnode refid="655" relation="include">
        </childnode>
        <childnode refid="662" relation="include">
        </childnode>
        <childnode refid="660" relation="include">
        </childnode>
      </node>
      <node id="655">
        <label>samchon/API.hpp</label>
        <link refid="d9/d8f/API_8hpp_source"/>
      </node>
      <node id="668">
        <label>samchon/protocol/SharedEntityArray.hpp</label>
        <link refid="d5/dc4/SharedEntityArray_8hpp_source"/>
        <childnode refid="669" relation="include">
        </childnode>
        <childnode refid="659" relation="include">
        </childnode>
      </node>
      <node id="656">
        <label>samchon/Map.hpp</label>
        <link refid="dc/dbe/Map_8hpp_source"/>
        <childnode refid="657" relation="include">
        </childnode>
      </node>
      <node id="673">
        <label>samchon/ByteArray.hpp</label>
        <link refid="df/df6/ByteArray_8hpp_source"/>
        <childnode refid="655" relation="include">
        </childnode>
        <childnode refid="659" relation="include">
        </childnode>
        <childnode refid="662" relation="include">
        </childnode>
      </node>
      <node id="667">
        <label>samchon/protocol/Invoke.hpp</label>
        <link refid="d1/d6e/Invoke_8hpp_source"/>
        <childnode refid="655" relation="include">
        </childnode>
        <childnode refid="668" relation="include">
        </childnode>
        <childnode refid="672" relation="include">
        </childnode>
      </node>
      <node id="671">
        <label>samchon/protocol/IEntityGroup.hpp</label>
        <link refid="db/d55/IEntityGroup_8hpp_source"/>
        <childnode refid="655" relation="include">
        </childnode>
        <childnode refid="662" relation="include">
        </childnode>
      </node>
      <node id="659">
        <label>vector</label>
      </node>
      <node id="658">
        <label>samchon/library/XMLList.hpp</label>
        <link refid="dd/d37/XMLList_8hpp_source"/>
        <childnode refid="655" relation="include">
        </childnode>
        <childnode refid="659" relation="include">
        </childnode>
        <childnode refid="660" relation="include">
        </childnode>
      </node>
      <node id="666">
        <label>utility</label>
      </node>
      <node id="661">
        <label>sstream</label>
      </node>
      <node id="665">
        <label>samchon/IndexPair.hpp</label>
        <link refid="d9/ded/IndexPair_8hpp_source"/>
        <childnode refid="666" relation="include">
        </childnode>
      </node>
      <node id="653">
        <label>iostream</label>
      </node>
      <node id="654">
        <label>samchon/library/XML.hpp</label>
        <link refid="d4/d3b/XML_8hpp_source"/>
        <childnode refid="655" relation="include">
        </childnode>
        <childnode refid="656" relation="include">
        </childnode>
        <childnode refid="658" relation="include">
        </childnode>
        <childnode refid="661" relation="include">
        </childnode>
        <childnode refid="662" relation="include">
        </childnode>
        <childnode refid="663" relation="include">
        </childnode>
      </node>
      <node id="652">
        <label>D:/OneDrive/Project/Samchon/framework/cpp/samchon/examples/invoke/main.cpp</label>
        <link refid="invoke/main.cpp"/>
        <childnode refid="653" relation="include">
        </childnode>
        <childnode refid="654" relation="include">
        </childnode>
        <childnode refid="667" relation="include">
        </childnode>
      </node>
      <node id="663">
        <label>samchon/WeakString.hpp</label>
        <link refid="d8/d3d/WeakString_8hpp_source"/>
        <childnode refid="655" relation="include">
        </childnode>
        <childnode refid="664" relation="include">
        </childnode>
        <childnode refid="662" relation="include">
        </childnode>
        <childnode refid="659" relation="include">
        </childnode>
        <childnode refid="665" relation="include">
        </childnode>
      </node>
      <node id="660">
        <label>memory</label>
      </node>
    </incdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="d1/dc0/invoke_2main_8cpp_1acdef7a1fd863a6d3770c1268cb06add3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void main</definition>
        <argsstring>()</argsstring>
        <name>main</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/OneDrive/Project/Samchon/framework/cpp/samchon/examples/invoke/main.cpp" line="25" column="1" bodyfile="D:/OneDrive/Project/Samchon/framework/cpp/samchon/examples/invoke/main.cpp" bodystart="25" bodyend="49"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&lt;iostream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;samchon/library/XML.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;samchon/protocol/Invoke.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal"><ref refid="d8/dcc/namespacestd" kindref="compound">std</ref>;</highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal"><ref refid="db/df1/namespacesamchon" kindref="compound">samchon</ref>;</highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal"><ref refid="d8/dd4/namespacesamchon_1_1library" kindref="compound">samchon::library</ref>;</highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal"><ref refid="db/d64/namespacesamchon_1_1protocol" kindref="compound">samchon::protocol</ref>;</highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>_WIN64</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>ifdef<sp/>_DEBUG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/>pragma<sp/>comment(lib,<sp/>&quot;x64/Debug/SamchonFramework.lib&quot;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/>pragma<sp/>comment(lib,<sp/>&quot;x64/Release/SamchonFramework.lib&quot;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>ifdef<sp/>_DEBUG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/>pragma<sp/>comment(lib,<sp/>&quot;Debug/SamchonFramework.lib&quot;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/>pragma<sp/>comment(lib,<sp/>&quot;Release/SamchonFramework.lib&quot;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>main()</highlight></codeline>
<codeline lineno="26"><highlight class="normal">{</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>str<sp/>=<sp/>string(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">)<sp/>+</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&lt;memberList&gt;\n&quot;</highlight><highlight class="normal"><sp/>+</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/>&lt;member<sp/>id=&apos;jhnam88&apos;<sp/>pass=&apos;1231&apos;<sp/>/&gt;\n&quot;</highlight><highlight class="normal"><sp/>+</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/>&lt;member<sp/>id=&apos;samchon&apos;<sp/>pass=&apos;1231&apos;&gt;Administrator&lt;/member&gt;\n&quot;</highlight><highlight class="normal"><sp/>+</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/>&lt;group&gt;3&lt;/group&gt;\n&quot;</highlight><highlight class="normal"><sp/>+</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&lt;/memberList&gt;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/>shared_ptr&lt;XML&gt;<sp/>xml(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="d5/d37/classsamchon_1_1library_1_1XML" kindref="compound">XML</ref>(str));</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/>shared_ptr&lt;Invoke&gt;<sp/>invoke(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="d8/d82/classsamchon_1_1protocol_1_1Invoke" kindref="compound">Invoke</ref>(</highlight><highlight class="stringliteral">&quot;login&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;jhnam88&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;1231&quot;</highlight><highlight class="normal">,<sp/>4,<sp/>xml));</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Invoke<sp/>to<sp/>XML:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/>invoke-&gt;toXML()-&gt;toString()<sp/>&lt;&lt;<sp/>endl<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;-------------------------------------------------------------&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/>Parameters&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;-------------------------------------------------------------&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;1st<sp/>param:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>invoke-&gt;at(0)-&gt;getValue&lt;</highlight><highlight class="keywordtype">string</highlight><highlight class="normal">&gt;()<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;2nd<sp/>param:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>invoke-&gt;at(1)-&gt;getValue&lt;</highlight><highlight class="keywordtype">string</highlight><highlight class="normal">&gt;()<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;3rd<sp/>param:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>invoke-&gt;at(2)-&gt;getValue&lt;</highlight><highlight class="keywordtype">string</highlight><highlight class="normal">&gt;()<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;4th<sp/>param:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl<sp/>&lt;&lt;<sp/>invoke-&gt;at(3)-&gt;getValue&lt;shared_ptr&lt;XML&gt;&gt;()-&gt;toString()<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/>system(</highlight><highlight class="stringliteral">&quot;pause&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="49"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="D:/OneDrive/Project/Samchon/framework/cpp/samchon/examples/invoke/main.cpp"/>
  </compounddef>
</doxygen>
