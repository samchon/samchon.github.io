<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.10">
  <compounddef id="d0/d43/WrapperArray_8cpp" kind="file" language="C++">
    <compoundname>WrapperArray.cpp</compoundname>
    <includes refid="da/df1/WrapperArray_8hpp" local="yes">WrapperArray.hpp</includes>
    <includes refid="d3/d29/Wrapper_8hpp" local="yes">Wrapper.hpp</includes>
    <includes refid="d9/db2/Product_8hpp" local="yes">Product.hpp</includes>
    <includes refid="da/d1f/FactorialGenerator_8hpp" local="no">samchon/library/FactorialGenerator.hpp</includes>
    <includes local="no">mutex</includes>
    <incdepgraph>
      <node id="809">
        <label>samchon/library/FactorialGenerator.hpp</label>
        <link refid="da/d1f/FactorialGenerator_8hpp_source"/>
        <childnode refid="810" relation="include">
        </childnode>
        <childnode refid="811" relation="include">
        </childnode>
      </node>
      <node id="807">
        <label>string</label>
      </node>
      <node id="810">
        <label>samchon/API.hpp</label>
        <link refid="d9/d8f/API_8hpp_source"/>
      </node>
      <node id="801">
        <label>D:/OneDrive/Project/Samchon/framework/cpp/samchon/examples/packer/WrapperArray.cpp</label>
        <link refid="WrapperArray.cpp"/>
        <childnode refid="802" relation="include">
        </childnode>
        <childnode refid="805" relation="include">
        </childnode>
        <childnode refid="808" relation="include">
        </childnode>
        <childnode refid="809" relation="include">
        </childnode>
        <childnode refid="813" relation="include">
        </childnode>
      </node>
      <node id="808">
        <label>Product.hpp</label>
        <link refid="d9/db2/Product_8hpp_source"/>
        <childnode refid="806" relation="include">
        </childnode>
      </node>
      <node id="803">
        <label>vector</label>
      </node>
      <node id="802">
        <label>WrapperArray.hpp</label>
        <link refid="da/df1/WrapperArray_8hpp_source"/>
        <childnode refid="803" relation="include">
        </childnode>
        <childnode refid="804" relation="include">
        </childnode>
      </node>
      <node id="813">
        <label>mutex</label>
      </node>
      <node id="805">
        <label>Wrapper.hpp</label>
        <link refid="d3/d29/Wrapper_8hpp_source"/>
        <childnode refid="803" relation="include">
        </childnode>
        <childnode refid="806" relation="include">
        </childnode>
      </node>
      <node id="806">
        <label>Instance.hpp</label>
        <link refid="d9/dfd/Instance_8hpp_source"/>
        <childnode refid="807" relation="include">
        </childnode>
      </node>
      <node id="812">
        <label>samchon/library/CaseGenerator.hpp</label>
        <link refid="d2/da3/CaseGenerator_8hpp_source"/>
        <childnode refid="810" relation="include">
        </childnode>
        <childnode refid="803" relation="include">
        </childnode>
      </node>
      <node id="804">
        <label>memory</label>
      </node>
      <node id="811">
        <label>samchon/library/PermutationGenerator.hpp</label>
        <link refid="db/db6/PermutationGenerator_8hpp_source"/>
        <childnode refid="810" relation="include">
        </childnode>
        <childnode refid="812" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;WrapperArray.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>include<sp/>&quot;Wrapper.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>include<sp/>&quot;Product.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;samchon/library/FactorialGenerator.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;mutex&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal"><ref refid="d8/dcc/namespacestd" kindref="compound">std</ref>;</highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal"><ref refid="d8/dd4/namespacesamchon_1_1library" kindref="compound">samchon::library</ref>;</highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal"><ref refid="d8/dbe/namespacesamchon_1_1example_1_1packer" kindref="compound">samchon::example::packer</ref>;</highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>---------------------------------------------------------</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/><sp/><sp/><sp/>CONSTRUCTOR</highlight></codeline>
<codeline lineno="14"><highlight class="comment">---------------------------------------------------------<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal">WrapperArray::WrapperArray(<ref refid="dc/d06/classsamchon_1_1example_1_1packer_1_1Wrapper" kindref="compound">Wrapper</ref><sp/>*sample)</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/>super()</highlight></codeline>
<codeline lineno="17"><highlight class="normal">{</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;sample<sp/>=<sp/>sample;</highlight></codeline>
<codeline lineno="19"><highlight class="normal">}</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>---------------------------------------------------------</highlight></codeline>
<codeline lineno="22"><highlight class="comment"><sp/><sp/><sp/><sp/>CALCULATE<sp/>AND<sp/>OPTIMIZE</highlight></codeline>
<codeline lineno="23"><highlight class="comment">---------------------------------------------------------<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="d4/dfe/classsamchon_1_1example_1_1packer_1_1WrapperArray_1a76bfeb339b591946879ad0292579b141" kindref="member">WrapperArray::tryInsert</ref>(<ref refid="df/d73/classsamchon_1_1example_1_1packer_1_1Product" kindref="compound">Product</ref><sp/>*product)<sp/>-&gt;<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal">{</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(product-&gt;getVolume()<sp/>&gt;<sp/>sample-&gt;getVolume()<sp/>||</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>product-&gt;getWeight()<sp/>&gt;<sp/>sample-&gt;getWeight())</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/>reserved.push_back(product);</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="34"><highlight class="normal">}</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d4/dfe/classsamchon_1_1example_1_1packer_1_1WrapperArray_1aa5f96dceae0a01376ab1001f038abf9f" kindref="member">WrapperArray::optimize</ref>()</highlight></codeline>
<codeline lineno="36"><highlight class="normal">{</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="d4/dfe/classsamchon_1_1example_1_1packer_1_1WrapperArray_1a7c8f40e2d129fded5d08eae1741e8840" kindref="member">reserved</ref>.empty()<sp/>==<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="dd/d7b/classsamchon_1_1library_1_1FactorialGenerator" kindref="compound">FactorialGenerator</ref><sp/>factorial(<ref refid="d4/dfe/classsamchon_1_1example_1_1packer_1_1WrapperArray_1a7c8f40e2d129fded5d08eae1741e8840" kindref="member">reserved</ref>.size());</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/>shared_ptr&lt;WrapperArray&gt;<sp/>minWrapperArray<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/>mutex<sp/>mtx;</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//#pragma<sp/>omp<sp/>parallel<sp/>for</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>factorial.size();<sp/>i++)</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>shared_ptr&lt;WrapperArray&gt;<sp/>wrapperArray(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="d4/dfe/classsamchon_1_1example_1_1packer_1_1WrapperArray_1a2c6a262c06b4f3f76fa01c151efc5be5" kindref="member">WrapperArray</ref>(this-&gt;<ref refid="d4/dfe/classsamchon_1_1example_1_1packer_1_1WrapperArray_1aeaa4ca22b0db2d1121a70332693a4bda" kindref="member">sample</ref>));</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vector&lt;size_t&gt;<sp/>&amp;row<sp/>=<sp/>factorial[i];</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>row.size();<sp/>j++)</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="df/d73/classsamchon_1_1example_1_1packer_1_1Product" kindref="compound">Product</ref><sp/>*product<sp/>=<sp/>this-&gt;<ref refid="d4/dfe/classsamchon_1_1example_1_1packer_1_1WrapperArray_1a7c8f40e2d129fded5d08eae1741e8840" kindref="member">reserved</ref>[row[j]];</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(wrapperArray-&gt;empty()<sp/>==<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal"><sp/>||<sp/></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wrapperArray-&gt;at(wrapperArray-&gt;size()<sp/>-<sp/>1)-&gt;<ref refid="d4/dfe/classsamchon_1_1example_1_1packer_1_1WrapperArray_1a76bfeb339b591946879ad0292579b141" kindref="member">tryInsert</ref>(product)<sp/>==<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="dc/d06/classsamchon_1_1example_1_1packer_1_1Wrapper" kindref="compound">Wrapper</ref><sp/>*wrapper<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="dc/d06/classsamchon_1_1example_1_1packer_1_1Wrapper" kindref="compound">Wrapper</ref>(*this-&gt;<ref refid="d4/dfe/classsamchon_1_1example_1_1packer_1_1WrapperArray_1aeaa4ca22b0db2d1121a70332693a4bda" kindref="member">sample</ref>);</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wrapper-&gt;<ref refid="dc/d06/classsamchon_1_1example_1_1packer_1_1Wrapper_1a76bfeb339b591946879ad0292579b141" kindref="member">tryInsert</ref>(product);</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wrapperArray-&gt;emplace_back(wrapper);</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//unique_lock&lt;mutex&gt;<sp/>uk(mtx);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(minWrapperArray<sp/>==<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal"><sp/>||</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wrapperArray-&gt;size()<sp/>&lt;<sp/>minWrapperArray-&gt;size())</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>minWrapperArray<sp/>=<sp/>wrapperArray;</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/>assign(minWrapperArray-&gt;begin(),<sp/>minWrapperArray-&gt;end());</highlight></codeline>
<codeline lineno="74"><highlight class="normal">}</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="d4/dfe/classsamchon_1_1example_1_1packer_1_1WrapperArray_1a53cb7f8d98234bd90072bf504f318301" kindref="member">WrapperArray::calcPrice</ref>()<sp/>const<sp/>-&gt;<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal">{</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="d4/dfe/classsamchon_1_1example_1_1packer_1_1WrapperArray_1aeaa4ca22b0db2d1121a70332693a4bda" kindref="member">sample</ref>-&gt;<ref refid="dc/d54/classsamchon_1_1example_1_1packer_1_1Instance_1ad500f9722b4b1d88a82fc66e85dd8e1b" kindref="member">getPrice</ref>()<sp/>*<sp/>(int)size();</highlight></codeline>
<codeline lineno="78"><highlight class="normal">}</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>---------------------------------------------------------</highlight></codeline>
<codeline lineno="81"><highlight class="comment"><sp/><sp/><sp/><sp/>EXPORT</highlight></codeline>
<codeline lineno="82"><highlight class="comment">---------------------------------------------------------<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="d4/dfe/classsamchon_1_1example_1_1packer_1_1WrapperArray_1a22a175a3f828497e884c688f7a9aaadb" kindref="member">WrapperArray::toString</ref>()<sp/>const<sp/>-&gt;<sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal">{</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>str<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Category<sp/>-<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/><ref refid="d4/dfe/classsamchon_1_1example_1_1packer_1_1WrapperArray_1aeaa4ca22b0db2d1121a70332693a4bda" kindref="member">sample</ref>-&gt;<ref refid="dc/d54/classsamchon_1_1example_1_1packer_1_1Instance_1a6b7b6b48103d6ea43f89f4e748527390" kindref="member">getName</ref>()<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>size();<sp/>i++)</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>str<sp/>+=<sp/>at(i)-&gt;toString()<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>move(str);</highlight></codeline>
<codeline lineno="90"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="D:/OneDrive/Project/Samchon/framework/cpp/samchon/examples/packer/WrapperArray.cpp"/>
  </compounddef>
</doxygen>
