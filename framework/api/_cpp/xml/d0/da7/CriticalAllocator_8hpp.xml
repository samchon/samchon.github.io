<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.10">
  <compounddef id="d0/da7/CriticalAllocator_8hpp" kind="file" language="C++">
    <compoundname>CriticalAllocator.hpp</compoundname>
    <includes local="no">memory</includes>
    <includes refid="dd/d85/RWMutex_8hpp" local="no">samchon/library/RWMutex.hpp</includes>
    <includedby refid="d2/dcf/CriticalList_8hpp" local="no">D:/OneDrive/Project/Samchon/framework/cpp/samchon/library/CriticalList.hpp</includedby>
    <includedby refid="d4/dbf/CriticalMap_8hpp" local="no">D:/OneDrive/Project/Samchon/framework/cpp/samchon/library/CriticalMap.hpp</includedby>
    <includedby refid="d5/dd8/CriticalSet_8hpp" local="no">D:/OneDrive/Project/Samchon/framework/cpp/samchon/library/CriticalSet.hpp</includedby>
    <includedby refid="d1/da8/CriticalVector_8hpp" local="no">D:/OneDrive/Project/Samchon/framework/cpp/samchon/library/CriticalVector.hpp</includedby>
    <incdepgraph>
      <node id="1009">
        <label>atomic</label>
      </node>
      <node id="1007">
        <label>samchon/library/UniqueWriteLock.hpp</label>
        <link refid="d5/dcd/UniqueWriteLock_8hpp_source"/>
        <childnode refid="1005" relation="include">
        </childnode>
      </node>
      <node id="1010">
        <label>samchon/library/SharedWriteLock.hpp</label>
        <link refid="d8/d53/SharedWriteLock_8hpp_source"/>
        <childnode refid="1005" relation="include">
        </childnode>
        <childnode refid="1009" relation="include">
        </childnode>
      </node>
      <node id="1005">
        <label>samchon/API.hpp</label>
        <link refid="d9/d8f/API_8hpp_source"/>
      </node>
      <node id="1008">
        <label>samchon/library/SharedReadLock.hpp</label>
        <link refid="d0/df1/SharedReadLock_8hpp_source"/>
        <childnode refid="1005" relation="include">
        </childnode>
        <childnode refid="1009" relation="include">
        </childnode>
      </node>
      <node id="1004">
        <label>samchon/library/RWMutex.hpp</label>
        <link refid="dd/d85/RWMutex_8hpp_source"/>
        <childnode refid="1005" relation="include">
        </childnode>
        <childnode refid="1006" relation="include">
        </childnode>
        <childnode refid="1007" relation="include">
        </childnode>
        <childnode refid="1008" relation="include">
        </childnode>
        <childnode refid="1010" relation="include">
        </childnode>
      </node>
      <node id="1002">
        <label>D:/OneDrive/Project/Samchon/framework/cpp/samchon/library/CriticalAllocator.hpp</label>
        <link refid="CriticalAllocator.hpp"/>
        <childnode refid="1003" relation="include">
        </childnode>
        <childnode refid="1004" relation="include">
        </childnode>
      </node>
      <node id="1006">
        <label>samchon/library/UniqueReadLock.hpp</label>
        <link refid="d5/da5/UniqueReadLock_8hpp_source"/>
        <childnode refid="1005" relation="include">
        </childnode>
      </node>
      <node id="1003">
        <label>memory</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="1014">
        <label>D:/OneDrive/Project/Samchon/framework/cpp/samchon/library/CriticalDictionary.hpp</label>
        <link refid="d9/dc9/CriticalDictionary_8hpp_source"/>
        <childnode refid="1015" relation="include">
        </childnode>
      </node>
      <node id="1015">
        <label>D:/OneDrive/Project/Samchon/framework/cpp/samchon/examples/chat_service/ChatRoomArray.hpp</label>
        <link refid="da/da6/ChatRoomArray_8hpp_source"/>
      </node>
      <node id="1018">
        <label>D:/OneDrive/Project/Samchon/framework/cpp/samchon/library/CriticalVector.hpp</label>
        <link refid="d1/da8/CriticalVector_8hpp_source"/>
      </node>
      <node id="1012">
        <label>D:/OneDrive/Project/Samchon/framework/cpp/samchon/library/CriticalList.hpp</label>
        <link refid="d2/dcf/CriticalList_8hpp_source"/>
      </node>
      <node id="1016">
        <label>D:/OneDrive/Project/Samchon/framework/cpp/samchon/library/CriticalSet.hpp</label>
        <link refid="d5/dd8/CriticalSet_8hpp_source"/>
        <childnode refid="1017" relation="include">
        </childnode>
      </node>
      <node id="1013">
        <label>D:/OneDrive/Project/Samchon/framework/cpp/samchon/library/CriticalMap.hpp</label>
        <link refid="d4/dbf/CriticalMap_8hpp_source"/>
        <childnode refid="1014" relation="include">
        </childnode>
      </node>
      <node id="1011">
        <label>D:/OneDrive/Project/Samchon/framework/cpp/samchon/library/CriticalAllocator.hpp</label>
        <link refid="CriticalAllocator.hpp"/>
        <childnode refid="1012" relation="include">
        </childnode>
        <childnode refid="1013" relation="include">
        </childnode>
        <childnode refid="1016" relation="include">
        </childnode>
        <childnode refid="1018" relation="include">
        </childnode>
      </node>
      <node id="1017">
        <label>D:/OneDrive/Project/Samchon/framework/cpp/samchon/examples/chat_service/ChatRoom.hpp</label>
        <link refid="d3/df4/ChatRoom_8hpp_source"/>
      </node>
    </invincdepgraph>
    <innerclass refid="d6/d32/classsamchon_1_1library_1_1CriticalAllocator" prot="public">samchon::library::CriticalAllocator</innerclass>
    <innerclass refid="dd/df2/structsamchon_1_1library_1_1CriticalAllocator_1_1rebind" prot="public">samchon::library::CriticalAllocator::rebind</innerclass>
    <innernamespace refid="db/df1/namespacesamchon">samchon</innernamespace>
    <innernamespace refid="d8/dd4/namespacesamchon_1_1library">samchon::library</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;memory&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;samchon/library/RWMutex.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="db/df1/namespacesamchon" kindref="compound">samchon</ref></highlight></codeline>
<codeline lineno="6"><highlight class="normal">{</highlight></codeline>
<codeline lineno="7"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">library</highlight></codeline>
<codeline lineno="8"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>_Ty&gt;</highlight></codeline>
<codeline lineno="50" refid="d6/d32/classsamchon_1_1library_1_1CriticalAllocator" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="d6/d32/classsamchon_1_1library_1_1CriticalAllocator" kindref="compound">CriticalAllocator</ref></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>std::allocator&lt;_Ty&gt;</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>std::allocator&lt;_Ty&gt;<sp/>super;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="59" refid="d6/d32/classsamchon_1_1library_1_1CriticalAllocator_1a60615df8c23ca3f9f1a9bfd1dfdceaca" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="df/d85/classsamchon_1_1library_1_1RWMutex" kindref="compound">RWMutex</ref><sp/><ref refid="d6/d32/classsamchon_1_1library_1_1CriticalAllocator_1a60615df8c23ca3f9f1a9bfd1dfdceaca" kindref="member">mtx</ref>;</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>super::allocator;</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>U&gt;<sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">rebind</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="d6/d32/classsamchon_1_1library_1_1CriticalAllocator" kindref="compound">CriticalAllocator&lt;U&gt;</ref><sp/>other;</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="75" refid="d6/d32/classsamchon_1_1library_1_1CriticalAllocator_1a70dc434a7423a14e3801e9f730982ef8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="d6/d32/classsamchon_1_1library_1_1CriticalAllocator_1a70dc434a7423a14e3801e9f730982ef8" kindref="member">getMutex</ref>()<sp/>-&gt;<sp/><ref refid="df/d85/classsamchon_1_1library_1_1RWMutex" kindref="compound">RWMutex</ref>&amp;</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="d6/d32/classsamchon_1_1library_1_1CriticalAllocator_1a60615df8c23ca3f9f1a9bfd1dfdceaca" kindref="member">mtx</ref>;</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="d6/d32/classsamchon_1_1library_1_1CriticalAllocator_1a70dc434a7423a14e3801e9f730982ef8" kindref="member">getMutex</ref>()<sp/>const<sp/>-&gt;<sp/>const<sp/><ref refid="df/d85/classsamchon_1_1library_1_1RWMutex" kindref="compound">RWMutex</ref>&amp;</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="d6/d32/classsamchon_1_1library_1_1CriticalAllocator_1a60615df8c23ca3f9f1a9bfd1dfdceaca" kindref="member">mtx</ref>;</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>---------------------------------------------------------------</highlight></codeline>
<codeline lineno="85"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SINGLE<sp/>ELEMENT&apos;S<sp/>CONSTRUCTION<sp/>AND<sp/>DESTRUCTION</highlight></codeline>
<codeline lineno="86"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>---------------------------------------------------------------<sp/>*/</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">_U,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal">...<sp/>_Args&gt;</highlight></codeline>
<codeline lineno="109" refid="d6/d32/classsamchon_1_1library_1_1CriticalAllocator_1ab89287137d6086f913bc4c8881aaec41" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d6/d32/classsamchon_1_1library_1_1CriticalAllocator_1ab89287137d6086f913bc4c8881aaec41" kindref="member">construct</ref>(_U<sp/>*ptr,<sp/>_Args&amp;&amp;...<sp/>args)</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d1/dc0/classsamchon_1_1library_1_1UniqueWriteLock" kindref="compound">UniqueWriteLock</ref><sp/>uk(mtx);</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>super::construct(ptr,<sp/>args);</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>_U&gt;</highlight></codeline>
<codeline lineno="134" refid="d6/d32/classsamchon_1_1library_1_1CriticalAllocator_1a6bb26c897c31db2c620b4a52d34ecdf8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d6/d32/classsamchon_1_1library_1_1CriticalAllocator_1a6bb26c897c31db2c620b4a52d34ecdf8" kindref="member">destroy</ref>(_U<sp/>*ptr)</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d1/dc0/classsamchon_1_1library_1_1UniqueWriteLock" kindref="compound">UniqueWriteLock</ref><sp/>uk(mtx);</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>super::destroy(ptr);</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>---------------------------------------------------------------</highlight></codeline>
<codeline lineno="142"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MULTIPLE<sp/>ELEMENT&apos;S<sp/>ALLOCATION<sp/>AND<sp/>DEALLOCATION</highlight></codeline>
<codeline lineno="143"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>---------------------------------------------------------------<sp/>*/</highlight></codeline>
<codeline lineno="173" refid="d6/d32/classsamchon_1_1library_1_1CriticalAllocator_1a5d37941dfd941c7802c6c44e23112865" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="d6/d32/classsamchon_1_1library_1_1CriticalAllocator_1a5d37941dfd941c7802c6c44e23112865" kindref="member">allocate</ref>(size_type<sp/>n,<sp/>std::allocator&lt;void&gt;::const_pointer<sp/>hint<sp/>=<sp/>NULL)<sp/>-&gt;<sp/>pointer</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d1/dc0/classsamchon_1_1library_1_1UniqueWriteLock" kindref="compound">UniqueWriteLock</ref><sp/>uk(mtx);</highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>super::allocate(n,<sp/>hint);</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight></codeline>
<codeline lineno="201" refid="d6/d32/classsamchon_1_1library_1_1CriticalAllocator_1aa967c877a16093a0447db172b3403bd7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d6/d32/classsamchon_1_1library_1_1CriticalAllocator_1aa967c877a16093a0447db172b3403bd7" kindref="member">deallocate</ref>(pointer<sp/>ptr,<sp/>size_type<sp/>size)</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d1/dc0/classsamchon_1_1library_1_1UniqueWriteLock" kindref="compound">UniqueWriteLock</ref><sp/>uk(mtx);</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>super::deallocate(ptr,<sp/>size);</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="209"><highlight class="normal">};</highlight></codeline>
    </programlisting>
    <location file="D:/OneDrive/Project/Samchon/framework/cpp/samchon/library/CriticalAllocator.hpp"/>
  </compounddef>
</doxygen>
