<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.10">
  <compounddef id="d0/d04/classsamchon_1_1protocol_1_1service_1_1ServiceKeeper" kind="class" language="C++" prot="public">
    <compoundname>samchon::protocol::service::ServiceKeeper</compoundname>
    <includes refid="d7/d79/ServiceKeeper_8hpp" local="no">ServiceKeeper.hpp</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="d0/d04/classsamchon_1_1protocol_1_1service_1_1ServiceKeeper_1ae96a2b7eb318179a9ee8c622df1439a9" prot="private" static="no" mutable="no">
        <type><ref refid="d9/d2d/classsamchon_1_1SmartPointer" kindref="compound">SmartPointer</ref>&lt; <ref refid="df/d87/classsamchon_1_1protocol_1_1service_1_1User" kindref="compound">User</ref> &gt;</type>
        <definition>SmartPointer&lt;User&gt; user</definition>
        <argsstring></argsstring>
        <name>user</name>
        <briefdescription>
<para>A shared pionter of an <ref refid="df/d87/classsamchon_1_1protocol_1_1service_1_1User" kindref="compound">User</ref>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/OneDrive/Project/Samchon/framework/cpp/samchon/protocol/service/ServiceKeeper.hpp" line="41" column="1" bodyfile="D:/OneDrive/Project/Samchon/framework/cpp/samchon/protocol/service/ServiceKeeper.hpp" bodystart="41" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d0/d04/classsamchon_1_1protocol_1_1service_1_1ServiceKeeper_1a0ec8214f3950183c9876f7103c530754" prot="private" static="no" mutable="no">
        <type><ref refid="d9/d2d/classsamchon_1_1SmartPointer" kindref="compound">SmartPointer</ref>&lt; <ref refid="df/d31/classsamchon_1_1protocol_1_1service_1_1Client" kindref="compound">Client</ref> &gt;</type>
        <definition>SmartPointer&lt;Client&gt; client</definition>
        <argsstring></argsstring>
        <name>client</name>
        <briefdescription>
<para>A shared pointer of a <ref refid="df/d31/classsamchon_1_1protocol_1_1service_1_1Client" kindref="compound">Client</ref>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/OneDrive/Project/Samchon/framework/cpp/samchon/protocol/service/ServiceKeeper.hpp" line="46" column="1" bodyfile="D:/OneDrive/Project/Samchon/framework/cpp/samchon/protocol/service/ServiceKeeper.hpp" bodystart="46" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="d0/d04/classsamchon_1_1protocol_1_1service_1_1ServiceKeeper_1a1d4fe8bac81b12205b7b07fcceef3a77" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>ServiceKeeper</definition>
        <argsstring>(const User *user, const Client *client)</argsstring>
        <name>ServiceKeeper</name>
        <param>
          <type>const <ref refid="df/d87/classsamchon_1_1protocol_1_1service_1_1User" kindref="compound">User</ref> *</type>
          <declname>user</declname>
        </param>
        <param>
          <type>const <ref refid="df/d31/classsamchon_1_1protocol_1_1service_1_1Client" kindref="compound">Client</ref> *</type>
          <declname>client</declname>
        </param>
        <briefdescription>
<para>Construct from <ref refid="df/d87/classsamchon_1_1protocol_1_1service_1_1User" kindref="compound">User</ref> and <ref refid="df/d31/classsamchon_1_1protocol_1_1service_1_1Client" kindref="compound">Client</ref>. </para>        </briefdescription>
        <detaileddescription>
<para>user An <ref refid="df/d87/classsamchon_1_1protocol_1_1service_1_1User" kindref="compound">User</ref> to keep client A <ref refid="df/d31/classsamchon_1_1protocol_1_1service_1_1Client" kindref="compound">Client</ref> to keep </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/OneDrive/Project/Samchon/framework/cpp/samchon/protocol/service/ServiceKeeper.hpp" line="55" column="1" bodyfile="D:/OneDrive/Project/Samchon/framework/cpp/samchon/protocol/service/ServiceKeeper.cpp" bodystart="8" bodyend="12"/>
      </memberdef>
      <memberdef kind="function" id="d0/d04/classsamchon_1_1protocol_1_1service_1_1ServiceKeeper_1a3410e8d8df60b0245643bfafffdcde61" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>ServiceKeeper</definition>
        <argsstring>(const ServiceKeeper &amp;)</argsstring>
        <name>ServiceKeeper</name>
        <param>
          <type>const <ref refid="d0/d04/classsamchon_1_1protocol_1_1service_1_1ServiceKeeper" kindref="compound">ServiceKeeper</ref> &amp;</type>
          <defname>pair</defname>
        </param>
        <briefdescription>
<para>Copy Constructor. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/OneDrive/Project/Samchon/framework/cpp/samchon/protocol/service/ServiceKeeper.hpp" line="60" column="1" bodyfile="D:/OneDrive/Project/Samchon/framework/cpp/samchon/protocol/service/ServiceKeeper.cpp" bodystart="13" bodyend="17"/>
      </memberdef>
      <memberdef kind="function" id="d0/d04/classsamchon_1_1protocol_1_1service_1_1ServiceKeeper_1a109d1fe06e828265cbaec450ab1e0206" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>ServiceKeeper</definition>
        <argsstring>(ServiceKeeper &amp;&amp;)</argsstring>
        <name>ServiceKeeper</name>
        <param>
          <type><ref refid="d0/d04/classsamchon_1_1protocol_1_1service_1_1ServiceKeeper" kindref="compound">ServiceKeeper</ref> &amp;&amp;</type>
          <defname>pair</defname>
        </param>
        <briefdescription>
<para>Movie Constructor. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/OneDrive/Project/Samchon/framework/cpp/samchon/protocol/service/ServiceKeeper.hpp" line="65" column="1" bodyfile="D:/OneDrive/Project/Samchon/framework/cpp/samchon/protocol/service/ServiceKeeper.cpp" bodystart="18" bodyend="22"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>A keeper blocking destrunction of <ref refid="df/d87/classsamchon_1_1protocol_1_1service_1_1User" kindref="compound">User</ref> and <ref refid="df/d31/classsamchon_1_1protocol_1_1service_1_1Client" kindref="compound">Client</ref>. </para>    </briefdescription>
    <detaileddescription>
<para>Keeps <ref refid="df/d87/classsamchon_1_1protocol_1_1service_1_1User" kindref="compound">User</ref>, <ref refid="df/d31/classsamchon_1_1protocol_1_1service_1_1Client" kindref="compound">Client</ref> and <ref refid="d6/df3/classsamchon_1_1protocol_1_1service_1_1Service" kindref="compound">Service</ref> objects until termination of a stack. </para><para>You can prevent the object to be destructed until the method is in a process. <ref refid="df/d87/classsamchon_1_1protocol_1_1service_1_1User" kindref="compound">User</ref>, <ref refid="df/d31/classsamchon_1_1protocol_1_1service_1_1Client" kindref="compound">Client</ref> and <ref refid="d6/df3/classsamchon_1_1protocol_1_1service_1_1Service" kindref="compound">Service</ref> provides a macro instruction for it. </para><para><image type="html" name="protocol_service.png"></image>
 <image type="latex" name="protocol_service.png"></image>
</para><para><simplesect kind="note"><para>Defined macros <itemizedlist>
<listitem><para>KEEP_USER_ALIVE </para></listitem>
<listitem><para>KEEP_CLIENT_ALIVE </para></listitem>
<listitem><para>KEEP_SERVICE_ALIVE</para></listitem>
</itemizedlist>
</para></simplesect>
<simplesect kind="see"><para><ref refid="db/d64/namespacesamchon_1_1protocol" kindref="compound">samchon::protocol</ref> </para></simplesect>
<simplesect kind="see"><para><ref refid="d8/d70/namespacesamchon_1_1protocol_1_1service" kindref="compound">samchon::protocol::service</ref> </para></simplesect>
<simplesect kind="author"><para>Jeongho Nam </para></simplesect>
</para>    </detaileddescription>
    <collaborationgraph>
      <node id="2652">
        <label>SQLStatement</label>
        <link refid="de/def/classsamchon_1_1library_1_1SQLStatement"/>
        <childnode refid="2653" relation="usage">
          <edgelabel>bindParameterBASizeMap</edgelabel>
        </childnode>
        <childnode refid="2651" relation="usage">
          <edgelabel>sqli</edgelabel>
        </childnode>
      </node>
      <node id="2646">
        <label>Server</label>
        <link refid="d9/d35/classsamchon_1_1protocol_1_1service_1_1Server"/>
        <childnode refid="2647" relation="private-inheritance">
        </childnode>
        <childnode refid="2648" relation="public-inheritance">
        </childnode>
        <childnode refid="2649" relation="usage">
          <edgelabel>mtx</edgelabel>
        </childnode>
        <childnode refid="2650" relation="usage">
          <edgelabel>ipMap</edgelabel>
        </childnode>
        <childnode refid="2651" relation="usage">
          <edgelabel>sqli</edgelabel>
        </childnode>
      </node>
      <node id="2653">
        <label>Map&lt; size_t, SQL_SIZE_T &gt;</label>
        <link refid="d1/d4e/classsamchon_1_1Map"/>
      </node>
      <node id="2642">
        <label>IProtocol</label>
        <link refid="d4/dcf/classsamchon_1_1protocol_1_1IProtocol"/>
      </node>
      <node id="2643">
        <label>Service</label>
        <link refid="d6/df3/classsamchon_1_1protocol_1_1service_1_1Service"/>
        <childnode refid="2642" relation="public-inheritance">
        </childnode>
        <childnode refid="2640" relation="usage">
          <edgelabel>client</edgelabel>
        </childnode>
      </node>
      <node id="2654">
        <label>IPUserPair</label>
        <link refid="df/dc6/classsamchon_1_1protocol_1_1service_1_1IPUserPair"/>
        <childnode refid="2646" relation="usage">
          <edgelabel>server</edgelabel>
        </childnode>
      </node>
      <node id="2648">
        <label>IServer</label>
        <link refid="d4/de8/classsamchon_1_1protocol_1_1IServer"/>
      </node>
      <node id="2647">
        <label>Dictionary&lt; SmartPointer&lt; User &gt; &gt;</label>
        <link refid="d1/d4e/classsamchon_1_1Map"/>
      </node>
      <node id="2640">
        <label>Client</label>
        <link refid="df/d31/classsamchon_1_1protocol_1_1service_1_1Client"/>
        <childnode refid="2641" relation="public-inheritance">
        </childnode>
        <childnode refid="2643" relation="usage">
          <edgelabel>service</edgelabel>
        </childnode>
        <childnode refid="2644" relation="usage">
          <edgelabel>user</edgelabel>
        </childnode>
      </node>
      <node id="2641">
        <label>IClient</label>
        <link refid="d3/dc8/classsamchon_1_1protocol_1_1IClient"/>
        <childnode refid="2642" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2645">
        <label>Map&lt; size_t, SmartPointer&lt; Client &gt; &gt;</label>
        <link refid="d1/d4e/classsamchon_1_1Map"/>
      </node>
      <node id="2656">
        <label>SmartPointer&lt; samchon::protocol::service::User &gt;</label>
        <link refid="d9/d2d/classsamchon_1_1SmartPointer"/>
        <childnode refid="2644" relation="usage">
          <edgelabel>ptr</edgelabel>
        </childnode>
      </node>
      <node id="2638">
        <label>ServiceKeeper</label>
        <link refid="d0/d04/classsamchon_1_1protocol_1_1service_1_1ServiceKeeper"/>
        <childnode refid="2639" relation="usage">
          <edgelabel>client</edgelabel>
        </childnode>
        <childnode refid="2656" relation="usage">
          <edgelabel>user</edgelabel>
        </childnode>
      </node>
      <node id="2655">
        <label>Semaphore</label>
        <link refid="d9/d88/classsamchon_1_1library_1_1Semaphore"/>
      </node>
      <node id="2650">
        <label>Map&lt; std::shared_ptr&lt; samchon::protocol::service::IPUserPair &gt; &gt;</label>
        <link refid="d1/d4e/classsamchon_1_1Map"/>
      </node>
      <node id="2651">
        <label>SQLi</label>
        <link refid="d9/d2f/classsamchon_1_1library_1_1SQLi"/>
        <childnode refid="2652" relation="usage">
          <edgelabel>stmt</edgelabel>
        </childnode>
      </node>
      <node id="2649">
        <label>RWMutex</label>
        <link refid="df/d85/classsamchon_1_1library_1_1RWMutex"/>
      </node>
      <node id="2639">
        <label>SmartPointer&lt; samchon::protocol::service::Client &gt;</label>
        <link refid="d9/d2d/classsamchon_1_1SmartPointer"/>
        <childnode refid="2640" relation="usage">
          <edgelabel>ptr</edgelabel>
        </childnode>
      </node>
      <node id="2644">
        <label>User</label>
        <link refid="df/d87/classsamchon_1_1protocol_1_1service_1_1User"/>
        <childnode refid="2645" relation="private-inheritance">
        </childnode>
        <childnode refid="2642" relation="public-inheritance">
        </childnode>
        <childnode refid="2646" relation="usage">
          <edgelabel>server</edgelabel>
        </childnode>
        <childnode refid="2654" relation="usage">
          <edgelabel>ipPair</edgelabel>
        </childnode>
        <childnode refid="2655" relation="usage">
          <edgelabel>semaphore</edgelabel>
        </childnode>
        <childnode refid="2649" relation="usage">
          <edgelabel>mtx</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="D:/OneDrive/Project/Samchon/framework/cpp/samchon/protocol/service/ServiceKeeper.hpp" line="36" column="1" bodyfile="D:/OneDrive/Project/Samchon/framework/cpp/samchon/protocol/service/ServiceKeeper.hpp" bodystart="35" bodyend="66"/>
    <listofallmembers>
      <member refid="d0/d04/classsamchon_1_1protocol_1_1service_1_1ServiceKeeper_1a0ec8214f3950183c9876f7103c530754" prot="private" virt="non-virtual"><scope>samchon::protocol::service::ServiceKeeper</scope><name>client</name></member>
      <member refid="d0/d04/classsamchon_1_1protocol_1_1service_1_1ServiceKeeper_1a1d4fe8bac81b12205b7b07fcceef3a77" prot="public" virt="non-virtual"><scope>samchon::protocol::service::ServiceKeeper</scope><name>ServiceKeeper</name></member>
      <member refid="d0/d04/classsamchon_1_1protocol_1_1service_1_1ServiceKeeper_1a3410e8d8df60b0245643bfafffdcde61" prot="public" virt="non-virtual"><scope>samchon::protocol::service::ServiceKeeper</scope><name>ServiceKeeper</name></member>
      <member refid="d0/d04/classsamchon_1_1protocol_1_1service_1_1ServiceKeeper_1a109d1fe06e828265cbaec450ab1e0206" prot="public" virt="non-virtual"><scope>samchon::protocol::service::ServiceKeeper</scope><name>ServiceKeeper</name></member>
      <member refid="d0/d04/classsamchon_1_1protocol_1_1service_1_1ServiceKeeper_1ae96a2b7eb318179a9ee8c622df1439a9" prot="private" virt="non-virtual"><scope>samchon::protocol::service::ServiceKeeper</scope><name>user</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
