<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.10">
  <compounddef id="d9/d2f/classsamchon_1_1library_1_1SQLi" kind="class" language="C++" prot="public">
    <compoundname>samchon::library::SQLi</compoundname>
    <derivedcompoundref refid="d6/dcc/classsamchon_1_1library_1_1MySQLi" prot="public" virt="non-virtual">MySQLi</derivedcompoundref>
    <derivedcompoundref refid="db/da3/classsamchon_1_1library_1_1SQLLiteConnector" prot="public" virt="non-virtual">SQLLiteConnector</derivedcompoundref>
    <derivedcompoundref refid="da/dfd/classsamchon_1_1library_1_1TSQLi" prot="public" virt="non-virtual">TSQLi</derivedcompoundref>
    <includes refid="d5/d6a/SQLi_8hpp" local="no">SQLi.hpp</includes>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="d9/d2f/classsamchon_1_1library_1_1SQLi_1a009a89e6445649314f38422f7a4d8f71" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend class</type>
        <definition>friend class SQLStatement</definition>
        <argsstring></argsstring>
        <name>SQLStatement</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/OneDrive/Project/Samchon/framework/cpp/samchon/library/SQLi.hpp" line="44" column="1" bodyfile="D:/OneDrive/Project/Samchon/framework/cpp/samchon/library/SQLi.hpp" bodystart="44" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="d9/d2f/classsamchon_1_1library_1_1SQLi_1ada10feddb1e7bd109da11d2f991bebca" prot="protected" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string driver</definition>
        <argsstring></argsstring>
        <name>driver</name>
        <briefdescription>
<para>Driver; name of DBMS used for connection. </para>        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>MySQL: "{MySQL Server}" </para></listitem>
<listitem><para>MS-SQL: "{SQL Server}" </para></listitem>
<listitem><para>PL-SQL: "{Oracle}" </para></listitem>
</itemizedlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/OneDrive/Project/Samchon/framework/cpp/samchon/library/SQLi.hpp" line="55" column="1" bodyfile="D:/OneDrive/Project/Samchon/framework/cpp/samchon/library/SQLi.hpp" bodystart="55" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d9/d2f/classsamchon_1_1library_1_1SQLi_1a63c89c04d1feae07ca35558055155ffb" prot="protected" static="no" mutable="no">
        <type>int</type>
        <definition>int port</definition>
        <argsstring></argsstring>
        <name>port</name>
        <briefdescription>
<para>Port number of DBMS. </para>        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>MySQL: 3306 </para></listitem>
<listitem><para>MS-SQL: 1433 </para></listitem>
<listitem><para>PL-SQL: 1521 </para></listitem>
</itemizedlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/OneDrive/Project/Samchon/framework/cpp/samchon/library/SQLi.hpp" line="65" column="1" bodyfile="D:/OneDrive/Project/Samchon/framework/cpp/samchon/library/SQLi.hpp" bodystart="65" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="d9/d2f/classsamchon_1_1library_1_1SQLi_1a228a03b046fa82434aa4f6f0053a7397" prot="private" static="no" mutable="no">
        <type>void *</type>
        <definition>void* hdbc</definition>
        <argsstring></argsstring>
        <name>hdbc</name>
        <briefdescription>
<para>Handler of DB-connector. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/OneDrive/Project/Samchon/framework/cpp/samchon/library/SQLi.hpp" line="76" column="1" bodyfile="D:/OneDrive/Project/Samchon/framework/cpp/samchon/library/SQLi.hpp" bodystart="76" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d9/d2f/classsamchon_1_1library_1_1SQLi_1ac85c4f6d5fdfe7668ae126b40d0912d4" prot="private" static="no" mutable="no">
        <type><ref refid="de/def/classsamchon_1_1library_1_1SQLStatement" kindref="compound">SQLStatement</ref> *</type>
        <definition>SQLStatement* stmt</definition>
        <argsstring></argsstring>
        <name>stmt</name>
        <briefdescription>
<para><ref refid="de/def/classsamchon_1_1library_1_1SQLStatement" kindref="compound">SQLStatement</ref>&apos;s pointer linked with the <ref refid="d9/d2f/classsamchon_1_1library_1_1SQLi" kindref="compound">SQLi</ref>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/OneDrive/Project/Samchon/framework/cpp/samchon/library/SQLi.hpp" line="81" column="1" bodyfile="D:/OneDrive/Project/Samchon/framework/cpp/samchon/library/SQLi.hpp" bodystart="81" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d9/d2f/classsamchon_1_1library_1_1SQLi_1a88ce305534aa0dde7dac0db848464ce7" prot="private" static="no" mutable="no">
        <type>std::mutex</type>
        <definition>std::mutex stmtMutex</definition>
        <argsstring></argsstring>
        <name>stmtMutex</name>
        <briefdescription>
<para>Mutex ensuring concurrency with <ref refid="de/def/classsamchon_1_1library_1_1SQLStatement" kindref="compound">SQLStatement</ref>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/OneDrive/Project/Samchon/framework/cpp/samchon/library/SQLi.hpp" line="86" column="1" bodyfile="D:/OneDrive/Project/Samchon/framework/cpp/samchon/library/SQLi.hpp" bodystart="86" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="d9/d2f/classsamchon_1_1library_1_1SQLi_1a887aea31e82bc3c05e85f1991f2bde3e" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>auto</type>
        <definition>auto getErrorMessage</definition>
        <argsstring>(short type) const  -&gt; std::string</argsstring>
        <name>getErrorMessage</name>
        <param>
          <type>short</type>
          <declname>type</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/OneDrive/Project/Samchon/framework/cpp/samchon/library/SQLi.hpp" line="70" column="1" bodyfile="D:/OneDrive/Project/Samchon/framework/cpp/samchon/library/SQLi.cpp" bodystart="79" bodyend="88"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="d9/d2f/classsamchon_1_1library_1_1SQLi_1a2f42685107025f2a941f8a2ad0b27a00" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>SQLi</definition>
        <argsstring>(const std::string &amp;driver, int port)</argsstring>
        <name>SQLi</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>driver</declname>
        </param>
        <param>
          <type>int</type>
          <declname>port</declname>
        </param>
        <briefdescription>
<para>Construct from driver name and port. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>driver</parametername>
</parameternamelist>
<parameterdescription>
<para>Driver name of DBMS </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>port</parametername>
</parameternamelist>
<parameterdescription>
<para>Port number of DBMS </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/OneDrive/Project/Samchon/framework/cpp/samchon/library/SQLi.hpp" line="95" column="1" bodyfile="D:/OneDrive/Project/Samchon/framework/cpp/samchon/library/SQLi.cpp" bodystart="21" bodyend="27"/>
      </memberdef>
      <memberdef kind="function" id="d9/d2f/classsamchon_1_1library_1_1SQLi_1aded5de0f900605de95da73b9430d0df3" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>~SQLi</definition>
        <argsstring>()</argsstring>
        <name>~SQLi</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/OneDrive/Project/Samchon/framework/cpp/samchon/library/SQLi.hpp" line="96" column="1" bodyfile="D:/OneDrive/Project/Samchon/framework/cpp/samchon/library/SQLi.cpp" bodystart="28" bodyend="31"/>
      </memberdef>
      <memberdef kind="function" id="d9/d2f/classsamchon_1_1library_1_1SQLi_1a210bb09cc23ac5136a06ba41b6c6b701" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void connect</definition>
        <argsstring>(const std::string &amp;ip, const std::string &amp;db, const std::string &amp;id, const std::string &amp;pwd)</argsstring>
        <name>connect</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>ip</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>db</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>id</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>pwd</declname>
        </param>
        <briefdescription>
<para>Connect to the DBMS<linebreak/>
. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ip</parametername>
</parameternamelist>
<parameterdescription>
<para>An IP address of the DBMS </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>db</parametername>
</parameternamelist>
<parameterdescription>
<para>A name of database to access </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>id</parametername>
</parameternamelist>
<parameterdescription>
<para>Your own ID authorified from DBMS </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pwd</parametername>
</parameternamelist>
<parameterdescription>
<para>A password for the ID</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>exception</parametername>
</parameternamelist>
<parameterdescription>
<para>Error message from DBMS </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/OneDrive/Project/Samchon/framework/cpp/samchon/library/SQLi.hpp" line="108" column="1" bodyfile="D:/OneDrive/Project/Samchon/framework/cpp/samchon/library/SQLi.cpp" bodystart="38" bodyend="66"/>
      </memberdef>
      <memberdef kind="function" id="d9/d2f/classsamchon_1_1library_1_1SQLi_1a960705de531a20389fb29928d43258c3" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void disconnect</definition>
        <argsstring>()</argsstring>
        <name>disconnect</name>
        <briefdescription>
<para>Disconnect from DBMS. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/OneDrive/Project/Samchon/framework/cpp/samchon/library/SQLi.hpp" line="117" column="1" bodyfile="D:/OneDrive/Project/Samchon/framework/cpp/samchon/library/SQLi.cpp" bodystart="67" bodyend="77"/>
      </memberdef>
      <memberdef kind="function" id="d9/d2f/classsamchon_1_1library_1_1SQLi_1a270bed8f66bffd0352efe7a9b33e3be8" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>auto</type>
        <definition>auto createStatement</definition>
        <argsstring>() -&gt; std::shared_ptr&lt; SQLStatement &gt;</argsstring>
        <name>createStatement</name>
        <reimplementedby refid="da/dfd/classsamchon_1_1library_1_1TSQLi_1a270bed8f66bffd0352efe7a9b33e3be8">createStatement</reimplementedby>
        <briefdescription>
<para>Factory method for creating <ref refid="de/def/classsamchon_1_1library_1_1SQLStatement" kindref="compound">SQLStatement</ref>. </para>        </briefdescription>
        <detaileddescription>
<para>Recommend to create <ref refid="de/def/classsamchon_1_1library_1_1SQLStatement" kindref="compound">SQLStatement</ref> by this method. Direct creation is not recommended as the reason of domain problem of each DBMS</para><para><simplesect kind="return"><para>A <ref refid="de/def/classsamchon_1_1library_1_1SQLStatement" kindref="compound">SQLStatement</ref> matched for the domain <ref refid="d9/d2f/classsamchon_1_1library_1_1SQLi" kindref="compound">SQLi</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/OneDrive/Project/Samchon/framework/cpp/samchon/library/SQLi.hpp" line="128" column="1" bodyfile="D:/OneDrive/Project/Samchon/framework/cpp/samchon/library/SQLi.cpp" bodystart="33" bodyend="36"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>A SQL interface; DBMS connector. </para>    </briefdescription>
    <detaileddescription>
<para><ref refid="d9/d2f/classsamchon_1_1library_1_1SQLi" kindref="compound">SQLi</ref> is an abstract class managing connection (session) with a specific database and manages SQL statements are executed and results are returned within the context of a connection. </para><para>The reason why SQLStatement(s) are managed by <ref refid="d9/d2f/classsamchon_1_1library_1_1SQLi" kindref="compound">SQLi</ref> is because of a principle of DBMS, DBMS system doesn&apos;t allow simultaneous query from a session (connection). Only a query (process0) is allowed at a time. If you try to simultaneous query from a <ref refid="d9/d2f/classsamchon_1_1library_1_1SQLi" kindref="compound">SQLi</ref>, ODBC throws error. To avoid the error, an execute of query from <ref refid="de/def/classsamchon_1_1library_1_1SQLStatement" kindref="compound">SQLStatement</ref> will lock a mutex of <ref refid="d9/d2f/classsamchon_1_1library_1_1SQLi" kindref="compound">SQLi</ref> to ensure exclusiveness. </para><para><image type="html" name="library_sql.png"></image>
 <image type="latex" name="library_sql.png"></image>
</para><para><simplesect kind="note"><para></para></simplesect>
To ensure the exclusiveness, you&apos;ve to make <ref refid="de/def/classsamchon_1_1library_1_1SQLStatement" kindref="compound">SQLStatement</ref> from <ref refid="d9/d2f/classsamchon_1_1library_1_1SQLi" kindref="compound">SQLi</ref>. Do not make <ref refid="de/def/classsamchon_1_1library_1_1SQLStatement" kindref="compound">SQLStatement</ref> by yourself. call SQLi::createSQLStatement() instead. Even you make a derived class from <ref refid="de/def/classsamchon_1_1library_1_1SQLStatement" kindref="compound">SQLStatement</ref>, don&apos;t make its constructor to have public accessor. </para><para>Becuase execution of a sql statement causes lock on mutex in <ref refid="d9/d2f/classsamchon_1_1library_1_1SQLi" kindref="compound">SQLi</ref>, you&apos;ve to destruct the <ref refid="de/def/classsamchon_1_1library_1_1SQLStatement" kindref="compound">SQLStatement</ref> or call <ref refid="de/def/classsamchon_1_1library_1_1SQLStatement_1aafde19f7d36ca163a143579c1b125b6d" kindref="member">SQLStatement::free()</ref> method(). If you don&apos;t, the mutex will not be unlocked, thus you can&apos;t do anything by the <ref refid="d9/d2f/classsamchon_1_1library_1_1SQLi" kindref="compound">SQLi</ref>. </para><para><simplesect kind="see"><para><ref refid="d8/dd4/namespacesamchon_1_1library" kindref="compound">samchon::library</ref> </para></simplesect>
<simplesect kind="author"><para>Jeongho Nam </para></simplesect>
</para>    </detaileddescription>
    <inheritancegraph>
      <node id="2765">
        <label>MySQLi</label>
        <link refid="d6/dcc/classsamchon_1_1library_1_1MySQLi"/>
        <childnode refid="2764" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2766">
        <label>TSQLi</label>
        <link refid="da/dfd/classsamchon_1_1library_1_1TSQLi"/>
        <childnode refid="2764" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2764">
        <label>SQLi</label>
        <link refid="d9/d2f/classsamchon_1_1library_1_1SQLi"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2768">
        <label>SQLStatement</label>
        <link refid="de/def/classsamchon_1_1library_1_1SQLStatement"/>
        <childnode refid="2769" relation="usage">
          <edgelabel>bindParameterBASizeMap</edgelabel>
        </childnode>
        <childnode refid="2767" relation="usage">
          <edgelabel>sqli</edgelabel>
        </childnode>
      </node>
      <node id="2769">
        <label>Map&lt; size_t, SQL_SIZE_T &gt;</label>
        <link refid="d1/d4e/classsamchon_1_1Map"/>
      </node>
      <node id="2767">
        <label>SQLi</label>
        <link refid="d9/d2f/classsamchon_1_1library_1_1SQLi"/>
        <childnode refid="2768" relation="usage">
          <edgelabel>stmt</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="D:/OneDrive/Project/Samchon/framework/cpp/samchon/library/SQLi.hpp" line="43" column="1" bodyfile="D:/OneDrive/Project/Samchon/framework/cpp/samchon/library/SQLi.hpp" bodystart="42" bodyend="129"/>
    <listofallmembers>
      <member refid="d9/d2f/classsamchon_1_1library_1_1SQLi_1a210bb09cc23ac5136a06ba41b6c6b701" prot="public" virt="virtual"><scope>samchon::library::SQLi</scope><name>connect</name></member>
      <member refid="d9/d2f/classsamchon_1_1library_1_1SQLi_1a270bed8f66bffd0352efe7a9b33e3be8" prot="public" virt="virtual"><scope>samchon::library::SQLi</scope><name>createStatement</name></member>
      <member refid="d9/d2f/classsamchon_1_1library_1_1SQLi_1a960705de531a20389fb29928d43258c3" prot="public" virt="virtual"><scope>samchon::library::SQLi</scope><name>disconnect</name></member>
      <member refid="d9/d2f/classsamchon_1_1library_1_1SQLi_1ada10feddb1e7bd109da11d2f991bebca" prot="protected" virt="non-virtual"><scope>samchon::library::SQLi</scope><name>driver</name></member>
      <member refid="d9/d2f/classsamchon_1_1library_1_1SQLi_1a887aea31e82bc3c05e85f1991f2bde3e" prot="protected" virt="virtual"><scope>samchon::library::SQLi</scope><name>getErrorMessage</name></member>
      <member refid="d9/d2f/classsamchon_1_1library_1_1SQLi_1a228a03b046fa82434aa4f6f0053a7397" prot="private" virt="non-virtual"><scope>samchon::library::SQLi</scope><name>hdbc</name></member>
      <member refid="d9/d2f/classsamchon_1_1library_1_1SQLi_1a63c89c04d1feae07ca35558055155ffb" prot="protected" virt="non-virtual"><scope>samchon::library::SQLi</scope><name>port</name></member>
      <member refid="d9/d2f/classsamchon_1_1library_1_1SQLi_1a2f42685107025f2a941f8a2ad0b27a00" prot="public" virt="non-virtual"><scope>samchon::library::SQLi</scope><name>SQLi</name></member>
      <member refid="d9/d2f/classsamchon_1_1library_1_1SQLi_1ac85c4f6d5fdfe7668ae126b40d0912d4" prot="private" virt="non-virtual"><scope>samchon::library::SQLi</scope><name>stmt</name></member>
      <member refid="d9/d2f/classsamchon_1_1library_1_1SQLi_1a88ce305534aa0dde7dac0db848464ce7" prot="private" virt="non-virtual"><scope>samchon::library::SQLi</scope><name>stmtMutex</name></member>
      <member refid="d9/d2f/classsamchon_1_1library_1_1SQLi_1aded5de0f900605de95da73b9430d0df3" prot="public" virt="virtual"><scope>samchon::library::SQLi</scope><name>~SQLi</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
