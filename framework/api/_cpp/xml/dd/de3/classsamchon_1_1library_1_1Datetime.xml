<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.10">
  <compounddef id="dd/de3/classsamchon_1_1library_1_1Datetime" kind="class" language="C++" prot="public">
    <compoundname>samchon::library::Datetime</compoundname>
    <basecompoundref refid="da/d6b/classsamchon_1_1library_1_1Date" prot="public" virt="non-virtual">Date</basecompoundref>
    <includes refid="de/d5a/Datetime_8hpp" local="no">Datetime.hpp</includes>
      <sectiondef kind="protected-type">
      <memberdef kind="typedef" id="dd/de3/classsamchon_1_1library_1_1Datetime_1ac62244740e6f365adf0f89d89df4d423" prot="protected" static="no">
        <type><ref refid="da/d6b/classsamchon_1_1library_1_1Date" kindref="compound">Date</ref></type>
        <definition>typedef Date super</definition>
        <argsstring></argsstring>
        <name>super</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/OneDrive/Project/Samchon/framework/cpp/samchon/library/Datetime.hpp" line="23" column="1" bodyfile="D:/OneDrive/Project/Samchon/framework/cpp/samchon/library/Datetime.hpp" bodystart="23" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="dd/de3/classsamchon_1_1library_1_1Datetime_1aa43b9889305d32d3932adc6e5dd26c6a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Datetime</definition>
        <argsstring>()</argsstring>
        <name>Datetime</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Default Constructor</para><para>The datetime will be now (Now from operating system) </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/OneDrive/Project/Samchon/framework/cpp/samchon/library/Datetime.hpp" line="34" column="1" bodyfile="D:/OneDrive/Project/Samchon/framework/cpp/samchon/library/Datetime.cpp" bodystart="17" bodyend="20"/>
      </memberdef>
      <memberdef kind="function" id="dd/de3/classsamchon_1_1library_1_1Datetime_1af67ad250df21de58491dc2193a3ee930" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Datetime</definition>
        <argsstring>(const super::super &amp;)</argsstring>
        <name>Datetime</name>
        <param>
          <type>const super::super &amp;</type>
          <defname>date</defname>
        </param>
        <briefdescription>
<para>Copy Constructor. </para>        </briefdescription>
        <detaileddescription>
<para>Copy the date from another <ref refid="da/d6b/classsamchon_1_1library_1_1Date" kindref="compound">Date</ref></para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>date</parametername>
</parameternamelist>
<parameterdescription>
<para>Target to be copied </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/OneDrive/Project/Samchon/framework/cpp/samchon/library/Datetime.hpp" line="39" column="1" bodyfile="D:/OneDrive/Project/Samchon/framework/cpp/samchon/library/Datetime.cpp" bodystart="21" bodyend="24"/>
      </memberdef>
      <memberdef kind="function" id="dd/de3/classsamchon_1_1library_1_1Datetime_1a1e2a0df9121554c2eb5844178320c6e9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Datetime</definition>
        <argsstring>(super::super &amp;&amp;)</argsstring>
        <name>Datetime</name>
        <param>
          <type>super::super &amp;&amp;</type>
          <defname>date</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Move Constructor</para><para>Gets the date from other and truncate the other</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>date</parametername>
</parameternamelist>
<parameterdescription>
<para>Target to be moved </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/OneDrive/Project/Samchon/framework/cpp/samchon/library/Datetime.hpp" line="44" column="1" bodyfile="D:/OneDrive/Project/Samchon/framework/cpp/samchon/library/Datetime.cpp" bodystart="25" bodyend="28"/>
      </memberdef>
      <memberdef kind="function" id="dd/de3/classsamchon_1_1library_1_1Datetime_1a5c844ff362b638f5ac262f884c5dd5b6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Datetime</definition>
        <argsstring>(int year, int month, int date, int hour=0, int min=0, int sec=0)</argsstring>
        <name>Datetime</name>
        <param>
          <type>int</type>
          <declname>year</declname>
        </param>
        <param>
          <type>int</type>
          <declname>month</declname>
        </param>
        <param>
          <type>int</type>
          <declname>date</declname>
        </param>
        <param>
          <type>int</type>
          <declname>hour</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>int</type>
          <declname>min</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>int</type>
          <declname>sec</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
<para>Construct from datetime elements. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>year</parametername>
</parameternamelist>
<parameterdescription>
<para>ex) 2015 </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>month</parametername>
</parameternamelist>
<parameterdescription>
<para>January to December. 1 ~ 12 </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>date</parametername>
</parameternamelist>
<parameterdescription>
<para>Day in month. 1 ~ 31 </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>hour</parametername>
</parameternamelist>
<parameterdescription>
<para>Hours (0-23) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>min</parametername>
</parameternamelist>
<parameterdescription>
<para>Minutes (0-59) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>sec</parametername>
</parameternamelist>
<parameterdescription>
<para>Seconds (0-59)</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>invalid_argument</parametername>
</parameternamelist>
<parameterdescription>
<para>parameter is out of its own range. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/OneDrive/Project/Samchon/framework/cpp/samchon/library/Datetime.hpp" line="58" column="1" bodyfile="D:/OneDrive/Project/Samchon/framework/cpp/samchon/library/Datetime.cpp" bodystart="29" bodyend="33"/>
      </memberdef>
      <memberdef kind="function" id="dd/de3/classsamchon_1_1library_1_1Datetime_1a96c302db235c7b7ea36c09736236adef" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Datetime</definition>
        <argsstring>(const WeakString &amp;)</argsstring>
        <name>Datetime</name>
        <param>
          <type>const <ref refid="d8/de4/classsamchon_1_1WeakString" kindref="compound">WeakString</ref> &amp;</type>
          <defname>wStr</defname>
        </param>
        <briefdescription>
<para>Construct from <ref refid="d8/de4/classsamchon_1_1WeakString" kindref="compound">WeakString</ref>. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>wstr</parametername>
</parameternamelist>
<parameterdescription>
<para>A weak_string expressing the date. (1991-01-01 09:27:03) </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>invalid_argument</parametername>
</parameternamelist>
<parameterdescription>
<para>parameter is out of its own range. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/OneDrive/Project/Samchon/framework/cpp/samchon/library/Datetime.hpp" line="66" column="1" bodyfile="D:/OneDrive/Project/Samchon/framework/cpp/samchon/library/Datetime.cpp" bodystart="34" bodyend="38"/>
      </memberdef>
      <memberdef kind="function" id="dd/de3/classsamchon_1_1library_1_1Datetime_1a097eadb94c1e6ad5cd2af58959166c56" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Datetime</definition>
        <argsstring>(long long linuxTime)</argsstring>
        <name>Datetime</name>
        <param>
          <type>long long</type>
          <declname>linuxTime</declname>
        </param>
        <briefdescription>
<para>Construct from linux_time. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>linuxTime</parametername>
</parameternamelist>
<parameterdescription>
<para>linux_time to be converted </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/OneDrive/Project/Samchon/framework/cpp/samchon/library/Datetime.hpp" line="73" column="1" bodyfile="D:/OneDrive/Project/Samchon/framework/cpp/samchon/library/Datetime.cpp" bodystart="39" bodyend="43"/>
      </memberdef>
      <memberdef kind="function" id="dd/de3/classsamchon_1_1library_1_1Datetime_1a2ef59c583256392f65fd5eaa330dcced" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>virtual ~Datetime</definition>
        <argsstring>()=default</argsstring>
        <name>~Datetime</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/OneDrive/Project/Samchon/framework/cpp/samchon/library/Datetime.hpp" line="74" column="1"/>
      </memberdef>
      <memberdef kind="function" id="dd/de3/classsamchon_1_1library_1_1Datetime_1abc66d4a328541e437eef45fa1686bbbc" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void set</definition>
        <argsstring>(const WeakString &amp;) override</argsstring>
        <name>set</name>
        <reimplements refid="da/d6b/classsamchon_1_1library_1_1Date_1aa2cc114fc1114152e97f4676dd67a3b9">set</reimplements>
        <param>
          <type>const <ref refid="d8/de4/classsamchon_1_1WeakString" kindref="compound">WeakString</ref> &amp;</type>
          <defname>wStr</defname>
        </param>
        <briefdescription>
<para>Set by weak_string. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>wstr</parametername>
</parameternamelist>
<parameterdescription>
<para>A weak_string expressing the date. (1991-01-01 09:27:03) </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>invalid_argument</parametername>
</parameternamelist>
<parameterdescription>
<para>parameter is out of its own range. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/OneDrive/Project/Samchon/framework/cpp/samchon/library/Datetime.hpp" line="82" column="1" bodyfile="D:/OneDrive/Project/Samchon/framework/cpp/samchon/library/Datetime.cpp" bodystart="46" bodyend="58"/>
      </memberdef>
      <memberdef kind="function" id="dd/de3/classsamchon_1_1library_1_1Datetime_1a147a6d7f089af16d678e205ff60901c6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void set</definition>
        <argsstring>(int year, int month, int date, int hours=0, int minutes=0, int seconds=0)</argsstring>
        <name>set</name>
        <param>
          <type>int</type>
          <declname>year</declname>
        </param>
        <param>
          <type>int</type>
          <declname>month</declname>
        </param>
        <param>
          <type>int</type>
          <declname>date</declname>
        </param>
        <param>
          <type>int</type>
          <declname>hours</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>int</type>
          <declname>minutes</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>int</type>
          <declname>seconds</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>invalid_argument</parametername>
</parameternamelist>
<parameterdescription>
<para>parameter is out of range (ex: month -&gt; 13) </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/OneDrive/Project/Samchon/framework/cpp/samchon/library/Datetime.hpp" line="87" column="1" bodyfile="D:/OneDrive/Project/Samchon/framework/cpp/samchon/library/Datetime.cpp" bodystart="59" bodyend="63"/>
      </memberdef>
      <memberdef kind="function" id="dd/de3/classsamchon_1_1library_1_1Datetime_1a56cc82290b759d4ad0888c08f5a680d4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void set</definition>
        <argsstring>(long long linuxTime)</argsstring>
        <name>set</name>
        <param>
          <type>long long</type>
          <declname>linuxTime</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/OneDrive/Project/Samchon/framework/cpp/samchon/library/Datetime.hpp" line="92" column="1" bodyfile="D:/OneDrive/Project/Samchon/framework/cpp/samchon/library/Datetime.cpp" bodystart="64" bodyend="67"/>
      </memberdef>
      <memberdef kind="function" id="dd/de3/classsamchon_1_1library_1_1Datetime_1a1245becca183a002fb0b994ad193e6ae" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void setYear</definition>
        <argsstring>(int)</argsstring>
        <name>setYear</name>
        <reimplements refid="da/d6b/classsamchon_1_1library_1_1Date_1a1245becca183a002fb0b994ad193e6ae">setYear</reimplements>
        <param>
          <type>int</type>
          <defname>val</defname>
        </param>
        <briefdescription>
<para>Set year of the <ref refid="da/d6b/classsamchon_1_1library_1_1Date" kindref="compound">Date</ref>. </para>        </briefdescription>
        <detaileddescription>
<para>If previous date is leaf month&apos;s expiration date and target year what you want is not leaf, the date will be 28</para><para><itemizedlist>
<listitem><para>2000-02-29 -&gt; setYear(2001) -&gt; 2001-02-28 </para></listitem>
<listitem><para>2001-02-28 -&gt; setYear(2000) -&gt; 2000-02-08</para></listitem>
</itemizedlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>val</parametername>
</parameternamelist>
<parameterdescription>
<para>Target year </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/OneDrive/Project/Samchon/framework/cpp/samchon/library/Datetime.hpp" line="101" column="1" bodyfile="D:/OneDrive/Project/Samchon/framework/cpp/samchon/library/Datetime.cpp" bodystart="73" bodyend="81"/>
      </memberdef>
      <memberdef kind="function" id="dd/de3/classsamchon_1_1library_1_1Datetime_1acb5f2f40c54a316a0a5591e5ddd643b9" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void setMonth</definition>
        <argsstring>(int)</argsstring>
        <name>setMonth</name>
        <reimplements refid="da/d6b/classsamchon_1_1library_1_1Date_1acb5f2f40c54a316a0a5591e5ddd643b9">setMonth</reimplements>
        <param>
          <type>int</type>
          <defname>val</defname>
        </param>
        <briefdescription>
<para>Set month of the <ref refid="da/d6b/classsamchon_1_1library_1_1Date" kindref="compound">Date</ref>. </para>        </briefdescription>
        <detaileddescription>
<para>If the expiration date of the month will be shrinked, the date will be changed to the expiration date</para><para><itemizedlist>
<listitem><para>2000-03-31 -&gt; setMonth(4) -&gt; 2000-04-30 </para></listitem>
<listitem><para>2007-08-31 -&gt; setMonth(9) -&gt; 2007-09-30</para></listitem>
</itemizedlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>val</parametername>
</parameternamelist>
<parameterdescription>
<para>Target month (1 - 12) </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>invalid_argument</parametername>
</parameternamelist>
<parameterdescription>
<para>month is out of range </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/OneDrive/Project/Samchon/framework/cpp/samchon/library/Datetime.hpp" line="106" column="1" bodyfile="D:/OneDrive/Project/Samchon/framework/cpp/samchon/library/Datetime.cpp" bodystart="82" bodyend="90"/>
      </memberdef>
      <memberdef kind="function" id="dd/de3/classsamchon_1_1library_1_1Datetime_1a45ce60ef6323b13f5539505f82f64e27" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void setDate</definition>
        <argsstring>(int)</argsstring>
        <name>setDate</name>
        <reimplements refid="da/d6b/classsamchon_1_1library_1_1Date_1a45ce60ef6323b13f5539505f82f64e27">setDate</reimplements>
        <param>
          <type>int</type>
          <defname>val</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set date of the <ref refid="da/d6b/classsamchon_1_1library_1_1Date" kindref="compound">Date</ref></para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>val</parametername>
</parameternamelist>
<parameterdescription>
<para>Target day in month </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>invalid_argument</parametername>
</parameternamelist>
<parameterdescription>
<para>When date is over expiration date in month </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/OneDrive/Project/Samchon/framework/cpp/samchon/library/Datetime.hpp" line="111" column="1" bodyfile="D:/OneDrive/Project/Samchon/framework/cpp/samchon/library/Datetime.cpp" bodystart="91" bodyend="99"/>
      </memberdef>
      <memberdef kind="function" id="dd/de3/classsamchon_1_1library_1_1Datetime_1a3455090d3b497ef9c67f7337802e5e1c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void setHour</definition>
        <argsstring>(int)</argsstring>
        <name>setHour</name>
        <param>
          <type>int</type>
          <defname>val</defname>
        </param>
        <briefdescription>
<para>Set hour. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>val</parametername>
</parameternamelist>
<parameterdescription>
<para>Target hour (0 - 23) </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>invalid_argument</parametername>
</parameternamelist>
<parameterdescription>
<para>When hour is out of range </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/OneDrive/Project/Samchon/framework/cpp/samchon/library/Datetime.hpp" line="119" column="1" bodyfile="D:/OneDrive/Project/Samchon/framework/cpp/samchon/library/Datetime.cpp" bodystart="100" bodyend="103"/>
      </memberdef>
      <memberdef kind="function" id="dd/de3/classsamchon_1_1library_1_1Datetime_1a60cefaaccd0224c9a1e0739f75ae0f1e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void setMinute</definition>
        <argsstring>(int)</argsstring>
        <name>setMinute</name>
        <param>
          <type>int</type>
          <defname>val</defname>
        </param>
        <briefdescription>
<para>Set minute. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>val</parametername>
</parameternamelist>
<parameterdescription>
<para>Target minute (0 - 59) </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>invalid_argument</parametername>
</parameternamelist>
<parameterdescription>
<para>When minute is out of range </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/OneDrive/Project/Samchon/framework/cpp/samchon/library/Datetime.hpp" line="127" column="1" bodyfile="D:/OneDrive/Project/Samchon/framework/cpp/samchon/library/Datetime.cpp" bodystart="104" bodyend="107"/>
      </memberdef>
      <memberdef kind="function" id="dd/de3/classsamchon_1_1library_1_1Datetime_1a573db16d93e97453caadbfca79cdf898" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void setSecond</definition>
        <argsstring>(int)</argsstring>
        <name>setSecond</name>
        <param>
          <type>int</type>
          <defname>val</defname>
        </param>
        <briefdescription>
<para>Set hour. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>val</parametername>
</parameternamelist>
<parameterdescription>
<para>Target second (0 - 59) </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>invalid_argument</parametername>
</parameternamelist>
<parameterdescription>
<para>When second is out of range </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/OneDrive/Project/Samchon/framework/cpp/samchon/library/Datetime.hpp" line="134" column="1" bodyfile="D:/OneDrive/Project/Samchon/framework/cpp/samchon/library/Datetime.cpp" bodystart="108" bodyend="111"/>
      </memberdef>
      <memberdef kind="function" id="dd/de3/classsamchon_1_1library_1_1Datetime_1affd9de3810d1ef4456341ed634a1efb7" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void addYear</definition>
        <argsstring>(int) override</argsstring>
        <name>addYear</name>
        <reimplements refid="da/d6b/classsamchon_1_1library_1_1Date_1a6fa2825b92b4e719e363d4bd7ec21c02">addYear</reimplements>
        <param>
          <type>int</type>
          <defname>val</defname>
        </param>
        <briefdescription>
<para>Add years to the <ref refid="da/d6b/classsamchon_1_1library_1_1Date" kindref="compound">Date</ref>. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>val</parametername>
</parameternamelist>
<parameterdescription>
<para>Years to add </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/OneDrive/Project/Samchon/framework/cpp/samchon/library/Datetime.hpp" line="140" column="1" bodyfile="D:/OneDrive/Project/Samchon/framework/cpp/samchon/library/Datetime.cpp" bodystart="114" bodyend="122"/>
      </memberdef>
      <memberdef kind="function" id="dd/de3/classsamchon_1_1library_1_1Datetime_1aac47cdf527a5228b5b3eb148c87e57be" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void addMonth</definition>
        <argsstring>(int) override</argsstring>
        <name>addMonth</name>
        <reimplements refid="da/d6b/classsamchon_1_1library_1_1Date_1aeb04c87f6ffb3f9b01d3921bfce5fd46">addMonth</reimplements>
        <param>
          <type>int</type>
          <defname>val</defname>
        </param>
        <briefdescription>
<para>Add months to the <ref refid="da/d6b/classsamchon_1_1library_1_1Date" kindref="compound">Date</ref>. </para>        </briefdescription>
        <detaileddescription>
<para>Not a matter to val is over 12. If the month is over 12, then years will be added.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>val</parametername>
</parameternamelist>
<parameterdescription>
<para>Months to add </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/OneDrive/Project/Samchon/framework/cpp/samchon/library/Datetime.hpp" line="145" column="1" bodyfile="D:/OneDrive/Project/Samchon/framework/cpp/samchon/library/Datetime.cpp" bodystart="123" bodyend="131"/>
      </memberdef>
      <memberdef kind="function" id="dd/de3/classsamchon_1_1library_1_1Datetime_1a7c820fdf74f8d4cd2ed691689b72d602" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void addWeek</definition>
        <argsstring>(int) override</argsstring>
        <name>addWeek</name>
        <reimplements refid="da/d6b/classsamchon_1_1library_1_1Date_1a206fc0cf9fd399c0293c2c039e126a75">addWeek</reimplements>
        <param>
          <type>int</type>
          <defname>val</defname>
        </param>
        <briefdescription>
<para>Add weeks to the <ref refid="da/d6b/classsamchon_1_1library_1_1Date" kindref="compound">Date</ref>. </para>        </briefdescription>
        <detaileddescription>
<para>Not a matter that val is too huge. If the adding weeks derives modification in month or year, then it will be.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>val</parametername>
</parameternamelist>
<parameterdescription>
<para>Weeks to add </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/OneDrive/Project/Samchon/framework/cpp/samchon/library/Datetime.hpp" line="150" column="1" bodyfile="D:/OneDrive/Project/Samchon/framework/cpp/samchon/library/Datetime.cpp" bodystart="132" bodyend="140"/>
      </memberdef>
      <memberdef kind="function" id="dd/de3/classsamchon_1_1library_1_1Datetime_1a845e6702ef7e67b380158c3e88f4c3f9" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void addDate</definition>
        <argsstring>(int) override</argsstring>
        <name>addDate</name>
        <reimplements refid="da/d6b/classsamchon_1_1library_1_1Date_1ab50deee6a88d183e79e8f2c22be0d7d2">addDate</reimplements>
        <param>
          <type>int</type>
          <defname>val</defname>
        </param>
        <briefdescription>
<para>Add days to the <ref refid="da/d6b/classsamchon_1_1library_1_1Date" kindref="compound">Date</ref>. </para>        </briefdescription>
        <detaileddescription>
<para>Not a matter that val is too huge. If the adding dates derives modification in month or year, then it will be.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>val</parametername>
</parameternamelist>
<parameterdescription>
<para>Days to add </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/OneDrive/Project/Samchon/framework/cpp/samchon/library/Datetime.hpp" line="155" column="1" bodyfile="D:/OneDrive/Project/Samchon/framework/cpp/samchon/library/Datetime.cpp" bodystart="141" bodyend="149"/>
      </memberdef>
      <memberdef kind="function" id="dd/de3/classsamchon_1_1library_1_1Datetime_1abd3df60cfa3c0eb3bd4998875ea439b7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void addHour</definition>
        <argsstring>(int)</argsstring>
        <name>addHour</name>
        <param>
          <type>int</type>
          <defname>val</defname>
        </param>
        <briefdescription>
<para>Add hours. </para>        </briefdescription>
        <detaileddescription>
<para>It&apos;s same with operator+=(chrono::hours(val)) </para><para>Do not worry about the out of range of the hour(val) Parent items like date, month and years will be adjusted automatically. </para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>val</parametername>
</parameternamelist>
<parameterdescription>
<para>hours to add </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/OneDrive/Project/Samchon/framework/cpp/samchon/library/Datetime.hpp" line="168" column="1" bodyfile="D:/OneDrive/Project/Samchon/framework/cpp/samchon/library/Datetime.cpp" bodystart="150" bodyend="153"/>
      </memberdef>
      <memberdef kind="function" id="dd/de3/classsamchon_1_1library_1_1Datetime_1a1a7d009a370b59c72d63a2bd22d16f2b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void addMinute</definition>
        <argsstring>(int)</argsstring>
        <name>addMinute</name>
        <param>
          <type>int</type>
          <defname>val</defname>
        </param>
        <briefdescription>
<para>Add minutes. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>It&apos;s same with operator+=(chrono::minutes(val))</title><para></para></simplesect>
<simplesect kind="par"><title></title><para>Do not worry about the out of range of the minutes(val) Parent items like date, month and years will be adjusted automatically.</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>val</parametername>
</parameternamelist>
<parameterdescription>
<para>minutes to add </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/OneDrive/Project/Samchon/framework/cpp/samchon/library/Datetime.hpp" line="180" column="1" bodyfile="D:/OneDrive/Project/Samchon/framework/cpp/samchon/library/Datetime.cpp" bodystart="154" bodyend="157"/>
      </memberdef>
      <memberdef kind="function" id="dd/de3/classsamchon_1_1library_1_1Datetime_1ab987d41a3dcfb6ecd11b186dd764227f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void addSecond</definition>
        <argsstring>(int)</argsstring>
        <name>addSecond</name>
        <param>
          <type>int</type>
          <defname>val</defname>
        </param>
        <briefdescription>
<para>Add seconds. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>It&apos;s same with operator+=(chrono::seconds(val))</title><para></para></simplesect>
<simplesect kind="par"><title></title><para>Do not worry about the out of range of the seconds(val) Parent items like date, month and years will be adjusted automatically.</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>val</parametername>
</parameternamelist>
<parameterdescription>
<para>seconds to add </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/OneDrive/Project/Samchon/framework/cpp/samchon/library/Datetime.hpp" line="194" column="1" bodyfile="D:/OneDrive/Project/Samchon/framework/cpp/samchon/library/Datetime.cpp" bodystart="158" bodyend="161"/>
      </memberdef>
      <memberdef kind="function" id="dd/de3/classsamchon_1_1library_1_1Datetime_1ab354f56239d8985312545a4953e444d3" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>auto</type>
        <definition>int getHour</definition>
        <argsstring>() const  -&gt; int</argsstring>
        <name>getHour</name>
        <briefdescription>
<para>Get hour. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>hour of the <ref refid="dd/de3/classsamchon_1_1library_1_1Datetime" kindref="compound">Datetime</ref> to integer </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/OneDrive/Project/Samchon/framework/cpp/samchon/library/Datetime.hpp" line="204" column="1" bodyfile="D:/OneDrive/Project/Samchon/framework/cpp/samchon/library/Datetime.cpp" bodystart="164" bodyend="168"/>
      </memberdef>
      <memberdef kind="function" id="dd/de3/classsamchon_1_1library_1_1Datetime_1a493974e571e6ce235d24978f3ecbeb2e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>auto</type>
        <definition>int getMinute</definition>
        <argsstring>() const  -&gt; int</argsstring>
        <name>getMinute</name>
        <briefdescription>
<para>Get minute. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>minute of the <ref refid="dd/de3/classsamchon_1_1library_1_1Datetime" kindref="compound">Datetime</ref> to integer </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/OneDrive/Project/Samchon/framework/cpp/samchon/library/Datetime.hpp" line="210" column="1" bodyfile="D:/OneDrive/Project/Samchon/framework/cpp/samchon/library/Datetime.cpp" bodystart="169" bodyend="173"/>
      </memberdef>
      <memberdef kind="function" id="dd/de3/classsamchon_1_1library_1_1Datetime_1af358690bea4e5f8bcd233d6b1bfb28ae" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>auto</type>
        <definition>int getSecond</definition>
        <argsstring>() const  -&gt; int</argsstring>
        <name>getSecond</name>
        <briefdescription>
<para>Get second. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>second of the <ref refid="dd/de3/classsamchon_1_1library_1_1Datetime" kindref="compound">Datetime</ref> to integer </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/OneDrive/Project/Samchon/framework/cpp/samchon/library/Datetime.hpp" line="216" column="1" bodyfile="D:/OneDrive/Project/Samchon/framework/cpp/samchon/library/Datetime.cpp" bodystart="174" bodyend="178"/>
      </memberdef>
      <memberdef kind="function" id="dd/de3/classsamchon_1_1library_1_1Datetime_1acf8cb8cc4e3436c1f631ffed7530357c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>auto</type>
        <definition>auto toString</definition>
        <argsstring>() const  -&gt; std::string override</argsstring>
        <name>toString</name>
        <reimplements refid="da/d6b/classsamchon_1_1library_1_1Date_1a22a175a3f828497e884c688f7a9aaadb">toString</reimplements>
        <briefdescription>
<para>Converts the <ref refid="dd/de3/classsamchon_1_1library_1_1Datetime" kindref="compound">Datetime</ref> to std::string. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>std::string expressing the <ref refid="dd/de3/classsamchon_1_1library_1_1Datetime" kindref="compound">Datetime</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/OneDrive/Project/Samchon/framework/cpp/samchon/library/Datetime.hpp" line="226" column="1" bodyfile="D:/OneDrive/Project/Samchon/framework/cpp/samchon/library/Datetime.cpp" bodystart="181" bodyend="189"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para><ref refid="da/d6b/classsamchon_1_1library_1_1Date" kindref="compound">Date</ref> and time. </para>    </briefdescription>
    <detaileddescription>
<para><ref refid="dd/de3/classsamchon_1_1library_1_1Datetime" kindref="compound">Datetime</ref> is a <ref refid="da/d6b/classsamchon_1_1library_1_1Date" kindref="compound">Date</ref> having hours, minutes and seconds addictionally. </para><para><simplesect kind="par"><title>[Inherited]</title><para></para></simplesect>
<ref refid="da/d6b/classsamchon_1_1library_1_1Date" kindref="compound">Date</ref> class is a chrono::time_point&lt;std::chrono::system_clock&gt;. </para><para><ref refid="da/d6b/classsamchon_1_1library_1_1Date" kindref="compound">Date</ref> represents the date with year, month and day in month. The basic date (local time) is from your operating system. </para><para><simplesect kind="par"><title>[Inherited]</title><para></para></simplesect>
A time_point object expresses a point in time relative to a clock&apos;s epoch. </para><para>Internally, the object stores an object of a duration type, and uses the Clock type as a reference for its epoch. </para><para>Referenced comments of std::chrono::time_point <itemizedlist>
<listitem><para><ulink url="http://www.cplusplus.com/reference/chrono/time_point/">http://www.cplusplus.com/reference/chrono/time_point/</ulink></para></listitem>
</itemizedlist>
<image type="html" name="library_date.png"></image>
 <image type="latex" name="library_date.png"></image>
</para><para><simplesect kind="see"><para><ref refid="d8/dd4/namespacesamchon_1_1library" kindref="compound">samchon::library</ref> </para></simplesect>
<simplesect kind="author"><para>Jeongho Nam </para></simplesect>
</para>    </detaileddescription>
    <inheritancegraph>
      <node id="1118">
        <label>Date</label>
        <link refid="da/d6b/classsamchon_1_1library_1_1Date"/>
      </node>
      <node id="1117">
        <label>Datetime</label>
        <link refid="dd/de3/classsamchon_1_1library_1_1Datetime"/>
        <childnode refid="1118" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1120">
        <label>Date</label>
        <link refid="da/d6b/classsamchon_1_1library_1_1Date"/>
      </node>
      <node id="1119">
        <label>Datetime</label>
        <link refid="dd/de3/classsamchon_1_1library_1_1Datetime"/>
        <childnode refid="1120" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="D:/OneDrive/Project/Samchon/framework/cpp/samchon/library/Datetime.hpp" line="21" column="1" bodyfile="D:/OneDrive/Project/Samchon/framework/cpp/samchon/library/Datetime.hpp" bodystart="19" bodyend="227"/>
    <listofallmembers>
      <member refid="dd/de3/classsamchon_1_1library_1_1Datetime_1a845e6702ef7e67b380158c3e88f4c3f9" prot="public" virt="virtual"><scope>samchon::library::Datetime</scope><name>addDate</name></member>
      <member refid="dd/de3/classsamchon_1_1library_1_1Datetime_1abd3df60cfa3c0eb3bd4998875ea439b7" prot="public" virt="non-virtual"><scope>samchon::library::Datetime</scope><name>addHour</name></member>
      <member refid="dd/de3/classsamchon_1_1library_1_1Datetime_1a1a7d009a370b59c72d63a2bd22d16f2b" prot="public" virt="non-virtual"><scope>samchon::library::Datetime</scope><name>addMinute</name></member>
      <member refid="dd/de3/classsamchon_1_1library_1_1Datetime_1aac47cdf527a5228b5b3eb148c87e57be" prot="public" virt="virtual"><scope>samchon::library::Datetime</scope><name>addMonth</name></member>
      <member refid="dd/de3/classsamchon_1_1library_1_1Datetime_1ab987d41a3dcfb6ecd11b186dd764227f" prot="public" virt="non-virtual"><scope>samchon::library::Datetime</scope><name>addSecond</name></member>
      <member refid="dd/de3/classsamchon_1_1library_1_1Datetime_1a7c820fdf74f8d4cd2ed691689b72d602" prot="public" virt="virtual"><scope>samchon::library::Datetime</scope><name>addWeek</name></member>
      <member refid="dd/de3/classsamchon_1_1library_1_1Datetime_1affd9de3810d1ef4456341ed634a1efb7" prot="public" virt="virtual"><scope>samchon::library::Datetime</scope><name>addYear</name></member>
      <member refid="da/d6b/classsamchon_1_1library_1_1Date_1a9d90568c8df68ce632056c09079d4a27" prot="protected" virt="non-virtual"><scope>samchon::library::Datetime</scope><name>calcLastDates</name></member>
      <member refid="da/d6b/classsamchon_1_1library_1_1Date_1a31658a2181d3211eba8d7e844562bb33" prot="protected" virt="non-virtual"><scope>samchon::library::Datetime</scope><name>calcSeconds</name></member>
      <member refid="da/d6b/classsamchon_1_1library_1_1Date_1aff49fc2cda4491ff4457ca481bb8edf9" prot="public" virt="non-virtual"><scope>samchon::library::Datetime</scope><name>Date</name></member>
      <member refid="da/d6b/classsamchon_1_1library_1_1Date_1a651f083a541614f39c4911a08d5f0002" prot="public" virt="non-virtual"><scope>samchon::library::Datetime</scope><name>Date</name></member>
      <member refid="da/d6b/classsamchon_1_1library_1_1Date_1af47830a523f803b2b733788e17d6644a" prot="public" virt="non-virtual"><scope>samchon::library::Datetime</scope><name>Date</name></member>
      <member refid="da/d6b/classsamchon_1_1library_1_1Date_1af1868011b8158aa010b19ce9e98af659" prot="public" virt="non-virtual"><scope>samchon::library::Datetime</scope><name>Date</name></member>
      <member refid="da/d6b/classsamchon_1_1library_1_1Date_1a340d00e77801b377e56442da67d1b2c0" prot="public" virt="non-virtual"><scope>samchon::library::Datetime</scope><name>Date</name></member>
      <member refid="da/d6b/classsamchon_1_1library_1_1Date_1ad03114efc5368cb31e80c77d2c75757d" prot="public" virt="non-virtual"><scope>samchon::library::Datetime</scope><name>Date</name></member>
      <member refid="dd/de3/classsamchon_1_1library_1_1Datetime_1aa43b9889305d32d3932adc6e5dd26c6a" prot="public" virt="non-virtual"><scope>samchon::library::Datetime</scope><name>Datetime</name></member>
      <member refid="dd/de3/classsamchon_1_1library_1_1Datetime_1af67ad250df21de58491dc2193a3ee930" prot="public" virt="non-virtual"><scope>samchon::library::Datetime</scope><name>Datetime</name></member>
      <member refid="dd/de3/classsamchon_1_1library_1_1Datetime_1a1e2a0df9121554c2eb5844178320c6e9" prot="public" virt="non-virtual"><scope>samchon::library::Datetime</scope><name>Datetime</name></member>
      <member refid="dd/de3/classsamchon_1_1library_1_1Datetime_1a5c844ff362b638f5ac262f884c5dd5b6" prot="public" virt="non-virtual"><scope>samchon::library::Datetime</scope><name>Datetime</name></member>
      <member refid="dd/de3/classsamchon_1_1library_1_1Datetime_1a96c302db235c7b7ea36c09736236adef" prot="public" virt="non-virtual"><scope>samchon::library::Datetime</scope><name>Datetime</name></member>
      <member refid="dd/de3/classsamchon_1_1library_1_1Datetime_1a097eadb94c1e6ad5cd2af58959166c56" prot="public" virt="non-virtual"><scope>samchon::library::Datetime</scope><name>Datetime</name></member>
      <member refid="da/d6b/classsamchon_1_1library_1_1Date_1aa5eededf719ed76a0475dda0c3c4e888" prot="public" virt="non-virtual"><scope>samchon::library::Datetime</scope><name>getDate</name></member>
      <member refid="da/d6b/classsamchon_1_1library_1_1Date_1a357b96872fc88211773e7001f5095e22" prot="public" virt="non-virtual"><scope>samchon::library::Datetime</scope><name>getDay</name></member>
      <member refid="dd/de3/classsamchon_1_1library_1_1Datetime_1ab354f56239d8985312545a4953e444d3" prot="public" virt="non-virtual"><scope>samchon::library::Datetime</scope><name>getHour</name></member>
      <member refid="dd/de3/classsamchon_1_1library_1_1Datetime_1a493974e571e6ce235d24978f3ecbeb2e" prot="public" virt="non-virtual"><scope>samchon::library::Datetime</scope><name>getMinute</name></member>
      <member refid="da/d6b/classsamchon_1_1library_1_1Date_1a9206ebfbe3b3f877aa210d7b9d5ece4e" prot="public" virt="non-virtual"><scope>samchon::library::Datetime</scope><name>getMonth</name></member>
      <member refid="dd/de3/classsamchon_1_1library_1_1Datetime_1af358690bea4e5f8bcd233d6b1bfb28ae" prot="public" virt="non-virtual"><scope>samchon::library::Datetime</scope><name>getSecond</name></member>
      <member refid="da/d6b/classsamchon_1_1library_1_1Date_1af14d2c811358b68ac1974d5762ef215e" prot="public" virt="non-virtual"><scope>samchon::library::Datetime</scope><name>getYear</name></member>
      <member refid="dd/de3/classsamchon_1_1library_1_1Datetime_1abc66d4a328541e437eef45fa1686bbbc" prot="public" virt="virtual"><scope>samchon::library::Datetime</scope><name>set</name></member>
      <member refid="dd/de3/classsamchon_1_1library_1_1Datetime_1a147a6d7f089af16d678e205ff60901c6" prot="public" virt="non-virtual"><scope>samchon::library::Datetime</scope><name>set</name></member>
      <member refid="dd/de3/classsamchon_1_1library_1_1Datetime_1a56cc82290b759d4ad0888c08f5a680d4" prot="public" virt="non-virtual"><scope>samchon::library::Datetime</scope><name>set</name></member>
      <member refid="da/d6b/classsamchon_1_1library_1_1Date_1a7fedca15f7376743820a0661c559f815" prot="public" virt="non-virtual" ambiguityscope="samchon::library::Date::"><scope>samchon::library::Datetime</scope><name>set</name></member>
      <member refid="da/d6b/classsamchon_1_1library_1_1Date_1a008c0c7295f504de5d808bed7246b2be" prot="public" virt="non-virtual" ambiguityscope="samchon::library::Date::"><scope>samchon::library::Datetime</scope><name>set</name></member>
      <member refid="dd/de3/classsamchon_1_1library_1_1Datetime_1a45ce60ef6323b13f5539505f82f64e27" prot="public" virt="virtual"><scope>samchon::library::Datetime</scope><name>setDate</name></member>
      <member refid="dd/de3/classsamchon_1_1library_1_1Datetime_1a3455090d3b497ef9c67f7337802e5e1c" prot="public" virt="non-virtual"><scope>samchon::library::Datetime</scope><name>setHour</name></member>
      <member refid="dd/de3/classsamchon_1_1library_1_1Datetime_1a60cefaaccd0224c9a1e0739f75ae0f1e" prot="public" virt="non-virtual"><scope>samchon::library::Datetime</scope><name>setMinute</name></member>
      <member refid="dd/de3/classsamchon_1_1library_1_1Datetime_1acb5f2f40c54a316a0a5591e5ddd643b9" prot="public" virt="virtual"><scope>samchon::library::Datetime</scope><name>setMonth</name></member>
      <member refid="dd/de3/classsamchon_1_1library_1_1Datetime_1a573db16d93e97453caadbfca79cdf898" prot="public" virt="non-virtual"><scope>samchon::library::Datetime</scope><name>setSecond</name></member>
      <member refid="dd/de3/classsamchon_1_1library_1_1Datetime_1a1245becca183a002fb0b994ad193e6ae" prot="public" virt="virtual"><scope>samchon::library::Datetime</scope><name>setYear</name></member>
      <member refid="dd/de3/classsamchon_1_1library_1_1Datetime_1ac62244740e6f365adf0f89d89df4d423" prot="protected" virt="non-virtual"><scope>samchon::library::Datetime</scope><name>super</name></member>
      <member refid="da/d6b/classsamchon_1_1library_1_1Date_1a0ffe12dcf1ff5cc30f940893fa9cd547" prot="public" virt="non-virtual"><scope>samchon::library::Datetime</scope><name>toLinuxTime</name></member>
      <member refid="dd/de3/classsamchon_1_1library_1_1Datetime_1acf8cb8cc4e3436c1f631ffed7530357c" prot="public" virt="virtual"><scope>samchon::library::Datetime</scope><name>toString</name></member>
      <member refid="da/d6b/classsamchon_1_1library_1_1Date_1a57a164daf6cdeda8283edfd48de4af24" prot="protected" virt="non-virtual"><scope>samchon::library::Datetime</scope><name>toTM</name></member>
      <member refid="da/d6b/classsamchon_1_1library_1_1Date_1a744843dc80140a5020f3f4fea00330bb" prot="protected" virt="non-virtual"><scope>samchon::library::Datetime</scope><name>TP_1970</name></member>
      <member refid="da/d6b/classsamchon_1_1library_1_1Date_1ad61363d3dde2100b45b0137a10045386" prot="public" virt="virtual"><scope>samchon::library::Datetime</scope><name>~Date</name></member>
      <member refid="dd/de3/classsamchon_1_1library_1_1Datetime_1a2ef59c583256392f65fd5eaa330dcced" prot="public" virt="virtual"><scope>samchon::library::Datetime</scope><name>~Datetime</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
