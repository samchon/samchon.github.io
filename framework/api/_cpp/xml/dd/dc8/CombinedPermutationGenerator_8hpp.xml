<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.10">
  <compounddef id="dd/dc8/CombinedPermutationGenerator_8hpp" kind="file" language="C++">
    <compoundname>CombinedPermutationGenerator.hpp</compoundname>
    <includes refid="d9/d8f/API_8hpp" local="no">samchon/API.hpp</includes>
    <includes refid="d2/da3/CaseGenerator_8hpp" local="no">samchon/library/CaseGenerator.hpp</includes>
    <includedby refid="de/dc0/Packer_8cpp" local="no">D:/OneDrive/Project/Samchon/framework/cpp/samchon/examples/packer/Packer.cpp</includedby>
    <includedby refid="de/d7a/CombinedPermutationGenerator_8cpp" local="no">D:/OneDrive/Project/Samchon/framework/cpp/samchon/library/CombinedPermutationGenerator.cpp</includedby>
    <incdepgraph>
      <node id="997">
        <label>D:/OneDrive/Project/Samchon/framework/cpp/samchon/library/CombinedPermutationGenerator.hpp</label>
        <link refid="CombinedPermutationGenerator.hpp"/>
        <childnode refid="998" relation="include">
        </childnode>
        <childnode refid="999" relation="include">
        </childnode>
      </node>
      <node id="998">
        <label>samchon/API.hpp</label>
        <link refid="d9/d8f/API_8hpp_source"/>
      </node>
      <node id="1000">
        <label>vector</label>
      </node>
      <node id="999">
        <label>samchon/library/CaseGenerator.hpp</label>
        <link refid="d2/da3/CaseGenerator_8hpp_source"/>
        <childnode refid="998" relation="include">
        </childnode>
        <childnode refid="1000" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <innerclass refid="dc/db2/classsamchon_1_1library_1_1CombinedPermutationGenerator" prot="public">samchon::library::CombinedPermutationGenerator</innerclass>
    <innernamespace refid="db/df1/namespacesamchon">samchon</innernamespace>
    <innernamespace refid="d8/dd4/namespacesamchon_1_1library">samchon::library</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;samchon/API.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;samchon/library/CaseGenerator.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="db/df1/namespacesamchon" kindref="compound">samchon</ref></highlight></codeline>
<codeline lineno="7"><highlight class="normal">{</highlight></codeline>
<codeline lineno="8"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">library</highlight></codeline>
<codeline lineno="9"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="21" refid="dc/db2/classsamchon_1_1library_1_1CombinedPermutationGenerator" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">SAMCHON_FRAMEWORK_API<sp/><ref refid="dc/db2/classsamchon_1_1library_1_1CombinedPermutationGenerator" kindref="compound">CombinedPermutationGenerator</ref></highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="de/ddf/classsamchon_1_1library_1_1CaseGenerator" kindref="compound">CaseGenerator</ref></highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="de/ddf/classsamchon_1_1library_1_1CaseGenerator" kindref="compound">CaseGenerator</ref><sp/><ref refid="de/ddf/classsamchon_1_1library_1_1CaseGenerator" kindref="compound">super</ref>;</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="dc/db2/classsamchon_1_1library_1_1CombinedPermutationGenerator" kindref="compound">CombinedPermutationGenerator</ref>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>n,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>r);</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>~<ref refid="dc/db2/classsamchon_1_1library_1_1CombinedPermutationGenerator" kindref="compound">CombinedPermutationGenerator</ref>()<sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>operator[](</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>-&gt;<sp/>std::vector&lt;size_t&gt;<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="39"><highlight class="normal">};</highlight></codeline>
    </programlisting>
    <location file="D:/OneDrive/Project/Samchon/framework/cpp/samchon/library/CombinedPermutationGenerator.hpp"/>
  </compounddef>
</doxygen>
