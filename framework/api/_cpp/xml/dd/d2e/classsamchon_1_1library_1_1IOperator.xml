<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.10">
  <compounddef id="dd/d2e/classsamchon_1_1library_1_1IOperator" kind="class" language="C++" prot="public" abstract="yes">
    <compoundname>samchon::library::IOperator</compoundname>
    <includes refid="dc/d77/IOperator_8hpp" local="no">IOperator.hpp</includes>
    <templateparamlist>
      <param>
        <type>typename</type>
        <declname>_Ty</declname>
        <defname>_Ty</defname>
      </param>
    </templateparamlist>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="dd/d2e/classsamchon_1_1library_1_1IOperator_1a2199a0ba71edab42e6e67ec78ccec766" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>IOperator</definition>
        <argsstring>()</argsstring>
        <name>IOperator</name>
        <briefdescription>
<para>Default Constructor. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/OneDrive/Project/Samchon/framework/cpp/samchon/library/IOperator.hpp" line="129" column="1" bodyfile="D:/OneDrive/Project/Samchon/framework/cpp/samchon/library/IOperator.hpp" bodystart="129" bodyend="131"/>
      </memberdef>
      <memberdef kind="function" id="dd/d2e/classsamchon_1_1library_1_1IOperator_1a3da3a4cfa91daf144e828fa521760ed5" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>virtual ~IOperator</definition>
        <argsstring>()=default</argsstring>
        <name>~IOperator</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/OneDrive/Project/Samchon/framework/cpp/samchon/library/IOperator.hpp" line="132" column="1"/>
      </memberdef>
      <memberdef kind="function" id="dd/d2e/classsamchon_1_1library_1_1IOperator_1a2f2fad2d62c605c849433333eaf78908" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>auto</type>
        <definition>virtual auto operator&lt;</definition>
        <argsstring>(const IOperator &amp;) const  -&gt; bool=0</argsstring>
        <name>operator&lt;</name>
        <param>
          <type>const <ref refid="dd/d2e/classsamchon_1_1library_1_1IOperator" kindref="compound">IOperator</ref> &amp;</type>
        </param>
        <briefdescription>
<para>Less. </para>        </briefdescription>
        <detaileddescription>
<para>Overrides method less.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>obj</parametername>
</parameternamelist>
<parameterdescription>
<para>The object to compare. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The object is less than this. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/OneDrive/Project/Samchon/framework/cpp/samchon/library/IOperator.hpp" line="141" column="1"/>
      </memberdef>
      <memberdef kind="function" id="dd/d2e/classsamchon_1_1library_1_1IOperator_1a43984ee2f1b4ff734bea3c115e537df5" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>auto</type>
        <definition>virtual auto operator==</definition>
        <argsstring>(const IOperator &amp;) const  -&gt; bool=0</argsstring>
        <name>operator==</name>
        <param>
          <type>const <ref refid="dd/d2e/classsamchon_1_1library_1_1IOperator" kindref="compound">IOperator</ref> &amp;</type>
        </param>
        <briefdescription>
<para>Equal. </para>        </briefdescription>
        <detaileddescription>
<para>Overrides methods equal.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>obj</parametername>
</parameternamelist>
<parameterdescription>
<para>The object to compare. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The object is equal with this. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/OneDrive/Project/Samchon/framework/cpp/samchon/library/IOperator.hpp" line="150" column="1"/>
      </memberdef>
      <memberdef kind="function" id="dd/d2e/classsamchon_1_1library_1_1IOperator_1ae273f3bac13988da7cf7b96e0bc7edbe" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>auto</type>
        <definition>auto operator!=</definition>
        <argsstring>(const IOperator&lt; _Ty &gt; &amp;obj) const  -&gt; bool</argsstring>
        <name>operator!=</name>
        <param>
          <type>const <ref refid="dd/d2e/classsamchon_1_1library_1_1IOperator" kindref="compound">IOperator</ref>&lt; _Ty &gt; &amp;</type>
          <declname>obj</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/OneDrive/Project/Samchon/framework/cpp/samchon/library/IOperator.hpp" line="152" column="1" bodyfile="D:/OneDrive/Project/Samchon/framework/cpp/samchon/library/IOperator.hpp" bodystart="152" bodyend="155"/>
      </memberdef>
      <memberdef kind="function" id="dd/d2e/classsamchon_1_1library_1_1IOperator_1a996f356a61486e37249ddb50f06e5961" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>auto</type>
        <definition>auto operator&lt;=</definition>
        <argsstring>(const IOperator&lt; _Ty &gt; &amp;obj) const  -&gt; bool</argsstring>
        <name>operator&lt;=</name>
        <param>
          <type>const <ref refid="dd/d2e/classsamchon_1_1library_1_1IOperator" kindref="compound">IOperator</ref>&lt; _Ty &gt; &amp;</type>
          <declname>obj</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/OneDrive/Project/Samchon/framework/cpp/samchon/library/IOperator.hpp" line="156" column="1" bodyfile="D:/OneDrive/Project/Samchon/framework/cpp/samchon/library/IOperator.hpp" bodystart="156" bodyend="159"/>
      </memberdef>
      <memberdef kind="function" id="dd/d2e/classsamchon_1_1library_1_1IOperator_1a234184fa9acae8653c6b70c8f2e0095f" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>auto</type>
        <definition>auto operator&gt;</definition>
        <argsstring>(const IOperator&lt; _Ty &gt; &amp;obj) const  -&gt; bool</argsstring>
        <name>operator&gt;</name>
        <param>
          <type>const <ref refid="dd/d2e/classsamchon_1_1library_1_1IOperator" kindref="compound">IOperator</ref>&lt; _Ty &gt; &amp;</type>
          <declname>obj</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/OneDrive/Project/Samchon/framework/cpp/samchon/library/IOperator.hpp" line="160" column="1" bodyfile="D:/OneDrive/Project/Samchon/framework/cpp/samchon/library/IOperator.hpp" bodystart="160" bodyend="163"/>
      </memberdef>
      <memberdef kind="function" id="dd/d2e/classsamchon_1_1library_1_1IOperator_1aa9921f5a139b8406e8a18e772e3175c6" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>auto</type>
        <definition>auto operator&gt;=</definition>
        <argsstring>(const IOperator&lt; _Ty &gt; &amp;obj) const  -&gt; bool</argsstring>
        <name>operator&gt;=</name>
        <param>
          <type>const <ref refid="dd/d2e/classsamchon_1_1library_1_1IOperator" kindref="compound">IOperator</ref>&lt; _Ty &gt; &amp;</type>
          <declname>obj</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/OneDrive/Project/Samchon/framework/cpp/samchon/library/IOperator.hpp" line="164" column="1" bodyfile="D:/OneDrive/Project/Samchon/framework/cpp/samchon/library/IOperator.hpp" bodystart="164" bodyend="167"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Interface for comparision operator. </para>    </briefdescription>
    <detaileddescription>
<para><ref refid="dd/d2e/classsamchon_1_1library_1_1IOperator" kindref="compound">IOperator</ref> is a template class makes enalbe to realizing all compare operators by only overriding operator&lt; and operator== methods. </para><para><itemizedlist>
<listitem><para>[!=] -&gt; [NOT ==] </para></listitem>
<listitem><para>[&lt;=] -&gt; [&lt; OR ==] </para></listitem>
<listitem><para>[&gt;] -&gt; [NOT &lt; AND NOT ==] </para></listitem>
<listitem><para>[&gt;=] -&gt; [NOT &lt;]</para></listitem>
</itemizedlist>
</para><para>Methods operator&lt; and operator== are abstract. Overrides them. </para><para><simplesect kind="note"><para>If you want to realize all comparison operators without inheritance and specifying clear type of parameter, you can use following macros instead.</para></simplesect>
<itemizedlist>
<listitem><para>OPERATOR_METHODS_INLINE(_Ty) </para></listitem>
<listitem><para>OPERATOR_METHODS_HEADER(_Ty) </para></listitem>
<listitem><para>OPERATOR_METHODS_BODY(_Class, _Ty)</para></listitem>
</itemizedlist>
<simplesect kind="see"><para><ref refid="d8/dd4/namespacesamchon_1_1library" kindref="compound">samchon::library</ref> </para></simplesect>
<simplesect kind="author"><para>Jeongho Nam </para></simplesect>
</para>    </detaileddescription>
    <location file="D:/OneDrive/Project/Samchon/framework/cpp/samchon/library/IOperator.hpp" line="124" column="1" bodyfile="D:/OneDrive/Project/Samchon/framework/cpp/samchon/library/IOperator.hpp" bodystart="123" bodyend="168"/>
    <listofallmembers>
      <member refid="dd/d2e/classsamchon_1_1library_1_1IOperator_1a2199a0ba71edab42e6e67ec78ccec766" prot="public" virt="non-virtual"><scope>samchon::library::IOperator</scope><name>IOperator</name></member>
      <member refid="dd/d2e/classsamchon_1_1library_1_1IOperator_1ae273f3bac13988da7cf7b96e0bc7edbe" prot="public" virt="non-virtual"><scope>samchon::library::IOperator</scope><name>operator!=</name></member>
      <member refid="dd/d2e/classsamchon_1_1library_1_1IOperator_1a2f2fad2d62c605c849433333eaf78908" prot="public" virt="pure-virtual"><scope>samchon::library::IOperator</scope><name>operator&lt;</name></member>
      <member refid="dd/d2e/classsamchon_1_1library_1_1IOperator_1a996f356a61486e37249ddb50f06e5961" prot="public" virt="non-virtual"><scope>samchon::library::IOperator</scope><name>operator&lt;=</name></member>
      <member refid="dd/d2e/classsamchon_1_1library_1_1IOperator_1a43984ee2f1b4ff734bea3c115e537df5" prot="public" virt="pure-virtual"><scope>samchon::library::IOperator</scope><name>operator==</name></member>
      <member refid="dd/d2e/classsamchon_1_1library_1_1IOperator_1a234184fa9acae8653c6b70c8f2e0095f" prot="public" virt="non-virtual"><scope>samchon::library::IOperator</scope><name>operator&gt;</name></member>
      <member refid="dd/d2e/classsamchon_1_1library_1_1IOperator_1aa9921f5a139b8406e8a18e772e3175c6" prot="public" virt="non-virtual"><scope>samchon::library::IOperator</scope><name>operator&gt;=</name></member>
      <member refid="dd/d2e/classsamchon_1_1library_1_1IOperator_1a3da3a4cfa91daf144e828fa521760ed5" prot="public" virt="virtual"><scope>samchon::library::IOperator</scope><name>~IOperator</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
