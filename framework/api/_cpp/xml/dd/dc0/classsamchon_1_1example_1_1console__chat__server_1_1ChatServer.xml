<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.10">
  <compounddef id="dd/dc0/classsamchon_1_1example_1_1console__chat__server_1_1ChatServer" kind="class" language="C++" prot="public">
    <compoundname>samchon::example::console_chat_server::ChatServer</compoundname>
    <basecompoundref refid="d4/de8/classsamchon_1_1protocol_1_1IServer" prot="public" virt="non-virtual">IServer</basecompoundref>
    <basecompoundref refid="d4/dcf/classsamchon_1_1protocol_1_1IProtocol" prot="public" virt="non-virtual">IProtocol</basecompoundref>
    <includes refid="d8/de7/console__chat__server_2ChatServer_8hpp" local="no">ChatServer.hpp</includes>
      <sectiondef kind="private-type">
      <memberdef kind="typedef" id="dd/dc0/classsamchon_1_1example_1_1console__chat__server_1_1ChatServer_1a32a4044bf67e6cec64c8927b9845d70d" prot="private" static="no">
        <type><ref refid="d4/de8/classsamchon_1_1protocol_1_1IServer" kindref="compound">protocol::IServer</ref></type>
        <definition>typedef protocol::IServer super</definition>
        <argsstring></argsstring>
        <name>super</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/OneDrive/Project/Samchon/framework/cpp/samchon/examples/console_chat_server/ChatServer.hpp" line="35" column="1" bodyfile="D:/OneDrive/Project/Samchon/framework/cpp/samchon/examples/console_chat_server/ChatServer.hpp" bodystart="35" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="dd/dc0/classsamchon_1_1example_1_1console__chat__server_1_1ChatServer_1a2a4916689a5528ecf3eae2ca316cd915" prot="private" static="no" mutable="no">
        <type>std::set&lt; <ref refid="d2/d3b/classsamchon_1_1example_1_1console__chat__server_1_1ChatClient" kindref="compound">ChatClient</ref> * &gt;</type>
        <definition>std::set&lt;ChatClient*&gt; clientSet</definition>
        <argsstring></argsstring>
        <name>clientSet</name>
        <briefdescription>
<para>List of clients. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/OneDrive/Project/Samchon/framework/cpp/samchon/examples/console_chat_server/ChatServer.hpp" line="40" column="1" bodyfile="D:/OneDrive/Project/Samchon/framework/cpp/samchon/examples/console_chat_server/ChatServer.hpp" bodystart="40" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="dd/dc0/classsamchon_1_1example_1_1console__chat__server_1_1ChatServer_1aa47a1e0fb698e176c911886c4be8db5c" prot="private" static="no" mutable="no">
        <type><ref refid="df/d85/classsamchon_1_1library_1_1RWMutex" kindref="compound">library::RWMutex</ref></type>
        <definition>library::RWMutex rwMutex</definition>
        <argsstring></argsstring>
        <name>rwMutex</name>
        <briefdescription>
<para>A rw_mutex managing clientSet. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/OneDrive/Project/Samchon/framework/cpp/samchon/examples/console_chat_server/ChatServer.hpp" line="45" column="1" bodyfile="D:/OneDrive/Project/Samchon/framework/cpp/samchon/examples/console_chat_server/ChatServer.hpp" bodystart="45" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="dd/dc0/classsamchon_1_1example_1_1console__chat__server_1_1ChatServer_1a3efcb4d7f0dec135758e81ceb5daca09" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>ChatServer</definition>
        <argsstring>()</argsstring>
        <name>ChatServer</name>
        <briefdescription>
<para>Default Constructor. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/OneDrive/Project/Samchon/framework/cpp/samchon/examples/console_chat_server/ChatServer.hpp" line="51" column="1" bodyfile="D:/OneDrive/Project/Samchon/framework/cpp/samchon/examples/console_chat_server/ChatServer.cpp" bodystart="12" bodyend="15"/>
      </memberdef>
      <memberdef kind="function" id="dd/dc0/classsamchon_1_1example_1_1console__chat__server_1_1ChatServer_1a118775211b8615df62392fe5f00d519f" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>virtual ~ChatServer</definition>
        <argsstring>()=default</argsstring>
        <name>~ChatServer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/OneDrive/Project/Samchon/framework/cpp/samchon/examples/console_chat_server/ChatServer.hpp" line="52" column="1"/>
      </memberdef>
      <memberdef kind="function" id="dd/dc0/classsamchon_1_1example_1_1console__chat__server_1_1ChatServer_1a2b6b68a782100ec950c8ac520b34c93b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void eraseClient</definition>
        <argsstring>(ChatClient *client)</argsstring>
        <name>eraseClient</name>
        <param>
          <type><ref refid="d2/d3b/classsamchon_1_1example_1_1console__chat__server_1_1ChatClient" kindref="compound">ChatClient</ref> *</type>
          <declname>client</declname>
        </param>
        <briefdescription>
<para>Erase client when disconnected. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/OneDrive/Project/Samchon/framework/cpp/samchon/examples/console_chat_server/ChatServer.hpp" line="57" column="1" bodyfile="D:/OneDrive/Project/Samchon/framework/cpp/samchon/examples/console_chat_server/ChatServer.cpp" bodystart="25" bodyend="29"/>
      </memberdef>
      <memberdef kind="function" id="dd/dc0/classsamchon_1_1example_1_1console__chat__server_1_1ChatServer_1a9ffd4676a78b6120f6f7c464f6cd41c2" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void replyData</definition>
        <argsstring>(std::shared_ptr&lt; protocol::Invoke &gt;) override</argsstring>
        <name>replyData</name>
        <param>
          <type>std::shared_ptr&lt; <ref refid="d8/d82/classsamchon_1_1protocol_1_1Invoke" kindref="compound">protocol::Invoke</ref> &gt;</type>
        </param>
        <briefdescription>
<para>Handling replied message. </para>        </briefdescription>
        <detaileddescription>
<para>When got a message from a client, sends the message to all clients.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>invoke</parametername>
</parameternamelist>
<parameterdescription>
<para>An invoke message represents a chat. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/OneDrive/Project/Samchon/framework/cpp/samchon/examples/console_chat_server/ChatServer.hpp" line="80" column="1" bodyfile="D:/OneDrive/Project/Samchon/framework/cpp/samchon/examples/console_chat_server/ChatServer.cpp" bodystart="31" bodyend="34"/>
      </memberdef>
      <memberdef kind="function" id="dd/dc0/classsamchon_1_1example_1_1console__chat__server_1_1ChatServer_1a17eab70a0db6bcfd8d1966f8100bcbb7" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void sendData</definition>
        <argsstring>(std::shared_ptr&lt; protocol::Invoke &gt;) override</argsstring>
        <name>sendData</name>
        <param>
          <type>std::shared_ptr&lt; <ref refid="d8/d82/classsamchon_1_1protocol_1_1Invoke" kindref="compound">protocol::Invoke</ref> &gt;</type>
        </param>
        <briefdescription>
<para>Sending a message. </para>        </briefdescription>
        <detaileddescription>
<para>Send a message to all clients. Called by <ref refid="dd/dc0/classsamchon_1_1example_1_1console__chat__server_1_1ChatServer_1a9ffd4676a78b6120f6f7c464f6cd41c2" kindref="member">replyData()</ref>.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>invoke</parametername>
</parameternamelist>
<parameterdescription>
<para>An invoke message represents a chat. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/OneDrive/Project/Samchon/framework/cpp/samchon/examples/console_chat_server/ChatServer.hpp" line="88" column="1" bodyfile="D:/OneDrive/Project/Samchon/framework/cpp/samchon/examples/console_chat_server/ChatServer.cpp" bodystart="35" bodyend="41"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="dd/dc0/classsamchon_1_1example_1_1console__chat__server_1_1ChatServer_1a9e46fee91e74f8880b70712ac4e7a6d2" prot="protected" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>auto</type>
        <definition>virtual auto PORT</definition>
        <argsstring>() const  -&gt; int override</argsstring>
        <name>PORT</name>
        <reimplements refid="d4/de8/classsamchon_1_1protocol_1_1IServer_1a323a09d6b1b257bfcce9cac1b2650bcf">PORT</reimplements>
        <briefdescription>
<para>Port number: #33749. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/OneDrive/Project/Samchon/framework/cpp/samchon/examples/console_chat_server/ChatServer.hpp" line="63" column="1" bodyfile="D:/OneDrive/Project/Samchon/framework/cpp/samchon/examples/console_chat_server/ChatServer.hpp" bodystart="63" bodyend="66"/>
      </memberdef>
      <memberdef kind="function" id="dd/dc0/classsamchon_1_1example_1_1console__chat__server_1_1ChatServer_1aafb1dd6d4582bcc50a40a6fe17e85c80" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void addClient</definition>
        <argsstring>(protocol::Socket *socket) override</argsstring>
        <name>addClient</name>
        <reimplements refid="d4/de8/classsamchon_1_1protocol_1_1IServer_1a89a707ebf106e0e2cecfee911c45cd6a">addClient</reimplements>
        <param>
          <type>protocol::Socket *</type>
          <declname>socket</declname>
        </param>
        <briefdescription>
<para>Add a client. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/OneDrive/Project/Samchon/framework/cpp/samchon/examples/console_chat_server/ChatServer.hpp" line="71" column="1" bodyfile="D:/OneDrive/Project/Samchon/framework/cpp/samchon/examples/console_chat_server/ChatServer.cpp" bodystart="16" bodyend="24"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>A chat server. </para>    </briefdescription>
    <detaileddescription>
<para><simplesect kind="author"><para>Jeongho Nam </para></simplesect>
</para>    </detaileddescription>
    <inheritancegraph>
      <node id="1023">
        <label>IProtocol</label>
        <link refid="d4/dcf/classsamchon_1_1protocol_1_1IProtocol"/>
      </node>
      <node id="1022">
        <label>IServer</label>
        <link refid="d4/de8/classsamchon_1_1protocol_1_1IServer"/>
      </node>
      <node id="1021">
        <label>ChatServer</label>
        <link refid="dd/dc0/classsamchon_1_1example_1_1console__chat__server_1_1ChatServer"/>
        <childnode refid="1022" relation="public-inheritance">
        </childnode>
        <childnode refid="1023" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1026">
        <label>IProtocol</label>
        <link refid="d4/dcf/classsamchon_1_1protocol_1_1IProtocol"/>
      </node>
      <node id="1025">
        <label>IServer</label>
        <link refid="d4/de8/classsamchon_1_1protocol_1_1IServer"/>
      </node>
      <node id="1024">
        <label>ChatServer</label>
        <link refid="dd/dc0/classsamchon_1_1example_1_1console__chat__server_1_1ChatServer"/>
        <childnode refid="1025" relation="public-inheritance">
        </childnode>
        <childnode refid="1026" relation="public-inheritance">
        </childnode>
        <childnode refid="1027" relation="usage">
          <edgelabel>rwMutex</edgelabel>
        </childnode>
      </node>
      <node id="1027">
        <label>RWMutex</label>
        <link refid="df/d85/classsamchon_1_1library_1_1RWMutex"/>
      </node>
    </collaborationgraph>
    <location file="D:/OneDrive/Project/Samchon/framework/cpp/samchon/examples/console_chat_server/ChatServer.hpp" line="33" column="1" bodyfile="D:/OneDrive/Project/Samchon/framework/cpp/samchon/examples/console_chat_server/ChatServer.hpp" bodystart="30" bodyend="89"/>
    <listofallmembers>
      <member refid="d4/de8/classsamchon_1_1protocol_1_1IServer_1a2a20eac5e103a9e3be2dab523c2775e3" prot="protected" virt="non-virtual"><scope>samchon::example::console_chat_server::ChatServer</scope><name>acceptor</name></member>
      <member refid="dd/dc0/classsamchon_1_1example_1_1console__chat__server_1_1ChatServer_1aafb1dd6d4582bcc50a40a6fe17e85c80" prot="protected" virt="virtual"><scope>samchon::example::console_chat_server::ChatServer</scope><name>addClient</name></member>
      <member refid="dd/dc0/classsamchon_1_1example_1_1console__chat__server_1_1ChatServer_1a3efcb4d7f0dec135758e81ceb5daca09" prot="public" virt="non-virtual"><scope>samchon::example::console_chat_server::ChatServer</scope><name>ChatServer</name></member>
      <member refid="dd/dc0/classsamchon_1_1example_1_1console__chat__server_1_1ChatServer_1a2a4916689a5528ecf3eae2ca316cd915" prot="private" virt="non-virtual"><scope>samchon::example::console_chat_server::ChatServer</scope><name>clientSet</name></member>
      <member refid="d4/de8/classsamchon_1_1protocol_1_1IServer_1a5ae591df94fc66ccb85cbb6565368bca" prot="public" virt="virtual"><scope>samchon::example::console_chat_server::ChatServer</scope><name>close</name></member>
      <member refid="dd/dc0/classsamchon_1_1example_1_1console__chat__server_1_1ChatServer_1a2b6b68a782100ec950c8ac520b34c93b" prot="public" virt="non-virtual"><scope>samchon::example::console_chat_server::ChatServer</scope><name>eraseClient</name></member>
      <member refid="d4/dcf/classsamchon_1_1protocol_1_1IProtocol_1a6258c530c328dc119e698bb7e7fe222a" prot="public" virt="non-virtual"><scope>samchon::example::console_chat_server::ChatServer</scope><name>IProtocol</name></member>
      <member refid="d4/de8/classsamchon_1_1protocol_1_1IServer_1acb43fd3ca9cd70ea120b70772668410e" prot="public" virt="non-virtual"><scope>samchon::example::console_chat_server::ChatServer</scope><name>IServer</name></member>
      <member refid="d4/de8/classsamchon_1_1protocol_1_1IServer_1a4f40efeae64b5ccb29406a0f8f9e0ce6" prot="protected" virt="virtual"><scope>samchon::example::console_chat_server::ChatServer</scope><name>MY_IP</name></member>
      <member refid="d4/de8/classsamchon_1_1protocol_1_1IServer_1a9e8555112049fc2b4945120b3c45f8ab" prot="public" virt="virtual"><scope>samchon::example::console_chat_server::ChatServer</scope><name>open</name></member>
      <member refid="dd/dc0/classsamchon_1_1example_1_1console__chat__server_1_1ChatServer_1a9e46fee91e74f8880b70712ac4e7a6d2" prot="protected" virt="virtual"><scope>samchon::example::console_chat_server::ChatServer</scope><name>PORT</name></member>
      <member refid="dd/dc0/classsamchon_1_1example_1_1console__chat__server_1_1ChatServer_1a9ffd4676a78b6120f6f7c464f6cd41c2" prot="public" virt="virtual"><scope>samchon::example::console_chat_server::ChatServer</scope><name>replyData</name></member>
      <member refid="d4/dcf/classsamchon_1_1protocol_1_1IProtocol_1a8debd8a0f208dbf9778fe66248443317" prot="public" virt="virtual" ambiguityscope="samchon::protocol::IProtocol::"><scope>samchon::example::console_chat_server::ChatServer</scope><name>replyData</name></member>
      <member refid="dd/dc0/classsamchon_1_1example_1_1console__chat__server_1_1ChatServer_1aa47a1e0fb698e176c911886c4be8db5c" prot="private" virt="non-virtual"><scope>samchon::example::console_chat_server::ChatServer</scope><name>rwMutex</name></member>
      <member refid="dd/dc0/classsamchon_1_1example_1_1console__chat__server_1_1ChatServer_1a17eab70a0db6bcfd8d1966f8100bcbb7" prot="public" virt="virtual"><scope>samchon::example::console_chat_server::ChatServer</scope><name>sendData</name></member>
      <member refid="d4/dcf/classsamchon_1_1protocol_1_1IProtocol_1ac531693224b79ece2762da1e52bec0b6" prot="public" virt="virtual" ambiguityscope="samchon::protocol::IProtocol::"><scope>samchon::example::console_chat_server::ChatServer</scope><name>sendData</name></member>
      <member refid="dd/dc0/classsamchon_1_1example_1_1console__chat__server_1_1ChatServer_1a32a4044bf67e6cec64c8927b9845d70d" prot="private" virt="non-virtual"><scope>samchon::example::console_chat_server::ChatServer</scope><name>super</name></member>
      <member refid="dd/dc0/classsamchon_1_1example_1_1console__chat__server_1_1ChatServer_1a118775211b8615df62392fe5f00d519f" prot="public" virt="virtual"><scope>samchon::example::console_chat_server::ChatServer</scope><name>~ChatServer</name></member>
      <member refid="d4/dcf/classsamchon_1_1protocol_1_1IProtocol_1a51a537c2b3a6ff5eb7b5ed859cc062ad" prot="public" virt="virtual"><scope>samchon::example::console_chat_server::ChatServer</scope><name>~IProtocol</name></member>
      <member refid="d4/de8/classsamchon_1_1protocol_1_1IServer_1a7eb5d612e27167a8359bc3ee5045e6c8" prot="public" virt="virtual"><scope>samchon::example::console_chat_server::ChatServer</scope><name>~IServer</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
