<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.10">
  <compounddef id="d3/dc8/classsamchon_1_1protocol_1_1IClient" kind="class" language="C++" prot="public">
    <compoundname>samchon::protocol::IClient</compoundname>
    <basecompoundref refid="d4/dcf/classsamchon_1_1protocol_1_1IProtocol" prot="public" virt="virtual">IProtocol</basecompoundref>
    <derivedcompoundref refid="d2/d3b/classsamchon_1_1example_1_1console__chat__server_1_1ChatClient" prot="public" virt="non-virtual">ChatClient</derivedcompoundref>
    <derivedcompoundref refid="df/d42/classsamchon_1_1protocol_1_1ExternalSystem" prot="public" virt="virtual">ExternalSystem</derivedcompoundref>
    <derivedcompoundref refid="d7/d51/classsamchon_1_1protocol_1_1IWebClient" prot="public" virt="virtual">IWebClient</derivedcompoundref>
    <derivedcompoundref refid="db/d72/classsamchon_1_1protocol_1_1ServerConnector" prot="public" virt="virtual">ServerConnector</derivedcompoundref>
    <derivedcompoundref refid="df/d31/classsamchon_1_1protocol_1_1service_1_1Client" prot="public" virt="non-virtual">Client</derivedcompoundref>
    <includes refid="d3/d69/IClient_8hpp" local="no">IClient.hpp</includes>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="d3/dc8/classsamchon_1_1protocol_1_1IClient_1ac7cf6524b1019c7fbaa210c68c05726e" prot="protected" static="no" mutable="no">
        <type>Socket *</type>
        <definition>Socket* socket</definition>
        <argsstring></argsstring>
        <name>socket</name>
        <briefdescription>
<para>Socket for network I/O. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/OneDrive/Project/Samchon/framework/cpp/samchon/protocol/IClient.hpp" line="57" column="1" bodyfile="D:/OneDrive/Project/Samchon/framework/cpp/samchon/protocol/IClient.hpp" bodystart="57" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d3/dc8/classsamchon_1_1protocol_1_1IClient_1a4d6d58450d4b275cd6200bdcfb05403f" prot="protected" static="no" mutable="no">
        <type>std::mutex *</type>
        <definition>std::mutex* sendMtx</definition>
        <argsstring></argsstring>
        <name>sendMtx</name>
        <briefdescription>
<para>A mutex for sending message. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/OneDrive/Project/Samchon/framework/cpp/samchon/protocol/IClient.hpp" line="62" column="1" bodyfile="D:/OneDrive/Project/Samchon/framework/cpp/samchon/protocol/IClient.hpp" bodystart="62" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="d3/dc8/classsamchon_1_1protocol_1_1IClient_1a68ee198dd9bae714dab92bb6374f8d95" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>auto</type>
        <definition>auto BUFFER_SIZE</definition>
        <argsstring>() const  -&gt; size_t</argsstring>
        <name>BUFFER_SIZE</name>
        <briefdescription>
<para>Buffer size of network I/O. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/OneDrive/Project/Samchon/framework/cpp/samchon/protocol/IClient.hpp" line="67" column="1" bodyfile="D:/OneDrive/Project/Samchon/framework/cpp/samchon/protocol/IClient.cpp" bodystart="23" bodyend="23"/>
      </memberdef>
      <memberdef kind="function" id="d3/dc8/classsamchon_1_1protocol_1_1IClient_1aa3ceab5738d3d60e963bb177d5847f14" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void _replyData</definition>
        <argsstring>(std::shared_ptr&lt; Invoke &gt;)</argsstring>
        <name>_replyData</name>
        <reimplementedby refid="db/d10/classsamchon_1_1protocol_1_1slave_1_1ParallelSystem_1a4e41d2fe8f51be83cd64fff3246c7a75">_replyData</reimplementedby>
        <reimplementedby refid="d1/d4a/classsamchon_1_1protocol_1_1slave_1_1SlaveSystem_1a4e41d2fe8f51be83cd64fff3246c7a75">_replyData</reimplementedby>
        <reimplementedby refid="d9/d6b/classsamchon_1_1protocol_1_1master_1_1ParallelSystem_1a4e41d2fe8f51be83cd64fff3246c7a75">_replyData</reimplementedby>
        <param>
          <type>std::shared_ptr&lt; <ref refid="d8/d82/classsamchon_1_1protocol_1_1Invoke" kindref="compound">Invoke</ref> &gt;</type>
        </param>
        <briefdescription>
<para>A method for pre-processing replied <ref refid="d8/d82/classsamchon_1_1protocol_1_1Invoke" kindref="compound">Invoke</ref> message. </para>        </briefdescription>
        <detaileddescription>
<para>You can realize a pre-processing about the replied <ref refid="d8/d82/classsamchon_1_1protocol_1_1Invoke" kindref="compound">Invoke</ref> message by overriding the <ref refid="d3/dc8/classsamchon_1_1protocol_1_1IClient_1aa3ceab5738d3d60e963bb177d5847f14" kindref="member">IClient::_replyData()</ref>. </para><para>Archiving a history log, filtering and truncating, let handling the message with a new thread, calculating performance by estimating elapsed time about the <ref refid="d8/d82/classsamchon_1_1protocol_1_1Invoke" kindref="compound">Invoke</ref> message, and so on. Anything you can define pre-processing works before <ref refid="d4/dcf/classsamchon_1_1protocol_1_1IProtocol_1a8debd8a0f208dbf9778fe66248443317" kindref="member">IProtocol::replyData()</ref>. <itemizedlist>
<listitem><para>Archive history log -&gt; cloud service </para></listitem>
<listitem><para>Estimating performance -&gt; distributed and parallel processing system</para></listitem>
</itemizedlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>invoke</parametername>
</parameternamelist>
<parameterdescription>
<para>An invoke message to be pre-processed and shifted to <ref refid="d4/dcf/classsamchon_1_1protocol_1_1IProtocol_1a8debd8a0f208dbf9778fe66248443317" kindref="member">IProtocol::replyData()</ref>. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/OneDrive/Project/Samchon/framework/cpp/samchon/protocol/IClient.hpp" line="109" column="1" bodyfile="D:/OneDrive/Project/Samchon/framework/cpp/samchon/protocol/IClient.cpp" bodystart="245" bodyend="248"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="d3/dc8/classsamchon_1_1protocol_1_1IClient_1a7d9b7003a224b6050168eede30b914a4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>IClient</definition>
        <argsstring>()</argsstring>
        <name>IClient</name>
        <briefdescription>
<para>Default Constructor. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/OneDrive/Project/Samchon/framework/cpp/samchon/protocol/IClient.hpp" line="76" column="1" bodyfile="D:/OneDrive/Project/Samchon/framework/cpp/samchon/protocol/IClient.cpp" bodystart="28" bodyend="32"/>
      </memberdef>
      <memberdef kind="function" id="d3/dc8/classsamchon_1_1protocol_1_1IClient_1ae8742ef162f2aee85a2e7b4b7ef1357f" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>~IClient</definition>
        <argsstring>()</argsstring>
        <name>~IClient</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/OneDrive/Project/Samchon/framework/cpp/samchon/protocol/IClient.hpp" line="77" column="1" bodyfile="D:/OneDrive/Project/Samchon/framework/cpp/samchon/protocol/IClient.cpp" bodystart="33" bodyend="38"/>
      </memberdef>
      <memberdef kind="function" id="d3/dc8/classsamchon_1_1protocol_1_1IClient_1a458bbe4cf81360301586b2e62a7f9dd2" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void listen</definition>
        <argsstring>()</argsstring>
        <name>listen</name>
        <reimplementedby refid="d7/d51/classsamchon_1_1protocol_1_1IWebClient_1ad07c8fef1588c3764bdcf1c12f7c0dae">listen</reimplementedby>
        <briefdescription>
<para>Listens message from a related system. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>It holds (monopolies) a thread. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/OneDrive/Project/Samchon/framework/cpp/samchon/protocol/IClient.hpp" line="84" column="1" bodyfile="D:/OneDrive/Project/Samchon/framework/cpp/samchon/protocol/IClient.cpp" bodystart="43" bodyend="65"/>
      </memberdef>
      <memberdef kind="function" id="d3/dc8/classsamchon_1_1protocol_1_1IClient_1a7e9e36d7847d933abbf3b1eda35aab0d" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void sendData</definition>
        <argsstring>(std::shared_ptr&lt; Invoke &gt;)</argsstring>
        <name>sendData</name>
        <reimplements refid="d4/dcf/classsamchon_1_1protocol_1_1IProtocol_1ac531693224b79ece2762da1e52bec0b6">sendData</reimplements>
        <reimplementedby refid="d7/d51/classsamchon_1_1protocol_1_1IWebClient_1ae1f443b90ed04fff9af40c8e7015e314">sendData</reimplementedby>
        <reimplementedby refid="df/d31/classsamchon_1_1protocol_1_1service_1_1Client_1a7e9e36d7847d933abbf3b1eda35aab0d">sendData</reimplementedby>
        <reimplementedby refid="db/d2d/classsamchon_1_1protocol_1_1master_1_1DistributedSystem_1ae1f443b90ed04fff9af40c8e7015e314">sendData</reimplementedby>
        <param>
          <type>std::shared_ptr&lt; <ref refid="d8/d82/classsamchon_1_1protocol_1_1Invoke" kindref="compound">Invoke</ref> &gt;</type>
        </param>
        <briefdescription>
<para>Sends message to a related system. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>invoke</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="d8/d82/classsamchon_1_1protocol_1_1Invoke" kindref="compound">Invoke</ref> message to send </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/OneDrive/Project/Samchon/framework/cpp/samchon/protocol/IClient.hpp" line="91" column="1" bodyfile="D:/OneDrive/Project/Samchon/framework/cpp/samchon/protocol/IClient.cpp" bodystart="224" bodyend="244"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="d3/dc8/classsamchon_1_1protocol_1_1IClient_1a98863727177d52127cef8a90d974f7d9" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void handleString</definition>
        <argsstring>(ByteArray &amp;, std::string &amp;, std::shared_ptr&lt; Invoke &gt; &amp;)</argsstring>
        <name>handleString</name>
        <param>
          <type><ref refid="dc/d37/classsamchon_1_1ByteArray" kindref="compound">ByteArray</ref> &amp;</type>
        </param>
        <param>
          <type>std::string &amp;</type>
        </param>
        <param>
          <type>std::shared_ptr&lt; <ref refid="d8/d82/classsamchon_1_1protocol_1_1Invoke" kindref="compound">Invoke</ref> &gt; &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/OneDrive/Project/Samchon/framework/cpp/samchon/protocol/IClient.hpp" line="112" column="1" bodyfile="D:/OneDrive/Project/Samchon/framework/cpp/samchon/protocol/IClient.cpp" bodystart="66" bodyend="152"/>
      </memberdef>
      <memberdef kind="function" id="d3/dc8/classsamchon_1_1protocol_1_1IClient_1a5a3280f260feb8873798ab3aed56f9c1" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void handleBinary</definition>
        <argsstring>(ByteArray &amp;, std::string &amp;, std::shared_ptr&lt; Invoke &gt; &amp;)</argsstring>
        <name>handleBinary</name>
        <param>
          <type><ref refid="dc/d37/classsamchon_1_1ByteArray" kindref="compound">ByteArray</ref> &amp;</type>
        </param>
        <param>
          <type>std::string &amp;</type>
        </param>
        <param>
          <type>std::shared_ptr&lt; <ref refid="d8/d82/classsamchon_1_1protocol_1_1Invoke" kindref="compound">Invoke</ref> &gt; &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/OneDrive/Project/Samchon/framework/cpp/samchon/protocol/IClient.hpp" line="113" column="1" bodyfile="D:/OneDrive/Project/Samchon/framework/cpp/samchon/protocol/IClient.cpp" bodystart="153" bodyend="219"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>An interface for a client. </para>    </briefdescription>
    <detaileddescription>
<para><ref refid="d3/dc8/classsamchon_1_1protocol_1_1IClient" kindref="compound">IClient</ref> is an interface not only for a physical client, but also a driver for a client in a physical server. </para><para><itemizedlist>
<listitem>
<para><ref refid="d4/de8/classsamchon_1_1protocol_1_1IServer" kindref="compound">IServer</ref>:addClient()  <itemizedlist>
<listitem>
<para><ref refid="d9/d35/classsamchon_1_1protocol_1_1service_1_1Server" kindref="compound">service::Server</ref> -&gt; <ref refid="df/d87/classsamchon_1_1protocol_1_1service_1_1User" kindref="compound">service::User</ref> -&gt; <ref refid="df/d31/classsamchon_1_1protocol_1_1service_1_1Client" kindref="compound">service::Client</ref>  </para></listitem>
<listitem>
<para><ref refid="d8/d47/classsamchon_1_1protocol_1_1ExternalClientArray" kindref="compound">ExternalClientArray</ref> (A physical server) -&gt; <ref refid="dc/dfd/classsamchon_1_1protocol_1_1ExternalClient" kindref="compound">ExternalClient</ref> (A driver of a client)  </para></listitem>
</itemizedlist>
</para></listitem>
</itemizedlist>
</para><para><ref refid="d3/dc8/classsamchon_1_1protocol_1_1IClient" kindref="compound">IClient</ref> is one of the basic 3 + 1 components that can make any type of network system in Samchon Framework with <ref refid="d4/dcf/classsamchon_1_1protocol_1_1IProtocol" kindref="compound">IProtocol</ref> and <ref refid="d4/de8/classsamchon_1_1protocol_1_1IServer" kindref="compound">IServer</ref>. Looking around classes in Samchon Framework, you can see all classes related with client are implemented from the <ref refid="d3/dc8/classsamchon_1_1protocol_1_1IClient" kindref="compound">IClient</ref>. </para><para><ref refid="d3/dc8/classsamchon_1_1protocol_1_1IClient" kindref="compound">IClient</ref> takes a role of real network I/O. <ref refid="d3/dc8/classsamchon_1_1protocol_1_1IClient" kindref="compound">IClient</ref> sends data to otherside network system from <ref refid="d4/dcf/classsamchon_1_1protocol_1_1IProtocol_1ac531693224b79ece2762da1e52bec0b6" kindref="member">IProtocol::sendData()</ref>. <ref refid="d3/dc8/classsamchon_1_1protocol_1_1IClient" kindref="compound">IClient</ref> also gets data from otherside network system, generates standard <ref refid="d8/d82/classsamchon_1_1protocol_1_1Invoke" kindref="compound">Invoke</ref> message from parsing the replied data and shift the <ref refid="d8/d82/classsamchon_1_1protocol_1_1Invoke" kindref="compound">Invoke</ref> message to <ref refid="d4/dcf/classsamchon_1_1protocol_1_1IProtocol_1a8debd8a0f208dbf9778fe66248443317" kindref="member">IProtocol::replyData()</ref>. </para><para><image type="html" name="protocol_interface.png"></image>
 <image type="latex" name="protocol_interface.png"></image>
</para><para><simplesect kind="author"><para>Jeongho Nam </para></simplesect>
</para>    </detaileddescription>
    <inheritancegraph>
      <node id="1807">
        <label>IProtocol</label>
        <link refid="d4/dcf/classsamchon_1_1protocol_1_1IProtocol"/>
      </node>
      <node id="1826">
        <label>ServerConnector</label>
        <link refid="db/d72/classsamchon_1_1protocol_1_1ServerConnector"/>
        <childnode refid="1806" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1810">
        <label>ExternalClient</label>
        <link refid="dc/dfd/classsamchon_1_1protocol_1_1ExternalClient"/>
        <childnode refid="1809" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1819">
        <label>DistributedSlaveServerMediator</label>
        <link refid="d0/d1d/classsamchon_1_1protocol_1_1master_1_1DistributedSlaveServerMediator"/>
        <childnode refid="1818" relation="public-inheritance">
        </childnode>
        <childnode refid="1823" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1821">
        <label>ParallelSystem</label>
        <link refid="d9/d6b/classsamchon_1_1protocol_1_1master_1_1ParallelSystem"/>
        <childnode refid="1809" relation="public-inheritance">
        </childnode>
        <childnode refid="1822" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1814">
        <label>DistributedClientServerMediator</label>
        <link refid="dd/d60/classsamchon_1_1protocol_1_1master_1_1DistributedClientServerMediator"/>
        <childnode refid="1813" relation="public-inheritance">
        </childnode>
        <childnode refid="1823" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1824">
        <label>IWebClient</label>
        <link refid="d7/d51/classsamchon_1_1protocol_1_1IWebClient"/>
        <childnode refid="1806" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1823">
        <label>DistributedSlaveSystemMediator</label>
        <link refid="d5/d46/classsamchon_1_1protocol_1_1master_1_1DistributedSlaveSystemMediator"/>
        <childnode refid="1822" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1827">
        <label>Client</label>
        <link refid="df/d31/classsamchon_1_1protocol_1_1service_1_1Client"/>
        <childnode refid="1806" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1809">
        <label>ExternalSystem</label>
        <link refid="df/d42/classsamchon_1_1protocol_1_1ExternalSystem"/>
        <childnode refid="1806" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1806">
        <label>IClient</label>
        <link refid="d3/dc8/classsamchon_1_1protocol_1_1IClient"/>
        <childnode refid="1807" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1825">
        <label>WebServerConnector</label>
        <link refid="d8/dc2/classsamchon_1_1protocol_1_1WebServerConnector"/>
        <childnode refid="1824" relation="public-inheritance">
        </childnode>
        <childnode refid="1826" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1813">
        <label>SlaveClient</label>
        <link refid="db/d5d/classsamchon_1_1protocol_1_1slave_1_1SlaveClient"/>
        <childnode refid="1810" relation="public-inheritance">
        </childnode>
        <childnode refid="1822" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1817">
        <label>ParallelServer</label>
        <link refid="d1/da1/classsamchon_1_1protocol_1_1master_1_1ParallelServer"/>
        <childnode refid="1815" relation="public-inheritance">
        </childnode>
        <childnode refid="1818" relation="public-inheritance">
        </childnode>
        <childnode refid="1821" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1808">
        <label>ChatClient</label>
        <link refid="d2/d3b/classsamchon_1_1example_1_1console__chat__server_1_1ChatClient"/>
        <childnode refid="1806" relation="public-inheritance">
        </childnode>
        <childnode refid="1827" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1815">
        <label>ExternalServer</label>
        <link refid="df/d4a/classsamchon_1_1protocol_1_1ExternalServer"/>
        <childnode refid="1809" relation="public-inheritance">
        </childnode>
        <childnode refid="1826" relation="private-inheritance">
        </childnode>
      </node>
      <node id="1812">
        <label>ParallelClient</label>
        <link refid="d9/dda/classsamchon_1_1protocol_1_1master_1_1ParallelClient"/>
        <childnode refid="1810" relation="public-inheritance">
        </childnode>
        <childnode refid="1813" relation="public-inheritance">
        </childnode>
        <childnode refid="1821" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1818">
        <label>SlaveServer</label>
        <link refid="d2/da4/classsamchon_1_1protocol_1_1slave_1_1SlaveServer"/>
        <childnode refid="1815" relation="public-inheritance">
        </childnode>
        <childnode refid="1822" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1822">
        <label>SlaveSystem</label>
        <link refid="d1/d4a/classsamchon_1_1protocol_1_1slave_1_1SlaveSystem"/>
        <childnode refid="1809" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1816">
        <label>DistributedServer</label>
        <link refid="d7/da8/classsamchon_1_1protocol_1_1master_1_1DistributedServer"/>
        <childnode refid="1815" relation="public-inheritance">
        </childnode>
        <childnode refid="1820" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1811">
        <label>DistributedClient</label>
        <link refid="d2/d26/classsamchon_1_1protocol_1_1master_1_1DistributedClient"/>
        <childnode refid="1810" relation="public-inheritance">
        </childnode>
        <childnode refid="1820" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1820">
        <label>DistributedSystem</label>
        <link refid="db/d2d/classsamchon_1_1protocol_1_1master_1_1DistributedSystem"/>
        <childnode refid="1809" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1829">
        <label>IProtocol</label>
        <link refid="d4/dcf/classsamchon_1_1protocol_1_1IProtocol"/>
      </node>
      <node id="1828">
        <label>IClient</label>
        <link refid="d3/dc8/classsamchon_1_1protocol_1_1IClient"/>
        <childnode refid="1829" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="D:/OneDrive/Project/Samchon/framework/cpp/samchon/protocol/IClient.hpp" line="52" column="1" bodyfile="D:/OneDrive/Project/Samchon/framework/cpp/samchon/protocol/IClient.hpp" bodystart="50" bodyend="114"/>
    <listofallmembers>
      <member refid="d3/dc8/classsamchon_1_1protocol_1_1IClient_1aa3ceab5738d3d60e963bb177d5847f14" prot="protected" virt="virtual"><scope>samchon::protocol::IClient</scope><name>_replyData</name></member>
      <member refid="d3/dc8/classsamchon_1_1protocol_1_1IClient_1a68ee198dd9bae714dab92bb6374f8d95" prot="protected" virt="virtual"><scope>samchon::protocol::IClient</scope><name>BUFFER_SIZE</name></member>
      <member refid="d3/dc8/classsamchon_1_1protocol_1_1IClient_1a5a3280f260feb8873798ab3aed56f9c1" prot="private" virt="non-virtual"><scope>samchon::protocol::IClient</scope><name>handleBinary</name></member>
      <member refid="d3/dc8/classsamchon_1_1protocol_1_1IClient_1a98863727177d52127cef8a90d974f7d9" prot="private" virt="non-virtual"><scope>samchon::protocol::IClient</scope><name>handleString</name></member>
      <member refid="d3/dc8/classsamchon_1_1protocol_1_1IClient_1a7d9b7003a224b6050168eede30b914a4" prot="public" virt="non-virtual"><scope>samchon::protocol::IClient</scope><name>IClient</name></member>
      <member refid="d4/dcf/classsamchon_1_1protocol_1_1IProtocol_1a6258c530c328dc119e698bb7e7fe222a" prot="public" virt="non-virtual"><scope>samchon::protocol::IClient</scope><name>IProtocol</name></member>
      <member refid="d3/dc8/classsamchon_1_1protocol_1_1IClient_1a458bbe4cf81360301586b2e62a7f9dd2" prot="public" virt="virtual"><scope>samchon::protocol::IClient</scope><name>listen</name></member>
      <member refid="d4/dcf/classsamchon_1_1protocol_1_1IProtocol_1a8debd8a0f208dbf9778fe66248443317" prot="public" virt="virtual"><scope>samchon::protocol::IClient</scope><name>replyData</name></member>
      <member refid="d3/dc8/classsamchon_1_1protocol_1_1IClient_1a7e9e36d7847d933abbf3b1eda35aab0d" prot="public" virt="virtual"><scope>samchon::protocol::IClient</scope><name>sendData</name></member>
      <member refid="d3/dc8/classsamchon_1_1protocol_1_1IClient_1a4d6d58450d4b275cd6200bdcfb05403f" prot="protected" virt="non-virtual"><scope>samchon::protocol::IClient</scope><name>sendMtx</name></member>
      <member refid="d3/dc8/classsamchon_1_1protocol_1_1IClient_1ac7cf6524b1019c7fbaa210c68c05726e" prot="protected" virt="non-virtual"><scope>samchon::protocol::IClient</scope><name>socket</name></member>
      <member refid="d3/dc8/classsamchon_1_1protocol_1_1IClient_1ae8742ef162f2aee85a2e7b4b7ef1357f" prot="public" virt="virtual"><scope>samchon::protocol::IClient</scope><name>~IClient</name></member>
      <member refid="d4/dcf/classsamchon_1_1protocol_1_1IProtocol_1a51a537c2b3a6ff5eb7b5ed859cc062ad" prot="public" virt="virtual"><scope>samchon::protocol::IClient</scope><name>~IProtocol</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
